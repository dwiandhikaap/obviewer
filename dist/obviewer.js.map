{"version":3,"file":"obviewer.js","sources":["../src/osu/Graphics/HUD/GameHUD.ts","../src/osu/Gameplay/GameInstance.ts","../src/osu/Mods/Mods.ts","../src/renderer/AudioHandler.ts","../node_modules/tslib/tslib.es6.js","../src/settings/Settings.ts","../src/renderer/Assets/Assets.ts","../src/math/Vector2.ts","../src/renderer/Drawable/HitObject/SliderTextureGenerator.ts","../src/renderer/Layers/Background.ts","../src/util/osu-calculation.ts","../src/util/color.ts","../src/renderer/Drawable/HitObject/DrawableHitCircle.ts","../src/renderer/Drawable/HitObject/DrawableSlider.ts","../src/renderer/Drawable/Replay/CursorNode.ts","../src/renderer/Drawable/Replay/MainCursor.ts","../src/renderer/Drawable/Graphics/Grid.ts","../src/renderer/Drawable/HitObject/DrawableSpinner.ts","../src/renderer/Drawable/DrawableGenerator.ts","../src/renderer/Layers/BeatmapField.ts","../src/renderer/Layers/HUDOverlay.ts","../src/renderer/Layers/ReplayField.ts","../src/renderer/Renderer.ts","../src/osu/Replay/ReplayNodes.ts","../src/osu/Replay/ReplayData.ts","../src/osu/Replay/Replay.ts","../src/osu/Beatmap/BeatmapAttributes/Colours.ts","../src/osu/Beatmap/BeatmapAttributes/Difficulty.ts","../src/osu/Beatmap/BeatmapAttributes/Editor.ts","../src/osu/Beatmap/BeatmapAttributes/Events.ts","../src/osu/Beatmap/BeatmapAttributes/General.ts","../src/math/MathHelper.ts","../src/math/PathApproximator.ts","../src/math/PathHelper.ts","../src/math/Path.ts","../src/math/EasingFunction.ts","../src/math/Easer.ts","../src/math/Animation.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/Drawable/DrawableHitObject.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/Drawable/DrawableHitCircle.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/HitObject.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/HitCircle.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/Drawable/DrawableSlider.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/Slider.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/Drawable/DrawableSpinner.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects/Spinner.ts","../src/osu/Beatmap/BeatmapAttributes/HitObjects.ts","../src/osu/Beatmap/BeatmapAttributes/Metadata.ts","../src/osu/Beatmap/BeatmapAttributes/TimingPoints.ts","../src/osu/Beatmap/Beatmap.ts","../src/index.ts"],"sourcesContent":["import { Renderer } from \"../../../renderer/Renderer\";\r\n\r\nclass GameHUD {\r\n    private _time: number;\r\n    public get time(): number {\r\n        return this._time;\r\n    }\r\n    public set time(time: number) {\r\n        this._time = time;\r\n    }\r\n\r\n    constructor(private renderer: Renderer) {\r\n        renderer.loadHUD(this);\r\n    }\r\n}\r\n\r\nexport { GameHUD };\r\n","import { Renderer } from \"../../renderer/Renderer\";\r\nimport { Beatmap } from \"../Beatmap/Beatmap\";\r\nimport { GameHUD } from \"../Graphics/HUD/GameHUD\";\r\nimport { Replay } from \"../Replay/Replay\";\r\n\r\nclass GameInstance {\r\n    private renderer: Renderer;\r\n    private beatmap: Beatmap;\r\n    private replay: Replay;\r\n\r\n    private _time: number;\r\n    public get time(): number {\r\n        return this._time;\r\n    }\r\n    public set time(time: number) {\r\n        this._time = time;\r\n\r\n        this.gameHUD.time = time;\r\n        this.draw(time);\r\n    }\r\n\r\n    private gameHUD: GameHUD;\r\n\r\n    constructor(renderer: Renderer) {\r\n        this.renderer = renderer;\r\n\r\n        this.gameHUD = new GameHUD(this.renderer);\r\n    }\r\n\r\n    public loadBeatmap(beatmap: Beatmap) {\r\n        this.beatmap = beatmap;\r\n    }\r\n\r\n    public loadReplay(replay: Replay) {\r\n        this.replay = replay;\r\n    }\r\n\r\n    private draw(time: number) {\r\n        const hitObjects = this.beatmap.hitObjects.objects;\r\n        for (let i = 0; i < hitObjects.length; i++) {\r\n            hitObjects[i].draw(time);\r\n        }\r\n    }\r\n}\r\n\r\nexport { GameInstance };\r\n","enum Mod {\r\n    None = 0,\r\n    NoFail = 1 << 0,\r\n    Easy = 1 << 1,\r\n    TouchDevice = 1 << 2,\r\n    Hidden = 1 << 3,\r\n    HardRock = 1 << 4,\r\n    SuddenDeath = 1 << 5,\r\n    DoubleTime = 1 << 6,\r\n    Relax = 1 << 7,\r\n    HalfTime = 1 << 8,\r\n    Nightcore = 1 << 9,\r\n    Flashlight = 1 << 10,\r\n    Autoplay = 1 << 11,\r\n    SpunOut = 1 << 12,\r\n    Relax2 = 1 << 13,\r\n    Perfect = 1 << 14,\r\n    TargetPractice = 1 << 23,\r\n    ScoreV2 = 1 << 29,\r\n}\r\n\r\nclass Mods {\r\n    public constrain = true;\r\n\r\n    private _numeric: number;\r\n    private _list = new Array<Mod>();\r\n\r\n    constructor(value: number = 0) {\r\n        this._numeric = value;\r\n    }\r\n\r\n    public get reducedListString() {\r\n        let reducedMods = reduceCombinedMods(this._list);\r\n\r\n        return reducedMods.map((mod) => Mod[mod]);\r\n    }\r\n\r\n    public get listString() {\r\n        return this._list.map((mod) => Mod[mod]);\r\n    }\r\n\r\n    public get reducedList() {\r\n        return reduceCombinedMods(this._list);\r\n    }\r\n\r\n    public get list() {\r\n        return this._list;\r\n    }\r\n\r\n    public get numeric() {\r\n        return this._numeric;\r\n    }\r\n\r\n    public set numeric(value: number) {\r\n        if (value <= 0) {\r\n            this._numeric = 0;\r\n            this._list = [Mod.None];\r\n            return;\r\n        }\r\n\r\n        let result = new Array<Mod>();\r\n        let sum = 0;\r\n\r\n        value\r\n            .toString(2)\r\n            .split(\"\")\r\n            .map(Number)\r\n            .reverse()\r\n            .forEach((currentValue, index) => {\r\n                if (currentValue === 1) {\r\n                    result.push(currentValue << index);\r\n                    sum += currentValue << index;\r\n                }\r\n            });\r\n\r\n        this._numeric = sum;\r\n        this._list = result.reverse();\r\n    }\r\n\r\n    public contains(list: Array<Mod>): boolean;\r\n    public contains(mod: Mod): boolean;\r\n    public contains(arg: Mod | Array<Mod>): boolean {\r\n        if (arg instanceof Array) {\r\n            let result = true;\r\n            for (const mod of arg) {\r\n                if ((mod & this._numeric) !== mod) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        return (arg & this._numeric) === arg;\r\n    }\r\n\r\n    public set(mod: Mod, enable: boolean) {\r\n        if (enable) {\r\n            return this.enable(mod);\r\n        } else {\r\n            return this.disable(mod);\r\n        }\r\n    }\r\n\r\n    private _enable(...mods: Mod[]) {\r\n        mods.forEach((mod) => (this.numeric |= mod));\r\n    }\r\n\r\n    private _disable(...mods: Mod[]) {\r\n        mods.forEach((mod) => (this.numeric ^= this.numeric & mod));\r\n    }\r\n\r\n    public enable(mod: Mod) {\r\n        if (!this.constrain) {\r\n            this._enable(mod);\r\n            return;\r\n        }\r\n\r\n        if ([Mod.DoubleTime, Mod.Nightcore, Mod.HalfTime].includes(mod)) {\r\n            this._disable(Mod.DoubleTime, Mod.Nightcore, Mod.HalfTime);\r\n        }\r\n\r\n        if ([Mod.Easy, Mod.HardRock].includes(mod)) {\r\n            this._disable(Mod.Easy, Mod.HardRock);\r\n        }\r\n\r\n        if (\r\n            [\r\n                Mod.NoFail,\r\n                Mod.Relax,\r\n                Mod.Relax2,\r\n                Mod.SuddenDeath,\r\n                Mod.Perfect,\r\n            ].includes(mod)\r\n        ) {\r\n            this._disable(\r\n                Mod.NoFail,\r\n                Mod.Relax,\r\n                Mod.Relax2,\r\n                Mod.SuddenDeath,\r\n                Mod.Perfect\r\n            );\r\n            this._disable(Mod.Autoplay);\r\n        }\r\n\r\n        if ([Mod.SpunOut, Mod.Relax2].includes(mod)) {\r\n            this._disable(Mod.SpunOut, Mod.Relax2);\r\n        }\r\n\r\n        if ([Mod.Autoplay].includes(mod)) {\r\n            this._disable(\r\n                Mod.NoFail,\r\n                Mod.Relax,\r\n                Mod.Relax2,\r\n                Mod.SuddenDeath,\r\n                Mod.Perfect\r\n            );\r\n        }\r\n\r\n        if (mod === Mod.Nightcore) {\r\n            this._enable(Mod.DoubleTime);\r\n        }\r\n\r\n        if (mod === Mod.Perfect) {\r\n            this._enable(Mod.SuddenDeath);\r\n        }\r\n\r\n        this._enable(mod);\r\n        return this;\r\n    }\r\n\r\n    public disable(mod: Mod) {\r\n        if (!this.constrain) {\r\n            this._disable(mod);\r\n            return;\r\n        }\r\n\r\n        if (mod === Mod.DoubleTime) {\r\n            this._disable(Mod.Nightcore);\r\n        }\r\n\r\n        if (mod === Mod.Nightcore && this.contains(Mod.Nightcore)) {\r\n            this._disable(Mod.DoubleTime);\r\n        }\r\n\r\n        if (mod === Mod.SuddenDeath) {\r\n            this._disable(Mod.Perfect);\r\n        }\r\n\r\n        if (mod === Mod.Perfect && this.contains(Mod.Perfect)) {\r\n            this._disable(Mod.SuddenDeath);\r\n        }\r\n\r\n        this._disable(mod);\r\n        return this;\r\n    }\r\n}\r\n\r\n/* Reduce from \"[..., Nightcore, DoubleTime]\" to [..., Nightcore] */\r\nfunction reduceCombinedMods(list: Array<Mod>) {\r\n    const result = [...list];\r\n\r\n    // fancy oneliners are bad bro\r\n    if (result.includes(Mod.Nightcore)) {\r\n        const index = result.indexOf(Mod.DoubleTime);\r\n        if (index !== -1) {\r\n            result.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    if (result.includes(Mod.Perfect)) {\r\n        const index = result.indexOf(Mod.SuddenDeath);\r\n        if (index !== -1) {\r\n            result.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport { Mods, Mod };\r\n","interface AudioOptions {\r\n    playbackRate: number;\r\n    offsetMS: number;\r\n    volume: number;\r\n}\r\n\r\nclass AudioHandler {\r\n    public loadedAudio: { [name: string]: { audio: HTMLAudioElement; options: AudioOptions } } = {};\r\n    constructor() {}\r\n\r\n    loadAudio(name: string, audio: HTMLAudioElement, options?: Partial<AudioOptions>) {\r\n        const defaultOptions: AudioOptions = {\r\n            offsetMS: 0,\r\n            volume: 1,\r\n            playbackRate: 1,\r\n        };\r\n        Object.assign(defaultOptions, options);\r\n\r\n        this.loadedAudio[name] = { audio, options: defaultOptions };\r\n        const { playbackRate, offsetMS, volume } = defaultOptions;\r\n\r\n        audio.playbackRate = playbackRate ?? 1;\r\n        audio.currentTime = offsetMS / 1000;\r\n        audio.volume = volume ?? 1.0;\r\n    }\r\n\r\n    playAudio(name: string) {\r\n        const audio = this.loadedAudio[name].audio;\r\n        if (!audio) return;\r\n        audio.play();\r\n    }\r\n\r\n    pauseAudio(name: string) {\r\n        const audio = this.loadedAudio[name].audio;\r\n        if (!audio) return;\r\n        audio.pause();\r\n    }\r\n\r\n    stopAudio(name: string) {\r\n        const audio = this.loadedAudio[name].audio;\r\n        if (!audio) return;\r\n        audio.pause();\r\n        audio.currentTime = this.loadedAudio[name].options.offsetMS / 1000;\r\n    }\r\n\r\n    setAudioOptions(name: string, options: Partial<AudioOptions>) {\r\n        const audio = this.loadedAudio[name].audio;\r\n        if (!audio) return;\r\n\r\n        const audioOptions = this.loadedAudio[name].options;\r\n        Object.assign(audioOptions, options);\r\n\r\n        const { playbackRate, offsetMS, volume } = audioOptions;\r\n        audio.playbackRate = playbackRate ?? audio.playbackRate;\r\n        audio.currentTime = audio.currentTime + offsetMS / 1000;\r\n        audio.volume = volume ?? audio.volume;\r\n    }\r\n\r\n    seekAudio(name: string, time: number) {\r\n        const { audio, options } = this.loadedAudio[name];\r\n        if (!audio) return;\r\n        const offsetMS = options.offsetMS;\r\n        audio.currentTime = time + offsetMS / 1000;\r\n    }\r\n\r\n    getAudioCurrentTimeMS(name: string) {\r\n        const audio = this.loadedAudio[name].audio;\r\n        if (!audio) return 0;\r\n        return audio.currentTime * 1000;\r\n    }\r\n\r\n    getAudioOffsetMS(name: string) {\r\n        const audio = this.loadedAudio[name].audio;\r\n        if (!audio) return 0;\r\n        return this.loadedAudio[name].options.offsetMS;\r\n    }\r\n}\r\n\r\nexport { AudioHandler };\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// fuck generics\r\n\r\ninterface ISettings {\r\n    AppWidth: number;\r\n    AppHeight: number;\r\n    AudioVolume: number;\r\n    AudioOffset: number;\r\n    AudioAutoSyncEnabled: boolean;\r\n    AudioAutoSyncThresholdMS: number;\r\n    AudioAutoSyncDetectIssue: boolean;\r\n    EnableGameCheck: boolean;\r\n}\r\ntype SettingsParameters = keyof ISettings;\r\ntype SettingsValue<T extends SettingsParameters> = ISettings[keyof Pick<ISettings, T>];\r\ntype SettingsListener<T extends SettingsParameters> = (value: SettingsValue<T>) => void;\r\ntype SettingsListenerDict = { [T in SettingsParameters]: SettingsListener<T>[] };\r\n\r\nclass Settings {\r\n    private static _settings: ISettings = {\r\n        AppWidth: 1280,\r\n        AppHeight: 720,\r\n        AudioVolume: 60,\r\n        AudioOffset: 0,\r\n        AudioAutoSyncEnabled: true,\r\n        AudioAutoSyncThresholdMS: 150,\r\n        AudioAutoSyncDetectIssue: true,\r\n        EnableGameCheck: false,\r\n    };\r\n\r\n    private static listeners: SettingsListenerDict = {} as SettingsListenerDict; // hack mode\r\n\r\n    public static addUpdateListener<K extends keyof ISettings>(key: K, listener: (value: SettingsValue<K>) => void) {\r\n        if (this.listeners[key] === undefined) {\r\n            this.listeners[key] = [];\r\n        }\r\n\r\n        (this.listeners[key] as SettingsListener<K>[]).push(listener);\r\n    }\r\n\r\n    public static removeUpdateListener<K extends keyof ISettings>(key: K, listener: (value: SettingsValue<K>) => void) {\r\n        if (this.listeners[key] === undefined) {\r\n            return;\r\n        }\r\n\r\n        const index = this.listeners[key]!.findIndex((val) => val === listener);\r\n        index > -1 && this.listeners[key]!.splice(index, 1);\r\n    }\r\n\r\n    public static set<K extends SettingsParameters>(key: K, value: SettingsValue<K>) {\r\n        if (this._settings[key] === value) {\r\n            return;\r\n        }\r\n\r\n        this._settings[key] = value;\r\n        this.notify(key);\r\n    }\r\n\r\n    public static get<K extends SettingsParameters>(key: K) {\r\n        return this._settings[key];\r\n    }\r\n\r\n    public static toString() {\r\n        return JSON.stringify(this._settings);\r\n    }\r\n\r\n    public static fromString(settings: string) {\r\n        const keys = Object.keys(this._settings);\r\n        const newSettings = JSON.parse(settings);\r\n\r\n        for (const key of keys as SettingsParameters[]) {\r\n            if (newSettings[key] === undefined) {\r\n                continue;\r\n            }\r\n\r\n            (this._settings[key] as SettingsValue<typeof key>) = newSettings[key];\r\n        }\r\n    }\r\n\r\n    private static notify<K extends SettingsParameters>(key: K) {\r\n        if (this.listeners[key] === undefined) {\r\n            return;\r\n        }\r\n\r\n        for (let listener of this.listeners[key]! as SettingsListener<K>[]) {\r\n            const value = this._settings[key];\r\n            listener(value);\r\n        }\r\n    }\r\n}\r\n\r\nexport { Settings };\r\n","import { Loader, LoaderResource, Texture, utils } from \"pixi.js\";\r\nimport assetsConfig from \"./assets.json\";\r\n\r\ninterface IAssetsData {\r\n    sync: string[][];\r\n    async: string[][];\r\n}\r\n\r\nclass AssetsLoader {\r\n    private static loaderSync: Loader;\r\n    private static loaderAsync: Loader;\r\n\r\n    public static assets: utils.Dict<LoaderResource> = {};\r\n    private static _cachedTextures: { [key: string]: Texture } = {};\r\n\r\n    private static _staticConstructor = (function () {\r\n        AssetsLoader.loaderSync = new Loader();\r\n        AssetsLoader.loaderAsync = new Loader();\r\n\r\n        const assetsData: IAssetsData = assetsConfig;\r\n\r\n        const syncData = assetsData.sync;\r\n        syncData.forEach((data) => {\r\n            const [assetsName, assetsPath] = data;\r\n            AssetsLoader.loaderSync.add(assetsName, assetsPath);\r\n        });\r\n\r\n        AssetsLoader.loaderSync.onStart.add(() => {\r\n            console.log(\"[Assets Loader] Sync Loader - Start\");\r\n        });\r\n\r\n        AssetsLoader.loaderSync.onComplete.add(() => {\r\n            console.log(\"[Assets Loader] Sync Loader - Completed\");\r\n        });\r\n\r\n        AssetsLoader.loaderAsync.onStart.add(() => {\r\n            console.log(\"[Assets Loader] Async Loader - Start\");\r\n        });\r\n\r\n        AssetsLoader.loaderAsync.onComplete.add(() => {\r\n            console.log(\"[Assets Loader] Async Loader - Completed\");\r\n        });\r\n    })();\r\n\r\n    static async load() {\r\n        this.loadAsync();\r\n        await this.loadSync();\r\n\r\n        for (const key in this.loaderSync.resources) {\r\n            if (this.loaderSync.resources.hasOwnProperty(key)) {\r\n                const element = this.loaderSync.resources[key];\r\n                this.assets[key] = element;\r\n            }\r\n        }\r\n\r\n        for (const key in this.loaderAsync.resources) {\r\n            if (this.loaderAsync.resources.hasOwnProperty(key)) {\r\n                const element = this.loaderAsync.resources[key];\r\n                this.assets[key] = element;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static async loadSync() {\r\n        const loader = new Promise((resolve, reject) => {\r\n            this.loaderSync.onComplete.add(resolve);\r\n            this.loaderSync.onError.add(reject);\r\n\r\n            this.loaderSync.load();\r\n        });\r\n\r\n        await loader;\r\n    }\r\n\r\n    private static loadAsync() {\r\n        this.loaderAsync.load();\r\n    }\r\n\r\n    private static _getCachedTexture(name: string) {\r\n        return this._cachedTextures[name];\r\n    }\r\n\r\n    private static _setCachedTexture(name: string, texture: Texture) {\r\n        this._cachedTextures[name] = texture;\r\n    }\r\n\r\n    // utils.TextureCache is kinda fucky\r\n    public static getTexture(name: string): Texture {\r\n        const cached = this._getCachedTexture(name);\r\n\r\n        if (!cached || !cached.valid) {\r\n            const texture = (this.assets[name].texture || Texture.EMPTY).clone();\r\n            this._setCachedTexture(name, texture);\r\n        }\r\n\r\n        return this._getCachedTexture(name);\r\n    }\r\n}\r\n\r\nexport { AssetsLoader };\r\n","type IAddOverload = {\r\n    (value: number): Vector2;\r\n    (tuple: [number, number]): Vector2;\r\n    (vector: Vector2): Vector2;\r\n};\r\n\r\ntype ISubtractOverload = {\r\n    (value: number): Vector2;\r\n    (tuple: [number, number]): Vector2;\r\n    (vector: Vector2): Vector2;\r\n};\r\n\r\nexport class Vector2 {\r\n    [index: number]: number;\r\n\r\n    constructor(numbers: number[]);\r\n    constructor(x: number, y: number);\r\n    constructor(x: number | number[], y?: number) {\r\n        if (typeof x === \"number\" && y !== undefined) {\r\n            this[0] = x;\r\n            this[1] = y;\r\n        } else if (x instanceof Array) {\r\n            this[0] = x[0];\r\n            this[1] = x[1];\r\n        }\r\n    }\r\n\r\n    add: IAddOverload = (valueOrVector: number | Vector2 | [number, number]): Vector2 => {\r\n        if (typeof valueOrVector === \"number\") {\r\n            return new Vector2(this[0] + valueOrVector, this[1] + valueOrVector);\r\n        }\r\n\r\n        return new Vector2(this[0] + valueOrVector[0], this[1] + valueOrVector[1]);\r\n    };\r\n\r\n    subtract: ISubtractOverload = (valueOrVector: number | Vector2 | [number, number]) => {\r\n        if (typeof valueOrVector === \"number\") {\r\n            return new Vector2(this[0] - valueOrVector, this[1] - valueOrVector);\r\n        }\r\n\r\n        return new Vector2(this[0] - valueOrVector[0], this[1] - valueOrVector[1]);\r\n    };\r\n\r\n    multiply = (scalar: number): Vector2 => {\r\n        return new Vector2(this[0] * scalar, this[1] * scalar);\r\n    };\r\n\r\n    lengthSquared(): number {\r\n        return Math.pow(this[0], 2) + Math.pow(this[1], 2);\r\n    }\r\n\r\n    length(): number {\r\n        return Math.sqrt(this.lengthSquared());\r\n    }\r\n\r\n    dot(vector: Vector2): number {\r\n        return Math.min(this[0] * vector[0] + this[1] * vector[1], 1);\r\n    }\r\n\r\n    normalize(): Vector2 {\r\n        return new Vector2([this[0] / this.length(), this[1] / this.length()]);\r\n    }\r\n\r\n    toArray(): number[] {\r\n        return [this[0], this[1]];\r\n    }\r\n\r\n    toTuple(): [number, number] {\r\n        return [this[0], this[1]];\r\n    }\r\n\r\n    rotate(angle: number): Vector2 {\r\n        return new Vector2(\r\n            this[0] * Math.cos(angle) - this[1] * Math.sin(angle),\r\n            this[0] * Math.sin(angle) + this[1] * Math.cos(angle)\r\n        );\r\n    }\r\n\r\n    clone(): Vector2 {\r\n        return new Vector2(this[0], this[1]);\r\n    }\r\n\r\n    public static From(numbers: [number, number]): Vector2;\r\n    public static From(x: number, y: number): Vector2;\r\n    public static From(numberOrArray: number | number[], y?: number): Vector2 {\r\n        if (numberOrArray instanceof Array) {\r\n            return new Vector2(numberOrArray[0], numberOrArray[1]);\r\n        }\r\n\r\n        return new Vector2(numberOrArray, y!); // typescript bruh moment\r\n    }\r\n\r\n    public static ToArray(vector: Vector2): number[] {\r\n        return [vector[0], vector[1]];\r\n    }\r\n\r\n    public static Normalize(vector: Vector2): Vector2 {\r\n        return new Vector2(\r\n            vector[0] / Math.sqrt(Math.pow(vector[0], 2) + Math.pow(vector[1], 2)),\r\n            vector[1] / Math.sqrt(Math.pow(vector[0], 2) + Math.pow(vector[1], 2))\r\n        );\r\n    }\r\n\r\n    public static PerpendicularRight(vector: Vector2): Vector2 {\r\n        return new Vector2(-vector[1], vector[0]);\r\n    }\r\n\r\n    public static PerpendicularLeft(vector: Vector2): Vector2 {\r\n        return new Vector2(vector[1], -vector[0]);\r\n    }\r\n\r\n    public static Add(vector1: Vector2, vector2: Vector2): Vector2;\r\n    public static Add(vector: Vector2, tuple: [number, number]): Vector2;\r\n    public static Add(vector: Vector2, value: number): Vector2;\r\n    public static Add(vector1: Vector2, vector2OrValue: Vector2 | [number, number] | number): Vector2 {\r\n        if (typeof vector2OrValue === \"number\") {\r\n            return new Vector2(vector1[0] + vector2OrValue, vector1[1] + vector2OrValue);\r\n        }\r\n\r\n        return new Vector2(vector1[0] + vector2OrValue[0], vector1[1] + vector2OrValue[1]);\r\n    }\r\n\r\n    public static Subtract(vector: Vector2, vector2: Vector2): Vector2;\r\n    public static Subtract(vector: Vector2, tuple: [number, number]): Vector2;\r\n    public static Subtract(vector: Vector2, value: number): Vector2;\r\n    public static Subtract(vector1: Vector2, vector2OrValue: Vector2 | [number, number] | number): Vector2 {\r\n        if (typeof vector2OrValue === \"number\") {\r\n            return new Vector2(vector1[0] - vector2OrValue, vector1[1] - vector2OrValue);\r\n        }\r\n\r\n        return new Vector2(vector1[0] - vector2OrValue[0], vector1[1] - vector2OrValue[1]);\r\n    }\r\n\r\n    public static Multiply(vector: Vector2, scalar: number): Vector2 {\r\n        return new Vector2(vector[0] * scalar, vector[1] * scalar);\r\n    }\r\n\r\n    public static DistanceSquared(vector1: Vector2 | [number, number], vector2: Vector2 | [number, number]): number {\r\n        return Math.pow(vector1[0] - vector2[0], 2) + Math.pow(vector1[1] - vector2[1], 2);\r\n    }\r\n\r\n    public static Distance(vector1: Vector2 | [number, number], vector2: Vector2 | [number, number]): number {\r\n        return Math.sqrt(this.DistanceSquared(vector1, vector2));\r\n    }\r\n\r\n    public static LengthSquared(vector: Vector2): number {\r\n        return Math.pow(vector[0], 2) + Math.pow(vector[1], 2);\r\n    }\r\n\r\n    public static Length(vector: Vector2): number {\r\n        return Math.sqrt(this.LengthSquared(vector));\r\n    }\r\n\r\n    public static Midpoint(vector1: Vector2, vector2: Vector2): Vector2 {\r\n        return new Vector2((vector1[0] + vector2[0]) / 2, (vector1[1] + vector2[1]) / 2);\r\n    }\r\n\r\n    public static Dot(vector1: Vector2, vector2: Vector2): number {\r\n        return Math.min(vector1[0] * vector2[0] + vector1[1] * vector2[1], 1);\r\n    }\r\n\r\n    public static Equals(vector1: Vector2, vector2: Vector2): boolean {\r\n        return vector1[0] === vector2[0] && vector1[1] === vector2[1];\r\n    }\r\n\r\n    public static LinearInterpolation(vector1: Vector2, vector2: Vector2, t: number): Vector2 {\r\n        return new Vector2(vector1[0] + (vector2[0] - vector1[0]) * t, vector1[1] + (vector2[1] - vector1[1]) * t);\r\n    }\r\n\r\n    public static CloseEnough(vector1: [number, number], vector2: [number, number], epsilon: number): boolean;\r\n    public static CloseEnough(vector1: [number, number], vector2: Vector2, epsilon: number): boolean;\r\n    public static CloseEnough(vector1: Vector2, vector2: [number, number], epsilon: number): boolean;\r\n    public static CloseEnough(vector1: Vector2, vector2: Vector2, epsilon: number): boolean;\r\n    public static CloseEnough(\r\n        vector1: Vector2 | [number, number],\r\n        vector2: Vector2 | [number, number],\r\n        epsilon: number\r\n    ): boolean {\r\n        return Math.abs(vector1[0] - vector2[0]) < epsilon && Math.abs(vector1[1] - vector2[1]) < epsilon;\r\n    }\r\n\r\n    public static Angle(from: [number, number], to: [number, number]): number;\r\n    public static Angle(from: [number, number], to: Vector2): number;\r\n    public static Angle(from: Vector2, to: [number, number]): number;\r\n    public static Angle(from: Vector2, to: Vector2): number;\r\n    public static Angle(from: Vector2 | [number, number], to: Vector2 | [number, number]): number {\r\n        return Math.atan2(to[1] - from[1], to[0] - from[0]);\r\n    }\r\n}\r\n","import { Geometry, Mesh, Renderer, RenderTexture, Shader } from \"pixi.js\";\r\nimport { Vector2 } from \"../../../math/Vector2\";\r\n\r\n/* \r\n    learning how to render a fucking line with shading in 8 hours CHALLENGE™\r\n*/\r\n\r\nconst JOINS_SUBDIVISION = 32;\r\n\r\nconst CENTER_DEPTH = -1.0;\r\nconst EDGE_DEPTH = 1.0;\r\n\r\nconst vertexShaderSource = `\r\n    attribute vec3 a_position;\r\n\r\n    uniform vec2 u_resolution;\r\n    uniform vec2 u_offset;\r\n    \r\n    void main() {\r\n        // i heard pixi can handle the projection using some uniform but fuck that amirite\r\n\r\n        float x = (a_position[0] + u_offset[0]) / u_resolution[0] * 2.0 - 1.0;\r\n        float y = (a_position[1] + u_offset[1]) / u_resolution[1] * 2.0 - 1.0;\r\n        float z = a_position[2];\r\n\r\n        gl_Position = vec4(x, y, z, 1);\r\n    }\r\n`;\r\n\r\nconst fragmentShaderSource = `\r\n    precision mediump float;\r\n\r\n    vec4 borderColor = vec4(1,1,1,1);\r\n    \r\n    float contrast = 0.5; // is it really called contrast doe ???\r\n    float brightness = 0.75;\r\n\r\n    float bodyEnd = 0.825;\r\n    float borderEnd = 0.925;\r\n    float shadowEnd = 1.0;\r\n\r\n    bool isBody(float u){\r\n        return u >= -1.0 && u < bodyEnd;\r\n    }\r\n\r\n    bool isBorder(float u){\r\n        return u >= bodyEnd && u < borderEnd;\r\n    }\r\n\r\n    bool isShadow(float u){\r\n        return u >= borderEnd && u <= shadowEnd;\r\n    }\r\n\r\n    vec4 getBodyColor(float u){\r\n        float u2 = smoothstep(1.0 + contrast, -1.0 - contrast , u) * brightness;\r\n        return vec4(u2,u2,u2, 1.0);\r\n    }\r\n\r\n    vec4 getShadowColor(float u){\r\n        float alpha = smoothstep(shadowEnd, borderEnd, u) / 2.0;\r\n        return vec4(0,0,0,alpha);\r\n    }\r\n\r\n    void main(){\r\n        float u = gl_FragCoord.z;\r\n\r\n        if(isBody(u)){\r\n            gl_FragColor = getBodyColor(u);\r\n            return;\r\n        }\r\n\r\n        if(isBorder(u)){\r\n            gl_FragColor = borderColor;\r\n            return;\r\n        }\r\n\r\n        if(isShadow(u)){\r\n            gl_FragColor = getShadowColor(u);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // oh no!! rough edges????\r\n    // https://www.youtube.com/watch?v=kXLu_x0SRm4\r\n`;\r\n\r\nfunction calculateQuad(points: Vector2[], radius: number, offset: number = 0) {\r\n    const positions: number[] = [];\r\n    const indices: number[] = [];\r\n\r\n    for (let i = 0; i < points.length - 1; i++) {\r\n        const curr = points[i];\r\n        const next = points[i + 1];\r\n\r\n        const vec = Vector2.Subtract(next, curr);\r\n        const normRight = Vector2.PerpendicularRight(vec).normalize().multiply(radius);\r\n        const normLeft = Vector2.PerpendicularLeft(vec).normalize().multiply(radius);\r\n\r\n        /* something like this, 3 as the start, 4 as the end. \r\n           McOsu has 4 as the start and 3 as the end, but whatever lol\r\n    *   1   3   5\r\n        *---*---*\r\n        |  /|  /|\r\n        | / | / |\r\n        |/  |/  |\r\n        *---*---*\r\n    *   2   4   6\r\n        */\r\n\r\n        const p1 = Vector2.Add(curr, normLeft);\r\n        const p2 = Vector2.Add(next, normLeft);\r\n        const p3 = curr.clone();\r\n        const p4 = next.clone();\r\n        const p5 = Vector2.Add(curr, normRight);\r\n        const p6 = Vector2.Add(next, normRight);\r\n\r\n        for (let j = 0; j < 4; j++) {\r\n            indices.push(offset + i * 6 + j + 0);\r\n            indices.push(offset + i * 6 + j + 1);\r\n            indices.push(offset + i * 6 + j + 2);\r\n        }\r\n\r\n        positions.push(\r\n            p1[0],\r\n            p1[1],\r\n            EDGE_DEPTH,\r\n            p2[0],\r\n            p2[1],\r\n            EDGE_DEPTH,\r\n            p3[0],\r\n            p3[1],\r\n            CENTER_DEPTH,\r\n            p4[0],\r\n            p4[1],\r\n            CENTER_DEPTH,\r\n            p5[0],\r\n            p5[1],\r\n            EDGE_DEPTH,\r\n            p6[0],\r\n            p6[1],\r\n            EDGE_DEPTH\r\n        );\r\n    }\r\n\r\n    return { positions, indices };\r\n}\r\n\r\nfunction calculateJoins(points: Vector2[], radius: number, offset: number = 0) {\r\n    const positions: number[] = [];\r\n    const indices: number[] = [];\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n        const curr = points[i];\r\n        positions.push(curr[0], curr[1], CENTER_DEPTH);\r\n\r\n        for (let j = 0; j < JOINS_SUBDIVISION; j++) {\r\n            const angle = (j / JOINS_SUBDIVISION) * Math.PI * 2;\r\n\r\n            const x = points[i][0] + radius * Math.cos(angle);\r\n            const y = points[i][1] + radius * Math.sin(angle);\r\n            const z = EDGE_DEPTH;\r\n\r\n            positions.push(x, y, z);\r\n        }\r\n\r\n        const indexOffset = offset + i * (JOINS_SUBDIVISION + 1);\r\n        for (let j = 0; j < JOINS_SUBDIVISION; j++) {\r\n            let index1 = 0;\r\n            let index2 = 0 + j + 1;\r\n            let index3 = ((0 + j + 1) % JOINS_SUBDIVISION) + 1;\r\n\r\n            index1 += indexOffset;\r\n            index2 += indexOffset;\r\n            index3 += indexOffset;\r\n\r\n            indices.push(index1, index2, index3);\r\n        }\r\n    }\r\n\r\n    return { positions, indices };\r\n}\r\n\r\nfunction calculateSliderVertices(points: Vector2[], radius: number) {\r\n    let positions: number[] = [];\r\n    let indices: number[] = [];\r\n\r\n    const vertX: number[] = [];\r\n    const vertY: number[] = [];\r\n\r\n    let indicesOffset = 0;\r\n\r\n    const quads = calculateQuad(points, radius, indicesOffset);\r\n    positions = positions.concat(quads.positions);\r\n    indices = indices.concat(quads.indices);\r\n\r\n    indicesOffset += positions.length / 3;\r\n\r\n    const joins = calculateJoins(points, radius, indicesOffset);\r\n    positions = positions.concat(joins.positions);\r\n    indices = indices.concat(joins.indices);\r\n\r\n    for (let i = 0; i < positions.length; i += 2) {\r\n        vertX.push(positions[i]);\r\n        vertY.push(positions[i + 1]);\r\n    }\r\n\r\n    const positionBuffer = new Float32Array(positions);\r\n    const indexBuffer = new Uint16Array(indices);\r\n\r\n    return { positionBuffer, indexBuffer };\r\n}\r\n\r\nfunction calculateMinMax(positions: Float32Array) {\r\n    let tempMinX = positions[0];\r\n    let tempMaxX = positions[0];\r\n    let tempMinY = positions[1];\r\n    let tempMaxY = positions[1];\r\n\r\n    for (let i = 3; i < positions.length; i += 3) {\r\n        if (positions[i] > tempMaxX) {\r\n            tempMaxX = positions[i];\r\n        } else if (positions[i] < tempMinX) {\r\n            tempMinX = positions[i];\r\n        }\r\n\r\n        if (positions[i + 1] > tempMaxY) {\r\n            tempMaxY = positions[i + 1];\r\n        } else if (positions[i + 1] < tempMinY) {\r\n            tempMinY = positions[i + 1];\r\n        }\r\n    }\r\n\r\n    return [tempMinX, tempMaxX, tempMinY, tempMaxY];\r\n}\r\n\r\nclass SliderTextureGenerator {\r\n    public static renderer: Renderer;\r\n\r\n    static setRenderer = (renderer: Renderer) => {\r\n        SliderTextureGenerator.renderer = renderer;\r\n    };\r\n\r\n    static createTexture(points: Vector2[], radius: number) {\r\n        const { positionBuffer, indexBuffer } = calculateSliderVertices(points, radius);\r\n\r\n        const [minX, maxX, minY, maxY] = calculateMinMax(positionBuffer);\r\n        const width = maxX - minX;\r\n        const height = maxY - minY;\r\n\r\n        const geometry = new Geometry();\r\n        geometry.addAttribute(\"a_position\", positionBuffer, 3);\r\n        geometry.addIndex(indexBuffer);\r\n\r\n        const uniform = {\r\n            u_resolution: [width, height],\r\n            u_offset: [-minX, -minY],\r\n        };\r\n\r\n        const shader = Shader.from(vertexShaderSource, fragmentShaderSource, uniform);\r\n        const mesh = new Mesh(geometry, shader);\r\n        mesh.state.depthTest = true;\r\n\r\n        const texture = RenderTexture.create({ width: width, height: height });\r\n        texture.framebuffer.enableDepth();\r\n        const renderer = this.renderer;\r\n\r\n        renderer.render(mesh, { renderTexture: texture });\r\n\r\n        return texture;\r\n    }\r\n}\r\n\r\nexport { SliderTextureGenerator };\r\n","import { Application, Container, Graphics, Sprite, Texture } from \"pixi.js\";\r\n\r\ninterface BackgroundConfig {\r\n    texture?: Texture;\r\n    brightness?: number;\r\n    fit?: \"none\" | \"horizontal\" | \"vertical\";\r\n}\r\n\r\nclass Background extends Container {\r\n    private blackRect = new Graphics();\r\n    private backgroundSprite = new Sprite();\r\n    private _brightness: number = 1;\r\n    private fit = \"none\";\r\n\r\n    get brightness() {\r\n        return this._brightness;\r\n    }\r\n\r\n    set brightness(brightnessValue: number) {\r\n        if (brightnessValue > 1) {\r\n            this._brightness = 1;\r\n        } else if (brightnessValue < 0) {\r\n            this._brightness = 0;\r\n        } else {\r\n            this._brightness = brightnessValue;\r\n        }\r\n\r\n        this.backgroundSprite.alpha = this.brightness;\r\n    }\r\n\r\n    private get canvasWidth() {\r\n        return this.application.view.width;\r\n    }\r\n\r\n    private get canvasHeight() {\r\n        return this.application.view.height;\r\n    }\r\n\r\n    constructor(private application: Application, backgroundConfig?: BackgroundConfig) {\r\n        super();\r\n\r\n        this.blackRect.beginFill(0x000000);\r\n        this.blackRect.drawRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n\r\n        const bgAnchorX = this.canvasWidth / 2;\r\n        const bgAnchorY = this.canvasHeight / 2;\r\n\r\n        this.backgroundSprite.transform.position.set(bgAnchorX, bgAnchorY);\r\n        this.backgroundSprite.anchor.set(0.5, 0.5);\r\n\r\n        this.addChild(this.blackRect);\r\n        this.addChild(this.backgroundSprite);\r\n\r\n        if (!backgroundConfig) return;\r\n\r\n        const { texture, brightness, fit } = backgroundConfig;\r\n\r\n        this._brightness = brightness ?? 1;\r\n        fit && (this.fit = fit);\r\n        texture && this.setImage(texture);\r\n    }\r\n\r\n    setImage(texture: Texture) {\r\n        this.backgroundSprite.alpha = this.brightness;\r\n        this.backgroundSprite.texture = texture;\r\n\r\n        switch (this.fit) {\r\n            case \"horizontal\": {\r\n                const scale = this.canvasWidth / texture.width;\r\n                this.backgroundSprite.scale.set(scale);\r\n                break;\r\n            }\r\n\r\n            case \"vertical\": {\r\n                const scale = this.canvasHeight / texture.height;\r\n                this.backgroundSprite.scale.set(scale);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(timestamp: number) {}\r\n}\r\n\r\nexport { Background };\r\n","function getOsuPixelScale(screenWidth: number, screenHeight: number): number {\r\n    const widthRatio = screenWidth / 512;\r\n    const heightRatio = screenHeight / 384;\r\n\r\n    return Math.min(widthRatio, heightRatio);\r\n}\r\n\r\nfunction calculateFitRatio(fromWidth: number, fromHeight: number, toWidth: number, toHeight: number) {\r\n    const widthRatio = fromWidth / toWidth;\r\n    const heightRatio = fromHeight / toHeight;\r\n\r\n    return Math.min(widthRatio, heightRatio);\r\n}\r\n\r\nexport { getOsuPixelScale, calculateFitRatio };\r\n","export function hexToInt(hex: string): number {\r\n    if (hex.charAt(0) === \"#\") {\r\n        hex = hex.slice(1);\r\n    }\r\n\r\n    if (hex.length != 6) {\r\n        return NaN;\r\n    }\r\n\r\n    return parseInt(hex, 16);\r\n}\r\n\r\nexport function intToRGB(i: number): [number, number, number] {\r\n    const r = (i >> 16) & 0xff;\r\n    const g = (i >> 8) & 0xff;\r\n    const b = i & 0xff;\r\n\r\n    return [r, g, b];\r\n}\r\n\r\nexport function rgbToInt(r: number, g: number, b: number): number {\r\n    return (r << 16) + (g << 8) + b;\r\n}\r\n\r\nexport const RGBToHSB = (r: number, g: number, b: number): [number, number, number] => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    const v = Math.max(r, g, b),\r\n        n = v - Math.min(r, g, b);\r\n    const h = n === 0 ? 0 : n && v === r ? (g - b) / n : v === g ? 2 + (b - r) / n : 4 + (r - g) / n;\r\n    return [60 * (h < 0 ? h + 6 : h), v && (n / v) * 100, v * 100];\r\n};\r\n\r\nexport const HSBToRGB = (h: number, s: number, b: number): [number, number, number] => {\r\n    s /= 100;\r\n    b /= 100;\r\n    const k = (n: number) => (n + h / 60) % 6;\r\n    const f = (n: number) => b * (1 - s * Math.max(0, Math.min(k(n), 4 - k(n), 1)));\r\n    return [255 * f(5), 255 * f(3), 255 * f(1)];\r\n};\r\n","import { Container, Sprite, Text, TextStyle } from \"pixi.js\";\r\nimport { HitCircle } from \"../../../osu/Beatmap/BeatmapAttributes/HitObjects/HitCircle\";\r\nimport { hexToInt } from \"../../../util/color\";\r\nimport { AssetsLoader } from \"../../Assets/Assets\";\r\n\r\nfunction createCircle(hitCircle: HitCircle, radius: number) {\r\n    const { comboCount, colour } = hitCircle;\r\n    const texture = AssetsLoader.getTexture(\"hitcircle\");\r\n\r\n    const hitCircleSprite = new Sprite(texture);\r\n    hitCircleSprite.width = radius * 2;\r\n    hitCircleSprite.height = radius * 2;\r\n    hitCircleSprite.tint = hexToInt(colour);\r\n    hitCircleSprite.anchor.set(0.5, 0.5);\r\n\r\n    const hcOverlayTexture = AssetsLoader.getTexture(\"hitcircleoverlay\");\r\n    const sHCOverlay = new Sprite(hcOverlayTexture);\r\n    sHCOverlay.width = radius * 2;\r\n    sHCOverlay.height = radius * 2;\r\n    sHCOverlay.anchor.set(0.5, 0.5);\r\n\r\n    const style = new TextStyle({\r\n        fill: \"white\",\r\n        fontSize: (radius * 4) / 5,\r\n        strokeThickness: 3,\r\n    });\r\n    const circleNumber = new Text(comboCount.toString(), style);\r\n    circleNumber.anchor.set(0.5, 0.5);\r\n\r\n    const circle = new Container();\r\n    circle.addChild(hitCircleSprite);\r\n    circle.addChild(sHCOverlay);\r\n    circle.addChild(circleNumber);\r\n    circle.alpha = 0.8;\r\n    return circle;\r\n}\r\n\r\nfunction createApproachCircle(radius: number) {\r\n    const texture = AssetsLoader.getTexture(\"approachcircle\");\r\n    const ac = new Sprite(texture);\r\n    ac.width = radius * 2;\r\n    ac.height = radius * 2;\r\n    ac.anchor.set(0.5, 0.5);\r\n\r\n    return ac;\r\n}\r\n\r\nclass DrawableHitCircle extends Container {\r\n    private radius: number;\r\n\r\n    private circle: Container;\r\n    private approachCircle: Sprite;\r\n\r\n    private origin: [number, number];\r\n\r\n    constructor(private hitCircle: HitCircle, renderScale: number) {\r\n        super();\r\n\r\n        const startPos = hitCircle.getStackedStartPos();\r\n        const x = startPos[0] * renderScale;\r\n        const y = startPos[1] * renderScale;\r\n        this.origin = [x, y];\r\n        this.radius = hitCircle.difficulty.getObjectRadius() * renderScale;\r\n\r\n        this.circle = createCircle(hitCircle, this.radius);\r\n        this.approachCircle = createApproachCircle(this.radius);\r\n\r\n        this.addChild(this.circle);\r\n        this.addChild(this.approachCircle);\r\n\r\n        this.position.set(x, y);\r\n        this.visible = false;\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        const visible = this.hitCircle.isVisibleAt(timestamp);\r\n        this.visible = visible;\r\n        if (!visible) return;\r\n\r\n        const { opacity, scale, approachCircleScale, approachCircleOpacity, positionOffset } = this.hitCircle.drawable;\r\n\r\n        this.circle.alpha = opacity.value;\r\n        this.circle.scale.set(scale.value);\r\n\r\n        this.approachCircle.alpha = approachCircleOpacity.value;\r\n        this.approachCircle.width = approachCircleScale.value * this.radius * 2;\r\n        this.approachCircle.height = approachCircleScale.value * this.radius * 2;\r\n\r\n        this.position.x = this.origin[0] + positionOffset.x.value;\r\n        this.position.y = this.origin[1] + positionOffset.y.value;\r\n    }\r\n}\r\n\r\nexport { DrawableHitCircle };\r\n","import { Container, Sprite, Text, TextStyle } from \"pixi.js\";\r\nimport { Path } from \"../../../math/Path\";\r\nimport { Slider } from \"../../../osu/Beatmap/BeatmapAttributes/HitObjects\";\r\nimport { hexToInt } from \"../../../util/color\";\r\nimport { AssetsLoader } from \"../../Assets/Assets\";\r\nimport { SliderTextureGenerator } from \"./SliderTextureGenerator\";\r\n\r\nfunction createSliderBody(path: Path, radius: number) {\r\n    const points = path.points;\r\n\r\n    let minPoint = [points[0][0], points[0][1]];\r\n    for (let i = 1; i < points.length; i++) {\r\n        if (points[i][0] < minPoint[0]) minPoint[0] = points[i][0];\r\n        if (points[i][1] < minPoint[1]) minPoint[1] = points[i][1];\r\n    }\r\n\r\n    minPoint[0] -= radius;\r\n    minPoint[1] -= radius;\r\n\r\n    const texture = SliderTextureGenerator.createTexture(path.points, radius);\r\n    const sprite = new Sprite(texture);\r\n\r\n    sprite.position.set(minPoint[0], minPoint[1]);\r\n    sprite.alpha = 0.8;\r\n    return sprite;\r\n}\r\n\r\nfunction createSliderHead(slider: Slider, radius: number) {\r\n    const color = hexToInt(slider.colour);\r\n    const count = slider.comboCount;\r\n\r\n    const hitTexture = AssetsLoader.getTexture(\"hitcircle\");\r\n    const hitSprite = new Sprite(hitTexture);\r\n    hitSprite.tint = color;\r\n    hitSprite.width = Math.ceil(radius * 2);\r\n    hitSprite.height = Math.ceil(radius * 2);\r\n    hitSprite.anchor.set(0.5);\r\n\r\n    const overlayTexture = AssetsLoader.getTexture(\"hitcircleoverlay\");\r\n    const overlaySprite = new Sprite(overlayTexture);\r\n    overlaySprite.width = Math.ceil(radius * 2);\r\n    overlaySprite.height = Math.ceil(radius * 2);\r\n    overlaySprite.anchor.set(0.5, 0.5);\r\n\r\n    const style = new TextStyle({\r\n        fill: \"white\",\r\n        fontSize: (radius * 4) / 5,\r\n        strokeThickness: 3,\r\n    });\r\n    const number = new Text(count.toString(), style);\r\n    number.anchor.set(0.5, 0.5);\r\n\r\n    const sliderHead = new Container();\r\n    sliderHead.addChild(hitSprite);\r\n    sliderHead.addChild(overlaySprite);\r\n    sliderHead.addChild(number);\r\n\r\n    return sliderHead;\r\n}\r\n\r\nfunction createSliderBall(radius: number) {\r\n    const texture = AssetsLoader.getTexture(\"sliderb0\");\r\n    const sliderBall = new Sprite(texture);\r\n    sliderBall.anchor.set(0.5, 0.5);\r\n    sliderBall.width = radius * 2;\r\n    sliderBall.height = radius * 2;\r\n    sliderBall.alpha = 0;\r\n\r\n    return sliderBall;\r\n}\r\n\r\nfunction createSliderFollower(radius: number) {\r\n    const texture = AssetsLoader.getTexture(\"sliderfollowcircle\");\r\n    const sliderFollower = new Sprite(texture);\r\n    sliderFollower.anchor.set(0.5, 0.5);\r\n    sliderFollower.width = radius * 2;\r\n    sliderFollower.height = radius * 2;\r\n    sliderFollower.alpha = 0;\r\n\r\n    return sliderFollower;\r\n}\r\n\r\nfunction createApproachCircle(radius: number) {\r\n    const texture = AssetsLoader.getTexture(\"approachcircle\");\r\n    const approachCircle = new Sprite(texture);\r\n    approachCircle.width = radius * 2;\r\n    approachCircle.height = radius * 2;\r\n    approachCircle.anchor.set(0.5, 0.5);\r\n\r\n    return approachCircle;\r\n}\r\n\r\nfunction createSliderReverses(slider: Slider, radius: number) {\r\n    const stackedSliderReverses = slider.getStackedReverseTicks();\r\n    const sliderReverses = new Container();\r\n\r\n    const renderScale = radius / slider.difficulty.getObjectRadius();\r\n\r\n    for (const sliderReverse of stackedSliderReverses) {\r\n        const reverseTexture = AssetsLoader.getTexture(\"reversearrow\");\r\n        const reverse = new Sprite(reverseTexture);\r\n        reverse.width = radius * 2;\r\n        reverse.height = radius * 2;\r\n        reverse.anchor.set(0.5);\r\n\r\n        const relativePos = [\r\n            (sliderReverse.position[0] - slider.startPos[0]) * renderScale,\r\n            (sliderReverse.position[1] - slider.startPos[1]) * renderScale,\r\n        ];\r\n        reverse.position.set(relativePos[0], relativePos[1]);\r\n\r\n        reverse.rotation = sliderReverse.isReversed ? slider.endAngle : slider.startAngle;\r\n\r\n        sliderReverses.addChild(reverse);\r\n    }\r\n\r\n    return sliderReverses;\r\n}\r\n\r\nfunction createSliderTicks(slider: Slider, radius: number) {\r\n    const stackedSliderTicks = slider.getStackedSliderTicks();\r\n\r\n    const tickTexture = AssetsLoader.getTexture(\"sliderscorepoint\");\r\n    const renderScale = radius / slider.difficulty.getObjectRadius();\r\n\r\n    const sliderTicks = new Container();\r\n\r\n    for (const sliderTick of stackedSliderTicks) {\r\n        const tick = new Sprite(tickTexture);\r\n        tick.anchor.set(0.5, 0.5);\r\n\r\n        const relativeTickPos = [\r\n            (sliderTick.position[0] - slider.getStackedStartPos()[0]) * renderScale,\r\n            (sliderTick.position[1] - slider.getStackedStartPos()[1]) * renderScale,\r\n        ];\r\n\r\n        tick.position.set(relativeTickPos[0], relativeTickPos[1]);\r\n\r\n        sliderTicks.addChild(tick);\r\n    }\r\n\r\n    return sliderTicks;\r\n}\r\n\r\nclass DrawableSlider extends Container {\r\n    private radius: number;\r\n    private linePath: Path;\r\n\r\n    private sliderApproachCircle: Sprite;\r\n    private sliderBody: Sprite;\r\n    private sliderHead: Container;\r\n    private sliderBall: Sprite;\r\n    private sliderFollower: Sprite;\r\n    private sliderReverses: Container;\r\n    private sliderTicks: Container;\r\n\r\n    constructor(private slider: Slider, private renderScale: number) {\r\n        super();\r\n        const startPos = slider.getStackedStartPos();\r\n        const x = startPos[0] * renderScale;\r\n        const y = startPos[1] * renderScale;\r\n\r\n        this.linePath = slider.getStackedCurvePath();\r\n        this.radius = slider.difficulty.getObjectRadius() * renderScale;\r\n        this.linePath.scale(renderScale);\r\n        this.linePath.translate(-this.linePath.points[0][0], -this.linePath.points[0][1]);\r\n\r\n        this.sliderApproachCircle = createApproachCircle(this.radius);\r\n        this.sliderBody = createSliderBody(this.linePath, this.radius);\r\n        this.sliderHead = createSliderHead(this.slider, this.radius);\r\n        this.sliderBall = createSliderBall(this.radius);\r\n        this.sliderFollower = createSliderFollower(this.radius);\r\n        this.sliderReverses = createSliderReverses(this.slider, this.radius);\r\n        this.sliderTicks = createSliderTicks(this.slider, this.radius);\r\n\r\n        this.addChild(this.sliderBody);\r\n        this.addChild(this.sliderTicks);\r\n        this.addChild(this.sliderReverses);\r\n        this.addChild(this.sliderBall);\r\n        this.addChild(this.sliderFollower);\r\n        this.addChild(this.sliderHead);\r\n        this.addChild(this.sliderApproachCircle);\r\n\r\n        this.position.set(x, y);\r\n        this.visible = false;\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        const visible = this.slider.isVisibleAt(timestamp);\r\n        this.visible = visible;\r\n        if (!visible) return;\r\n\r\n        const {\r\n            progressPosition,\r\n            bodyOpacity,\r\n            headOpacity,\r\n            ballOpacity,\r\n            approachCircleOpacity,\r\n            approachCircleScale,\r\n            followCircleOpacity,\r\n            followCircleScale,\r\n        } = this.slider.drawable;\r\n\r\n        this.sliderBody.alpha = bodyOpacity.value;\r\n        this.sliderHead.alpha = headOpacity.value;\r\n        this.sliderApproachCircle.alpha = approachCircleOpacity.value;\r\n        this.sliderApproachCircle.width = approachCircleScale.value * this.radius * 2;\r\n        this.sliderApproachCircle.height = approachCircleScale.value * this.radius * 2;\r\n\r\n        const ballPos = [\r\n            (progressPosition[0] - this.slider.getStackedStartPos()[0]) * this.renderScale,\r\n            (progressPosition[1] - this.slider.getStackedStartPos()[1]) * this.renderScale,\r\n        ];\r\n\r\n        this.sliderBall.transform.position.set(ballPos[0], ballPos[1]);\r\n        this.sliderBall.alpha = ballOpacity.value;\r\n\r\n        this.sliderFollower.transform.position.set(ballPos[0], ballPos[1]);\r\n        this.sliderFollower.alpha = followCircleOpacity.value;\r\n        this.sliderFollower.scale.set(followCircleScale.value);\r\n\r\n        for (let i = 0; i < this.slider.reverseTicks.length; i++) {\r\n            const reverseTick = this.slider.reverseTicks[i];\r\n            const opacity = reverseTick.drawable.opacity.value;\r\n            const scale = reverseTick.drawable.scale.value;\r\n\r\n            this.sliderReverses.children[i].alpha = opacity;\r\n            this.sliderReverses.children[i].scale.set(scale);\r\n        }\r\n\r\n        for (let i = 0; i < this.slider.sliderTicks.length; i++) {\r\n            const sliderTick = this.slider.sliderTicks[i];\r\n            const opacity = sliderTick.drawable.opacity.value;\r\n            const scale = sliderTick.drawable.scale.value;\r\n\r\n            this.sliderTicks.children[i].alpha = opacity;\r\n            this.sliderTicks.children[i].scale.set(scale);\r\n        }\r\n    }\r\n}\r\n\r\nexport { DrawableSlider };\r\n","import { Container, Graphics, Sprite } from \"pixi.js\";\r\nimport { Replay } from \"../../../osu/Replay/Replay\";\r\nimport { AssetsLoader } from \"../../Assets/Assets\";\r\nimport { Drawable } from \"../DrawableTypes\";\r\n\r\nconst NODE_SCALE = 0.1;\r\nconst NODE_COUNT_AFTER = 0;\r\nconst NODE_COUNT_BEFORE = 0;\r\n\r\nfunction createCursorNodes(size: number) {\r\n    const nodeSprites: Sprite[] = [];\r\n    for (let i = 0; i < NODE_COUNT_BEFORE + NODE_COUNT_AFTER + 1; i++) {\r\n        const texture = AssetsLoader.getTexture(\"cursornode\");\r\n\r\n        const sprite = new Sprite(texture);\r\n        sprite.anchor.set(0.5);\r\n        sprite.scale.set(size);\r\n        nodeSprites.push(sprite);\r\n    }\r\n\r\n    return nodeSprites;\r\n}\r\n\r\nclass CursorNode extends Container implements Drawable {\r\n    private nodeSprites: Sprite[];\r\n    private nodeLine: Graphics;\r\n\r\n    constructor(private replay: Replay, private renderScale: number) {\r\n        super();\r\n\r\n        this.nodeSprites = createCursorNodes(renderScale * NODE_SCALE);\r\n        this.nodeLine = new Graphics();\r\n\r\n        this.addChild(this.nodeLine);\r\n        this.nodeSprites.forEach((nodeSprite) => this.addChild(nodeSprite));\r\n        this.visible = true;\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        const index = this.replay.replayData.getIndexNear(timestamp);\r\n        const indexStart = Math.max(0, index - NODE_COUNT_BEFORE);\r\n        const indexEnd = Math.min(this.replay.replayData.length - 1, index + NODE_COUNT_AFTER);\r\n        const count = indexEnd - indexStart + 1;\r\n\r\n        for (let i = indexStart; i <= indexEnd; i++) {\r\n            const node = this.replay.replayData[i];\r\n            const nodeSprite = this.nodeSprites[i - indexStart];\r\n\r\n            let alpha = 1 - (Math.abs(index - i) / count) * 2;\r\n\r\n            if (node.isPressing(\"K1\") || node.isPressing(\"M1\")) {\r\n                nodeSprite.tint = 0xffff00;\r\n            } else if (node.isPressing(\"K2\") || node.isPressing(\"M2\")) {\r\n                nodeSprite.tint = 0xff00ff;\r\n            } else {\r\n                nodeSprite.tint = 0xffffff;\r\n                nodeSprite.scale.set(this.renderScale * NODE_SCALE);\r\n            }\r\n\r\n            nodeSprite.alpha = alpha;\r\n            nodeSprite.position.set(node.x * this.renderScale, node.y * this.renderScale);\r\n        }\r\n\r\n        const line = this.nodeLine;\r\n        line.clear();\r\n        line.lineStyle({ color: 0xffffff, width: 2 * this.renderScale });\r\n        for (let i = 0; i < count - 1; i++) {\r\n            const curr = this.nodeSprites[i];\r\n            const next = this.nodeSprites[i + 1];\r\n\r\n            const startPos = [curr.x, curr.y];\r\n            const endPos = [next.x, next.y];\r\n\r\n            line.lineStyle({\r\n                color: 0xffffff,\r\n                width: 2 * this.renderScale,\r\n                alpha: 1 - (Math.abs(i - count / 2) / count) * 2,\r\n            });\r\n\r\n            line.moveTo(startPos[0], startPos[1]).lineTo(endPos[0], endPos[1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport { CursorNode };\r\n","import { Container, Sprite } from \"pixi.js\";\r\nimport { Replay } from \"../../../osu/Replay/Replay\";\r\nimport { AssetsLoader } from \"../../Assets/Assets\";\r\nimport { Drawable } from \"../DrawableTypes\";\r\n\r\nconst CURSOR_SCALE = 70;\r\n\r\nfunction createMainCursor(size: number) {\r\n    const texture = AssetsLoader.getTexture(\"main-cursor\");\r\n    const mainCursor = new Sprite(texture);\r\n    mainCursor.width = size;\r\n    mainCursor.height = size;\r\n    mainCursor.anchor.set(0.5);\r\n\r\n    return mainCursor;\r\n}\r\nclass MainCursor extends Container implements Drawable {\r\n    private mainCursor: Sprite;\r\n\r\n    constructor(private replay: Replay, private renderScale: number) {\r\n        super();\r\n\r\n        const x = replay.replayData[0].x * renderScale;\r\n        const y = replay.replayData[0].y * renderScale;\r\n\r\n        this.mainCursor = createMainCursor(renderScale * CURSOR_SCALE);\r\n        this.addChild(this.mainCursor);\r\n\r\n        this.alpha = 1.0;\r\n\r\n        this.position.set(x, y);\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        const [x, y] = this.replay.replayData.getPositionAt(timestamp, true);\r\n\r\n        this.position.set(x * this.renderScale, y * this.renderScale);\r\n    }\r\n}\r\n\r\nexport { MainCursor };\r\n","import { Graphics } from \"pixi.js\";\r\n\r\ntype GridSize = \"PIXEL\" | \"TINY\" | \"SMALL\" | \"MEDIUM\" | \"LARGE\";\r\n\r\nclass Grid extends Graphics {\r\n    constructor(width: number, height: number, gridSize: GridSize, color: number, alpha: number) {\r\n        super();\r\n        let cellSize = 4;\r\n        switch (gridSize) {\r\n            case \"PIXEL\":\r\n                cellSize = 1;\r\n                break;\r\n            case \"TINY\":\r\n                cellSize = 4;\r\n                break;\r\n            case \"SMALL\":\r\n                cellSize = 8;\r\n                break;\r\n            case \"MEDIUM\":\r\n                cellSize = 16;\r\n                break;\r\n            case \"LARGE\":\r\n                cellSize = 32;\r\n                break;\r\n        }\r\n\r\n        const horizontalScale = width / 512;\r\n        const verticalScale = height / 384;\r\n\r\n        const scale = Math.min(horizontalScale, verticalScale);\r\n        cellSize *= scale;\r\n\r\n        const horizontalGridCount = Math.floor(width / cellSize);\r\n        const verticalGridCount = Math.floor(height / cellSize);\r\n\r\n        // use line to draw the grid\r\n        this.lineStyle(1, color, alpha);\r\n        for (let i = 0; i <= horizontalGridCount; i++) {\r\n            this.moveTo(i * cellSize, 0);\r\n            this.lineTo(i * cellSize, height);\r\n        }\r\n\r\n        for (let i = 0; i <= verticalGridCount; i++) {\r\n            this.moveTo(0, i * cellSize);\r\n            this.lineTo(width, i * cellSize);\r\n        }\r\n\r\n        // create center horizontal and vertical bold line\r\n        this.lineStyle(2, color, alpha);\r\n        this.moveTo(width / 2, 0);\r\n        this.lineTo(width / 2, height);\r\n\r\n        this.moveTo(0, height / 2);\r\n        this.lineTo(width, height / 2);\r\n\r\n        this.endFill();\r\n    }\r\n}\r\n\r\nexport { Grid, GridSize };\r\n","import { Container, Sprite, Text, TextStyle, Texture } from \"pixi.js\";\r\nimport { Spinner } from \"../../../osu/Beatmap/BeatmapAttributes/HitObjects\";\r\nimport { calculateFitRatio } from \"../../../util/osu-calculation\";\r\nimport { AssetsLoader } from \"../../Assets/Assets\";\r\nimport { Drawable } from \"../DrawableTypes\";\r\n\r\n// the ultimate hack of all time\r\nconst SPINNER_BACKGROUND_SCALE = 1.05;\r\nconst SPINNER_CIRCLE_SCALE = 0.8;\r\nconst SPINNER_SPIN_SCALE = 0.175;\r\n\r\nfunction createSpinnerBackground(renderScale: number) {\r\n    const texture = AssetsLoader.getTexture(\"spinner-background\");\r\n\r\n    const playfieldWidth = 512 * renderScale;\r\n    const playfieldHeight = 384 * renderScale;\r\n\r\n    const ratio =\r\n        SPINNER_BACKGROUND_SCALE * (1 / calculateFitRatio(texture.width, texture.height, playfieldWidth, playfieldHeight));\r\n\r\n    const sprite = new Sprite(texture);\r\n    sprite.scale.set(ratio);\r\n    sprite.position.set(playfieldWidth / 2, playfieldHeight / 2);\r\n    sprite.anchor.set(0.5);\r\n    return sprite;\r\n}\r\n\r\nfunction createSpinnerMeter(renderScale: number) {\r\n    const texture = AssetsLoader.getTexture(\"spinner-metre\");\r\n\r\n    const playfieldWidth = 512 * renderScale;\r\n    const playfieldHeight = 384 * renderScale;\r\n\r\n    const ratio =\r\n        SPINNER_BACKGROUND_SCALE * (1 / calculateFitRatio(texture.width, texture.height, playfieldWidth, playfieldHeight));\r\n\r\n    const sprite = new Sprite(texture);\r\n    sprite.scale.set(ratio);\r\n    sprite.position.set(playfieldWidth / 2, playfieldHeight / 2);\r\n    sprite.anchor.set(0.5);\r\n\r\n    return sprite;\r\n}\r\n\r\nfunction createSpinnerMeterMask(renderScale: number) {\r\n    const texture = AssetsLoader.getTexture(\"spinner-metre\");\r\n\r\n    const playfieldWidth = 512 * renderScale;\r\n    const playfieldHeight = 384 * renderScale;\r\n\r\n    const ratio =\r\n        SPINNER_BACKGROUND_SCALE * (1 / calculateFitRatio(texture.width, texture.height, playfieldWidth, playfieldHeight));\r\n\r\n    const mask = new Sprite(Texture.WHITE);\r\n    mask.y = 0;\r\n    mask.x = 0;\r\n    mask.width = texture.width * ratio;\r\n    mask.height = texture.height * ratio;\r\n    mask.position.set(playfieldWidth / 2, playfieldHeight);\r\n    mask.anchor.set(0.5, 1.0);\r\n\r\n    return mask;\r\n}\r\n\r\nfunction createSpinnerCircle(renderScale: number) {\r\n    const texture = AssetsLoader.getTexture(\"spinner-circle\");\r\n\r\n    const playfieldWidth = 512 * renderScale;\r\n    const playfieldHeight = 384 * renderScale;\r\n\r\n    const ratio =\r\n        SPINNER_CIRCLE_SCALE * (1 / calculateFitRatio(texture.width, texture.height, playfieldWidth, playfieldHeight));\r\n\r\n    const sprite = new Sprite(texture);\r\n    sprite.scale.set(ratio);\r\n    sprite.position.set(playfieldWidth / 2, playfieldHeight / 2);\r\n    sprite.anchor.set(0.5);\r\n\r\n    return sprite;\r\n}\r\n\r\nfunction createSpinnerCounter(renderScale: number) {\r\n    const style = new TextStyle({\r\n        fill: \"white\",\r\n        fontFamily: \"Comic Sans MS\",\r\n        fontSize: 18 * renderScale,\r\n        fontWeight: \"600\",\r\n        lineJoin: \"round\",\r\n        strokeThickness: 7,\r\n    });\r\n\r\n    const text = new Text(\"0 RPM\", style);\r\n\r\n    const playfieldWidth = 512 * renderScale;\r\n    const playfieldHeight = 384 * renderScale;\r\n\r\n    text.position.set(playfieldWidth / 2, playfieldHeight);\r\n    text.anchor.set(0.5, 1.0);\r\n\r\n    return text;\r\n}\r\n\r\nfunction createSpinnerSpin(renderScale: number) {\r\n    const texture = AssetsLoader.getTexture(\"spinner-spin\");\r\n\r\n    const playfieldWidth = 512 * renderScale;\r\n    const playfieldHeight = 384 * renderScale;\r\n\r\n    const ratio = SPINNER_SPIN_SCALE * (1 / calculateFitRatio(texture.width, texture.height, playfieldWidth, playfieldHeight));\r\n\r\n    const sprite = new Sprite(texture);\r\n    sprite.scale.set(ratio);\r\n    sprite.position.set(playfieldWidth / 2, (playfieldHeight * 3) / 4);\r\n    sprite.anchor.set(0.5, 0.25);\r\n\r\n    return sprite;\r\n}\r\nclass DrawableSpinner extends Container implements Drawable {\r\n    private spinnerBackground: Sprite;\r\n    private spinnerCircle: Sprite;\r\n    private spinnerMeter: Sprite;\r\n    private spinnerSpin: Sprite;\r\n\r\n    private spinnerCounter: Text;\r\n\r\n    private spinnerMeterMask: Sprite;\r\n\r\n    constructor(private spinner: Spinner, renderScale: number) {\r\n        super();\r\n\r\n        this.spinnerBackground = createSpinnerBackground(renderScale);\r\n        this.spinnerMeter = createSpinnerMeter(renderScale);\r\n        this.spinnerCircle = createSpinnerCircle(renderScale);\r\n        this.spinnerSpin = createSpinnerSpin(renderScale);\r\n        this.spinnerCounter = createSpinnerCounter(renderScale);\r\n\r\n        this.spinnerMeterMask = createSpinnerMeterMask(renderScale);\r\n        this.spinnerMeter.mask = this.spinnerMeterMask;\r\n\r\n        this.addChild(this.spinnerMeterMask);\r\n        this.addChild(this.spinnerBackground);\r\n        this.addChild(this.spinnerMeter);\r\n        this.addChild(this.spinnerCircle);\r\n        this.addChild(this.spinnerSpin);\r\n        this.addChild(this.spinnerCounter);\r\n\r\n        this.visible = false;\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        const visible = this.spinner.isVisibleAt(timestamp);\r\n        this.visible = visible;\r\n        if (!visible) return;\r\n\r\n        const { opacity, rotation, meter, rpm } = this.spinner.drawable;\r\n\r\n        this.alpha = opacity.value;\r\n\r\n        this.spinnerMeterMask.height = this.spinnerBackground.height * Math.min(Math.abs(meter), 1);\r\n\r\n        this.spinnerCircle.rotation = rotation;\r\n        this.spinnerCounter.text = `${Math.round(rpm)} RPM`;\r\n    }\r\n}\r\n\r\nexport { DrawableSpinner };\r\n","import { HitCircle, HitObject, Slider, Spinner } from \"../../osu//Beatmap/BeatmapAttributes/HitObjects\";\r\nimport { Difficulty } from \"../../osu//Beatmap/BeatmapAttributes/Difficulty\";\r\nimport { DrawableHitCircle, HitObjectDrawable, DrawableSlider } from \"./DrawableTypes\";\r\nimport { Grid, GridSize } from \"./Graphics/Grid\";\r\nimport { DrawableSpinner } from \"./HitObject/DrawableSpinner\";\r\n\r\nexport class DrawableGenerator {\r\n    public static CreateGrid(width: number, height: number, gridSize: GridSize, color: number, alpha: number) {\r\n        return new Grid(width, height, gridSize, color, alpha);\r\n    }\r\n\r\n    public static CreateHitObject(hitObject: HitObject, renderScale: number): HitObjectDrawable {\r\n        if (hitObject.isHitCircle()) {\r\n            return new DrawableHitCircle(hitObject as HitCircle, renderScale);\r\n        } else if (hitObject.isSlider()) {\r\n            return new DrawableSlider(hitObject as Slider, renderScale);\r\n        } else {\r\n            return new DrawableSpinner(hitObject as Spinner, renderScale);\r\n        }\r\n    }\r\n}\r\n","import { Application, Container } from \"pixi.js\";\r\nimport { Beatmap } from \"../../osu/Beatmap/Beatmap\";\r\nimport { getOsuPixelScale } from \"../../util/osu-calculation\";\r\nimport { DrawableGenerator } from \"../Drawable/DrawableGenerator\";\r\nimport { HitObjectDrawable } from \"../Drawable/DrawableTypes\";\r\n\r\nclass BeatmapField extends Container {\r\n    private beatmap: Beatmap;\r\n    private hitObjectDrawables: HitObjectDrawable[] = [];\r\n    private playfieldResolution: [number, number];\r\n\r\n    constructor(private application: Application) {\r\n        super();\r\n        const canvasWidth = this.application.view.width;\r\n        const canvasHeight = this.application.view.height;\r\n\r\n        const playfieldScale = 4 / 5;\r\n\r\n        // create full 4:3 out of canvas playfieldResolution above\r\n        if (canvasHeight > (canvasWidth / 4) * 3) {\r\n            this.playfieldResolution = [canvasWidth * playfieldScale, (canvasWidth / 4) * 3 * playfieldScale];\r\n        } else {\r\n            this.playfieldResolution = [(canvasHeight / 3) * 4 * playfieldScale, canvasHeight * playfieldScale];\r\n        }\r\n\r\n        // center playfield\r\n        const translateX = (canvasWidth - this.playfieldResolution[0]) / 2;\r\n        const translateY = (canvasHeight - this.playfieldResolution[1]) / 2;\r\n\r\n        const grid = DrawableGenerator.CreateGrid(\r\n            this.playfieldResolution[0],\r\n            this.playfieldResolution[1],\r\n            \"LARGE\",\r\n            0xffffff,\r\n            0.25\r\n        );\r\n        this.addChild(grid);\r\n        this.position.set(translateX, translateY);\r\n    }\r\n\r\n    loadBeatmap(beatmap: Beatmap) {\r\n        this.hitObjectDrawables.forEach((obj) => obj.destroy({ texture: true, baseTexture: false, children: true }));\r\n        this.hitObjectDrawables = [];\r\n        this.beatmap = beatmap;\r\n\r\n        const hitObjects = this.beatmap.hitObjects;\r\n        const scale = getOsuPixelScale(this.playfieldResolution[0], this.playfieldResolution[1]);\r\n\r\n        hitObjects.objects.forEach((hitObject) => {\r\n            const drawable = DrawableGenerator.CreateHitObject(hitObject, scale);\r\n            this.hitObjectDrawables.push(drawable);\r\n        });\r\n\r\n        const objectCount = this.hitObjectDrawables.length;\r\n        for (let i = objectCount - 1; i >= 0; i--) {\r\n            this.addChild(this.hitObjectDrawables[i]);\r\n        }\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        for (let i = 0; i < this.hitObjectDrawables.length; i++) {\r\n            // would it be nice just to update some instead of all of them ?\r\n            this.hitObjectDrawables[i].draw(timestamp);\r\n        }\r\n    }\r\n}\r\n\r\nexport { BeatmapField };\r\n","import { Application, Container } from \"pixi.js\";\r\nimport { Beatmap } from \"../../osu/Beatmap/Beatmap\";\r\nimport { GameHUD } from \"../../osu/Graphics/HUD/GameHUD\";\r\nimport { getOsuPixelScale } from \"../../util/osu-calculation\";\r\n\r\ninterface HUDDrawProperty {\r\n    resolution: [number, number];\r\n    scale: number;\r\n}\r\n\r\nclass HUDOverlay extends Container {\r\n    private drawProperty: HUDDrawProperty = {} as HUDDrawProperty;\r\n\r\n    constructor(private application: Application) {\r\n        super();\r\n        this.drawProperty = {\r\n            resolution: [this.application.view.width, this.application.view.height],\r\n            scale: getOsuPixelScale(this.application.view.width, this.application.view.height),\r\n        };\r\n    }\r\n\r\n    loadBeatmap(beatmap: Beatmap) {}\r\n\r\n    loadHUD(gameHUD: GameHUD) {}\r\n\r\n    draw(time: number) {}\r\n}\r\n\r\nexport { HUDOverlay, HUDDrawProperty };\r\n","import { Application, Container } from \"pixi.js\";\r\nimport { Replay } from \"../../osu/Replay/Replay\";\r\nimport { getOsuPixelScale } from \"../../util/osu-calculation\";\r\nimport { CursorNode, MainCursor } from \"../Drawable/DrawableTypes\";\r\n\r\nclass ReplayField extends Container {\r\n    private playfieldResolution: [number, number];\r\n\r\n    private mainCursor: MainCursor;\r\n    private cursorNode: CursorNode;\r\n\r\n    constructor(private application: Application) {\r\n        super();\r\n        const canvasWidth = this.application.view.width;\r\n        const canvasHeight = this.application.view.height;\r\n\r\n        const playfieldScale = 4 / 5;\r\n\r\n        // create full 4:3 out of canvas playfieldResolution above\r\n        if (canvasHeight > (canvasWidth / 4) * 3) {\r\n            this.playfieldResolution = [canvasWidth * playfieldScale, (canvasWidth / 4) * 3 * playfieldScale];\r\n        } else {\r\n            this.playfieldResolution = [(canvasHeight / 3) * 4 * playfieldScale, canvasHeight * playfieldScale];\r\n        }\r\n\r\n        // center playfield\r\n        const translateX = (canvasWidth - this.playfieldResolution[0]) / 2;\r\n        const translateY = (canvasHeight - this.playfieldResolution[1]) / 2;\r\n        this.position.set(translateX, translateY);\r\n    }\r\n\r\n    loadReplay(replay: Replay) {\r\n        const scale = getOsuPixelScale(this.playfieldResolution[0], this.playfieldResolution[1]);\r\n\r\n        this.mainCursor = new MainCursor(replay, scale);\r\n        this.cursorNode = new CursorNode(replay, scale);\r\n\r\n        this.addChild(this.cursorNode);\r\n        this.addChild(this.mainCursor);\r\n    }\r\n\r\n    draw(timestamp: number) {\r\n        this.mainCursor.draw(timestamp);\r\n        this.cursorNode.draw(timestamp);\r\n    }\r\n}\r\n\r\nexport { ReplayField };\r\n","import * as PIXI from \"pixi.js\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { Beatmap } from \"../osu/Beatmap/Beatmap\";\r\nimport { GameHUD } from \"../osu/Graphics/HUD/GameHUD\";\r\nimport { Replay } from \"../osu/Replay/Replay\";\r\nimport { Settings } from \"../settings/Settings\";\r\nimport { AssetsLoader } from \"./Assets/Assets\";\r\nimport { SliderTextureGenerator } from \"./Drawable/HitObject/SliderTextureGenerator\";\r\nimport { Background, BeatmapField, HUDOverlay, ReplayField } from \"./Layers\";\r\n\r\nclass Renderer {\r\n    public pixi: PIXI.Application;\r\n    public assets: PIXI.utils.Dict<PIXI.LoaderResource>;\r\n\r\n    // Timestamp and Ticker\r\n    private ticker: PIXI.Ticker;\r\n    private _timestamp: number = 0;\r\n\r\n    get timestamp() {\r\n        return this._timestamp;\r\n    }\r\n\r\n    set timestamp(time: number) {\r\n        this._timestamp = time;\r\n        this.ticker.update(time);\r\n\r\n        this.background.draw(time);\r\n        this.beatmapField.draw(time);\r\n        this.replayField.draw(time);\r\n\r\n        this.hudOverlay.draw(time);\r\n    }\r\n\r\n    private background: Background;\r\n    private beatmapField: BeatmapField;\r\n    private replayField: ReplayField;\r\n    private hudOverlay: HUDOverlay;\r\n\r\n    constructor(querySelector: string) {\r\n        // Set PIXI Application\r\n        this.pixi = new PIXI.Application({\r\n            powerPreference: \"high-performance\",\r\n            antialias: true,\r\n            width: Settings.get(\"AppWidth\"),\r\n            height: Settings.get(\"AppHeight\"),\r\n            backgroundColor: 0xffffff,\r\n        });\r\n\r\n        // Set PIXI Shared Ticker\r\n        this.ticker = PIXI.Ticker.shared;\r\n        this.ticker.autoStart = false;\r\n        this.ticker.stop();\r\n\r\n        // Set TextureRenderer Renderer\r\n        SliderTextureGenerator.setRenderer(this.pixi.renderer as PIXI.Renderer);\r\n\r\n        // Set Background\r\n        this.background = new Background(this.pixi, { brightness: 0.25, fit: \"horizontal\" });\r\n        this.background.interactiveChildren = false;\r\n        this.pixi.stage.addChild(this.background);\r\n\r\n        // Set BeatmapField\r\n        this.beatmapField = new BeatmapField(this.pixi);\r\n        this.beatmapField.interactiveChildren = false;\r\n        this.pixi.stage.addChild(this.beatmapField);\r\n\r\n        // Set ReplayField\r\n        this.replayField = new ReplayField(this.pixi);\r\n        this.replayField.interactiveChildren = false;\r\n        this.pixi.stage.addChild(this.replayField);\r\n\r\n        // Set HUDOverlay\r\n        this.hudOverlay = new HUDOverlay(this.pixi);\r\n        this.hudOverlay.interactiveChildren = false;\r\n        this.pixi.stage.addChild(this.hudOverlay);\r\n\r\n        const view = document.querySelector(querySelector);\r\n        view && view.appendChild(this.pixi.view);\r\n\r\n        // Initialize App\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        // Load Assets\r\n        await AssetsLoader.load();\r\n        this.assets = AssetsLoader.assets;\r\n    }\r\n\r\n    loadBeatmap(beatmap: Beatmap) {\r\n        this.beatmapField.loadBeatmap(beatmap);\r\n        this.hudOverlay.loadBeatmap(beatmap);\r\n    }\r\n\r\n    loadReplay(replay: Replay) {\r\n        this.replayField.loadReplay(replay);\r\n    }\r\n\r\n    loadHUD(gameHUD: GameHUD) {\r\n        this.hudOverlay.loadHUD(gameHUD);\r\n    }\r\n\r\n    setBackground(image: HTMLImageElement) {\r\n        const texture = Texture.from(image);\r\n        this.background.setImage(texture);\r\n    }\r\n}\r\n\r\nexport { Renderer };\r\n","enum Keypress {\r\n    M1 = 1 << 0,\r\n    M2 = 1 << 1,\r\n    K1 = 1 << 2,\r\n    K2 = 1 << 3,\r\n    SMOKE = 1 << 4,\r\n}\r\n\r\ntype KeypressType = keyof typeof Keypress;\r\n\r\nclass ReplayNode {\r\n    prev: ReplayNode | null = null;\r\n    next: ReplayNode | null = null;\r\n    timestamp: number;\r\n    deltaTime: number;\r\n    x: number;\r\n    y: number;\r\n    keypress: number;\r\n\r\n    constructor(timestamp: number, deltaTime: number, x: number, y: number, numericKeys: number) {\r\n        this.deltaTime = deltaTime;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.keypress = numericKeys;\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    translate(x: number, y: number) {\r\n        this.x += x;\r\n        this.y += y;\r\n    }\r\n\r\n    translateX(x: number) {\r\n        this.x += x;\r\n    }\r\n\r\n    translateY(y: number) {\r\n        this.y += y;\r\n    }\r\n\r\n    isHolding(key?: KeypressType, exclusive = false) {\r\n        if (exclusive) {\r\n            switch (key) {\r\n                case \"K1\": {\r\n                    return this.keypress === (Keypress.K1 | Keypress.M1);\r\n                }\r\n\r\n                case \"K2\": {\r\n                    return this.keypress === (Keypress.K2 | Keypress.M2);\r\n                }\r\n\r\n                case \"M1\": {\r\n                    return this.keypress === Keypress.M1;\r\n                }\r\n\r\n                case \"M2\": {\r\n                    return this.keypress === Keypress.M2;\r\n                }\r\n\r\n                default: {\r\n                    return this.keypress !== 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        switch (key) {\r\n            case \"K1\": {\r\n                return (this.keypress & Keypress.K1) === Keypress.K1;\r\n            }\r\n\r\n            case \"K2\": {\r\n                return (this.keypress & Keypress.K2) === Keypress.K2;\r\n            }\r\n\r\n            case \"M1\": {\r\n                return (this.keypress & Keypress.M1) === Keypress.M1;\r\n            }\r\n\r\n            case \"M2\": {\r\n                return (this.keypress & Keypress.M2) === Keypress.M2;\r\n            }\r\n\r\n            case \"SMOKE\": {\r\n                return (this.keypress & Keypress.SMOKE) === Keypress.SMOKE;\r\n            }\r\n\r\n            default: {\r\n                return (this.keypress & ~(this.keypress & Keypress.SMOKE)) > 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    isPressing(key?: KeypressType, exclusive = false): boolean {\r\n        if (key === undefined) {\r\n            const KEYS: KeypressType[] = [\"K1\", \"K2\", \"M1\", \"M2\"];\r\n            return KEYS.some((key) => this.isPressing(key, exclusive));\r\n        }\r\n\r\n        if (this.prev === null) {\r\n            return this.isHolding(key, exclusive);\r\n        }\r\n\r\n        return !this.prev.isHolding(key, exclusive) && this.isHolding(key, exclusive);\r\n    }\r\n\r\n    isReleasing(key?: KeypressType, exclusive = false) {\r\n        if (this.next === null) {\r\n            return this.isHolding(key, exclusive);\r\n        }\r\n\r\n        return !this.next.isHolding(key, exclusive) && this.isHolding(key, exclusive);\r\n    }\r\n\r\n    setKeypress(...keys: Keypress[]) {\r\n        this.keypress = 0;\r\n        this.addKeypress(...keys);\r\n    }\r\n\r\n    addKeypress(...keys: Keypress[]) {\r\n        keys.forEach((key) => (this.keypress |= key));\r\n    }\r\n\r\n    removeKeypress(key: Keypress) {\r\n        this.keypress = this.keypress & ~(this.keypress & key);\r\n    }\r\n\r\n    clone() {\r\n        return new ReplayNode(this.timestamp, this.deltaTime, this.x, this.y, this.keypress);\r\n    }\r\n}\r\n\r\nexport { ReplayNode, Keypress, KeypressType };\r\n","import { ReplayNode } from \"./ReplayNodes\";\r\n\r\nclass ReplayData extends Array<ReplayNode> {\r\n    constructor();\r\n    constructor(replayData: string);\r\n    constructor(replayData: ReplayNode[]);\r\n    constructor(replayData?: string | ReplayNode[]) {\r\n        if (replayData === undefined) {\r\n            super();\r\n            return;\r\n        }\r\n\r\n        let nodes: ReplayNode[] = [];\r\n        if (typeof replayData === \"string\") {\r\n            const parsedReplayData = replayData\r\n                .split(\",\")\r\n                .slice(0, -1) // there's an extra ',' on the last part of the replaydata string\r\n                .map((row) => row.split(\"|\").map(Number));\r\n\r\n            let accumulatedTime = 0;\r\n\r\n            for (let i = 0; i < parsedReplayData.length; i++) {\r\n                const data = parsedReplayData[i];\r\n                const [deltaTime, x, y, numericKeys] = data;\r\n\r\n                accumulatedTime += deltaTime;\r\n                const node = new ReplayNode(accumulatedTime, deltaTime, x, y, numericKeys);\r\n                nodes.push(node);\r\n            }\r\n\r\n            for (let i = 0; i < parsedReplayData.length; i++) {\r\n                if (i > 0) nodes[i].prev = nodes[i - 1];\r\n                if (i < parsedReplayData.length - 1) {\r\n                    nodes[i].next = nodes[i + 1];\r\n                }\r\n            }\r\n        } else if (replayData instanceof ReplayNode) {\r\n            nodes = replayData;\r\n        }\r\n\r\n        super(nodes.length);\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            this[i] = nodes[i];\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        let str = \"\";\r\n        this.forEach((node) => {\r\n            str += `${node.deltaTime}|${node.x}|${node.y}|${node.keypress},`;\r\n        });\r\n\r\n        return str;\r\n    }\r\n\r\n    getMultipleNear(timestamp: number, prevCount: number = 0, nextCount: number = 0) {\r\n        const index = this.getIndexNear(timestamp);\r\n\r\n        const startIndex = Math.max(index - prevCount, 0);\r\n        const endIndex = Math.min(index + nextCount + 1, this.length);\r\n\r\n        return this.slice(startIndex, endIndex);\r\n    }\r\n\r\n    getMultiple(from: number, to: number) {\r\n        const startIndex = this.getIndexNear(from);\r\n        const endIndex = this.getIndexNear(to);\r\n\r\n        return this.slice(startIndex, endIndex);\r\n    }\r\n\r\n    getIndexNear(timestamp: number) {\r\n        let mid;\r\n        let lo = 0;\r\n        let hi = this.length - 1;\r\n        while (hi - lo > 1) {\r\n            mid = Math.floor((lo + hi) / 2);\r\n            if (this[mid].timestamp < timestamp) {\r\n                lo = mid;\r\n            } else {\r\n                hi = mid;\r\n            }\r\n        }\r\n        if (timestamp - this[lo].timestamp <= this[hi].timestamp - timestamp) {\r\n            return lo;\r\n        }\r\n        return hi;\r\n    }\r\n\r\n    getNear(timestamp: number) {\r\n        return this[this.getIndexNear(timestamp)];\r\n    }\r\n\r\n    getPositionAt(timestamp: number, interpolate = false): [number, number] {\r\n        const index = this.getIndexNear(timestamp);\r\n        const node = this[index];\r\n\r\n        if (!interpolate) {\r\n            return [node.x, node.y];\r\n        }\r\n\r\n        if (node.timestamp === timestamp) {\r\n            return [node.x, node.y];\r\n        }\r\n\r\n        if (node.timestamp < timestamp) {\r\n            const nextNode = this[index + 1];\r\n\r\n            if (!nextNode) {\r\n                return [node.x, node.y];\r\n            }\r\n\r\n            const deltaTime = nextNode.deltaTime;\r\n            const deltaX = nextNode.x - node.x;\r\n            const deltaY = nextNode.y - node.y;\r\n\r\n            const timeDiff = timestamp - node.timestamp;\r\n            const timeRatio = timeDiff / deltaTime;\r\n\r\n            return [node.x + deltaX * timeRatio, node.y + deltaY * timeRatio];\r\n        } else {\r\n            const prevNode = this[index - 1];\r\n\r\n            if (!prevNode) {\r\n                return [node.x, node.y];\r\n            }\r\n\r\n            const deltaTime = node.deltaTime;\r\n            const deltaX = node.x - prevNode.x;\r\n            const deltaY = node.y - prevNode.y;\r\n\r\n            const timeDiff = timestamp - prevNode.timestamp;\r\n            const timeRatio = timeDiff / deltaTime;\r\n\r\n            return [prevNode.x + deltaX * timeRatio, prevNode.y + deltaY * timeRatio];\r\n        }\r\n    }\r\n}\r\n\r\nexport { ReplayData };\r\n","import { Buffer } from \"buffer\";\r\nimport { Mods } from \"../Mods/Mods\";\r\nimport { ReplayData } from \"./ReplayData\";\r\nimport { ReplayNode } from \"./ReplayNodes\";\r\n\r\nconst lzma = require(\"../../lib/lzma/lzma_worker.js\").LZMA;\r\nconst leb = require(\"leb\");\r\n\r\nconst EPOCH = 621355968000000000;\r\nclass Replay {\r\n    public gameMode = 0;\r\n    public gameVersion = 0;\r\n    public beatmapMD5 = \"\";\r\n    public playerName = \"\";\r\n    public replayMD5 = \"\";\r\n    public number_300s = 0;\r\n    public number_100s = 0;\r\n    public number_50s = 0;\r\n    public gekis = 0;\r\n    public katus = 0;\r\n    public misses = 0;\r\n    public score = 0;\r\n    public maxCombo = 0;\r\n    public perfectCombo = 0;\r\n    public mods = new Mods();\r\n    public life_bar = \"\";\r\n    public timestamp = new Date(0);\r\n    public replayLength = 0;\r\n    public replayData = new ReplayData();\r\n    public unknown = 0;\r\n\r\n    async toBlob(): Promise<Blob> {\r\n        const replayBytes = await write(this);\r\n        const arrayBuffer = Uint8Array.from(replayBytes);\r\n        return new Blob([arrayBuffer], {\r\n            type: \"application/x-osu-replay\",\r\n        });\r\n    }\r\n\r\n    public static async FromBuffer(buffer: Buffer) {\r\n        return await read(buffer);\r\n    }\r\n\r\n    public static async FromArrayBuffer(arrayBuffer: ArrayBuffer) {\r\n        const buffer = Buffer.alloc(arrayBuffer.byteLength);\r\n        const view = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < buffer.length; ++i) {\r\n            buffer[i] = view[i];\r\n        }\r\n\r\n        return await read(buffer);\r\n    }\r\n}\r\n\r\n/* Parse Buffer to Replay Objcet */\r\nfunction read(buff: Buffer) {\r\n    let offset = 0x00;\r\n    return new Promise<Replay>(async (resolve, reject) => {\r\n        let replay = new Replay();\r\n\r\n        try {\r\n            replay.gameMode = readByte(buff);\r\n            replay.gameVersion = readInteger(buff);\r\n            replay.beatmapMD5 = readString(buff);\r\n            replay.playerName = readString(buff);\r\n            replay.replayMD5 = readString(buff);\r\n\r\n            replay.number_300s = readShort(buff);\r\n            replay.number_100s = readShort(buff);\r\n            replay.number_50s = readShort(buff);\r\n\r\n            replay.gekis = readShort(buff);\r\n            replay.katus = readShort(buff);\r\n            replay.misses = readShort(buff);\r\n\r\n            replay.score = readInteger(buff);\r\n            replay.maxCombo = readShort(buff);\r\n\r\n            replay.perfectCombo = readByte(buff);\r\n\r\n            replay.mods = new Mods(readInteger(buff));\r\n\r\n            replay.life_bar = readString(buff);\r\n            replay.timestamp = new Date(Number(readLong(buff) - BigInt(EPOCH)) / 10000);\r\n            replay.replayLength = readInteger(buff);\r\n\r\n            if (replay.replayLength != 0) {\r\n                const replayDataString = await readCompressedPromise(buff, replay.replayLength);\r\n                replay.replayData = new ReplayData(replayDataString);\r\n                replay.unknown = Number(readLong(buff));\r\n            }\r\n\r\n            resolve(replay);\r\n        } catch (err) {\r\n            reject(null);\r\n        }\r\n    });\r\n\r\n    function readByte(buffer: Buffer) {\r\n        offset++;\r\n        return buffer.readInt8(offset - 1);\r\n    }\r\n\r\n    function readShort(buffer: Buffer) {\r\n        offset += 2;\r\n        return buffer.readUIntLE(offset - 2, 2);\r\n    }\r\n\r\n    function readInteger(buffer: Buffer) {\r\n        offset += 4;\r\n        return buffer.readInt32LE(offset - 4);\r\n    }\r\n\r\n    function readLong(buffer: Buffer) {\r\n        offset += 8;\r\n        return buffer.readBigUInt64LE(offset - 8);\r\n    }\r\n\r\n    function readString(buffer: Buffer) {\r\n        if (buffer.readInt8(offset) == 0x0b) {\r\n            offset++;\r\n            let ulebString = leb.decodeUInt64(buffer.slice(offset, offset + 8));\r\n            let strLength = ulebString.value;\r\n            offset += strLength + ulebString.nextIndex;\r\n            return buffer.slice(offset - strLength, offset).toString();\r\n        } else {\r\n            offset++;\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    function readCompressed(buffer: Buffer, length: number, callback: Function) {\r\n        offset += length;\r\n        return length != 0 ? lzma.decompress(buffer.slice(offset - length, offset), callback) : callback(null, null);\r\n    }\r\n\r\n    function readCompressedPromise(buffer: Buffer, length: number) {\r\n        return new Promise<string>((resolve, reject) => {\r\n            readCompressed(buffer, length, (result: string, err: Error) => {\r\n                if (result !== undefined) {\r\n                    resolve(result);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n/* Write Replay Object to Buffer */\r\nfunction write(replay: Replay) {\r\n    return new Promise<Buffer>((resolve, reject) => {\r\n        try {\r\n            let gameMode = Buffer.from([replay.gameMode]);\r\n            let gameVersion = writeInteger(replay.gameVersion);\r\n            let beatmapMD5 = writeString(replay.beatmapMD5);\r\n            let playerName = writeString(replay.playerName);\r\n            let replayMD5 = writeString(replay.replayMD5);\r\n\r\n            let number_300s = writeShort(replay.number_300s || 0);\r\n            let number_100s = writeShort(replay.number_100s || 0);\r\n            let number_50s = writeShort(replay.number_50s || 0);\r\n\r\n            let gekis = writeShort(replay.gekis || 0);\r\n            let katus = writeShort(replay.katus || 0);\r\n            let misses = writeShort(replay.misses || 0);\r\n\r\n            let score = writeInteger(replay.score || 0);\r\n            let maxCombo = writeShort(replay.maxCombo || 0);\r\n            let perfectCombo = new Buffer([replay.perfectCombo] || [0x01]);\r\n\r\n            let mods = writeInteger(replay.mods.numeric);\r\n            let life_bar = writeString(replay.life_bar || \"\");\r\n\r\n            let timestamp = writeLong((replay.timestamp || new Date()).getTime() * 10000 + EPOCH);\r\n\r\n            lzma.compress(replay.replayData.toString() || \"\", 1, (res: any, err: any) => {\r\n                let replayData = Buffer.from(res);\r\n                let replayLength = writeInteger(replayData.length);\r\n                let unknown = writeLong(replay.unknown || 0);\r\n\r\n                const finalResult = Buffer.concat([\r\n                    gameMode,\r\n                    gameVersion,\r\n                    beatmapMD5,\r\n                    playerName,\r\n                    replayMD5,\r\n                    number_300s,\r\n                    number_100s,\r\n                    number_50s,\r\n                    gekis,\r\n                    katus,\r\n                    misses,\r\n                    score,\r\n                    maxCombo,\r\n                    perfectCombo,\r\n                    mods,\r\n                    life_bar,\r\n                    timestamp,\r\n                    replayLength,\r\n                    replayData,\r\n                    unknown,\r\n                ]);\r\n\r\n                resolve(finalResult);\r\n            });\r\n        } catch (err) {\r\n            reject(Buffer.from([0x00]));\r\n        }\r\n    });\r\n\r\n    function writeString(text: String) {\r\n        if (text.length > 0) {\r\n            return Buffer.concat([Buffer.from([0x0b]), leb.encodeUInt32(text.length), Buffer.from(text)]);\r\n        }\r\n        return Buffer.from([0x00]);\r\n    }\r\n\r\n    function writeInteger(int: number) {\r\n        let buffer = Buffer.alloc(4);\r\n        buffer.writeInt32LE(int);\r\n        return buffer;\r\n    }\r\n\r\n    function writeShort(short: number) {\r\n        let buffer = Buffer.alloc(2);\r\n        buffer.writeUIntLE(short, 0, 2);\r\n        return buffer;\r\n    }\r\n    function writeLong(long: number) {\r\n        let buffer = Buffer.alloc(8);\r\n        buffer.writeBigUInt64LE(BigInt(long));\r\n        return buffer;\r\n    }\r\n}\r\n\r\nexport { Replay, ReplayNode, ReplayData };\r\n","const DEFAULT_COLOURS = [\r\n    [141, 174, 240],\r\n    [115, 129, 241],\r\n    [214, 214, 214],\r\n    [160, 160, 160],\r\n];\r\n\r\nclass Colours {\r\n    combo: number[][] = [];\r\n    sliderTrackOverride: number[];\r\n    sliderBorder: number[];\r\n\r\n    // \"key : value\" String Format Parsing\r\n    parseStringArray(colourStringArray: string[]) {\r\n        for (let colourString of colourStringArray) {\r\n            if (colourString.includes(\"SliderTrackOverride\")) {\r\n                this.sliderTrackOverride = colourString.replace(/.+: */g, \"\").split(\",\").map(Number);\r\n            } else if (colourString.includes(\"SliderBorder\")) {\r\n                this.sliderBorder = colourString.replace(/.+: */g, \"\").split(\",\").map(Number);\r\n            } else {\r\n                this.combo.push(colourString.replace(/.+: */g, \"\").split(\",\").map(Number));\r\n            }\r\n        }\r\n\r\n        if (this.combo.length === 0) {\r\n            this.combo = DEFAULT_COLOURS;\r\n        }\r\n    }\r\n\r\n    get hex() {\r\n        return this.combo.map((colour) => `#${colour.map((c) => c.toString(16).padStart(2, \"0\")).join(\"\")}`);\r\n    }\r\n}\r\n\r\nexport { Colours };\r\n","import { Mod, Mods } from \"../../Mods/Mods\";\r\n\r\nconst PREEMPT_MIN = 450;\r\nconst TIME_PREEMPT = 600;\r\nconst TIME_FADEIN = 400;\r\n\r\nclass Difficulty {\r\n    public mods: Mods;\r\n\r\n    private hp = 5;\r\n    private cs = 5;\r\n    private od = 5;\r\n    private ar = 5;\r\n\r\n    sliderMultiplier = 1.4;\r\n    sliderTickRate = 1;\r\n\r\n    parseStringArray(args: string[], mods?: Mods) {\r\n        // \"key : value\" String Format Parsing\r\n        const [hp, cs, od, ar, sliderMultiplier, sliderTickRate] = args.map((row) => row.replace(/.+: */g, \"\"));\r\n\r\n        this.hp = parseFloat(hp);\r\n        this.cs = parseFloat(cs);\r\n        this.od = parseFloat(od);\r\n        this.ar = parseFloat(ar);\r\n\r\n        this.sliderMultiplier = parseFloat(sliderMultiplier);\r\n        this.sliderTickRate = parseFloat(sliderTickRate);\r\n\r\n        this.mods = mods ?? new Mods();\r\n        //console.log(this.mods);\r\n    }\r\n\r\n    // Source : https://github.com/ppy/osu/blob/3f31cb39c003990d01bad26cc610553a6e936851/osu.Game.Rulesets.Osu/Objects/OsuHitObject.cs\r\n    get fadeIn() {\r\n        return TIME_FADEIN * Math.min(1, TIME_PREEMPT / PREEMPT_MIN);\r\n    }\r\n\r\n    getPreempt(mods = this.mods) {\r\n        let ar = this.getAR(mods);\r\n        return difficultyRange(ar, 1800, 1200, PREEMPT_MIN);\r\n    }\r\n\r\n    getAR(mods = this.mods) {\r\n        if (mods.contains(Mod.Easy)) {\r\n            return this.ar / 2;\r\n        }\r\n        if (mods.contains(Mod.HardRock)) {\r\n            return Math.min(this.ar * 1.4, 10);\r\n        } else {\r\n            return this.ar;\r\n        }\r\n    }\r\n\r\n    getOD(mods = this.mods) {\r\n        if (mods.contains(Mod.Easy)) {\r\n            return this.od / 2;\r\n        }\r\n        if (mods.contains(Mod.HardRock)) {\r\n            return Math.min(this.od * 1.4, 10);\r\n        } else {\r\n            return this.od;\r\n        }\r\n    }\r\n\r\n    getCS(mods = this.mods) {\r\n        if (mods.contains(Mod.Easy)) {\r\n            return this.cs / 2;\r\n        }\r\n        if (mods.contains(Mod.HardRock)) {\r\n            return Math.min(this.cs * 1.3, 10);\r\n        } else {\r\n            return this.cs;\r\n        }\r\n    }\r\n\r\n    getHP(mods = this.mods) {\r\n        if (mods.contains(Mod.Easy)) {\r\n            return this.hp / 2;\r\n        }\r\n        if (mods.contains(Mod.HardRock)) {\r\n            return Math.min(this.hp * 1.4, 10);\r\n        } else {\r\n            return this.hp;\r\n        }\r\n    }\r\n\r\n    getObjectRadius(mods = this.mods) {\r\n        const cs = this.getCS(mods);\r\n        const r = difficultyRange(cs, 54.4, 32, 9.6);\r\n\r\n        return r;\r\n    }\r\n\r\n    getHitWindows(mods = this.mods): [number, number, number] {\r\n        const hit300 = 79 - this.getOD(mods) * 6 + 0.5;\r\n        const hit100 = 139 - this.getOD(mods) * 8 + 0.5;\r\n        const hit50 = 199 - this.getOD(mods) * 10 + 0.5;\r\n        return [hit300, hit100, hit50];\r\n    }\r\n}\r\n\r\n/* \r\n    Source: https://github.com/ppy/osu/blob/3f31cb39c003990d01bad26cc610553a6e936851/osu.Game/Beatmaps/IBeatmapDifficultyInfo.cs#L56\r\n*/\r\nfunction difficultyRange(difficulty: number, min: number, mid: number, max: number) {\r\n    if (difficulty > 5) return mid + ((max - mid) * (difficulty - 5)) / 5;\r\n    if (difficulty < 5) return mid - ((mid - min) * (5 - difficulty)) / 5;\r\n\r\n    return mid;\r\n}\r\n\r\nexport { Difficulty };\r\n","class Editor {\r\n    bookmarks: number[];\r\n    distanceSpacing: number;\r\n    beatDivisor: number;\r\n    gridSize: number;\r\n    timelineZoom: number;\r\n\r\n    parseStringArray(args: string[]) {\r\n        // \"key : value\" String Format Parsing\r\n        const [bookmarks, distanceSpacing, beatDivisor, gridSize, timelineZoom] = args.map((row) =>\r\n            row.replace(/.+: */g, \"\")\r\n        );\r\n        this.bookmarks = bookmarks.split(\",\").map(Number);\r\n        this.distanceSpacing = parseFloat(distanceSpacing);\r\n        this.beatDivisor = parseInt(beatDivisor);\r\n        this.gridSize = parseInt(gridSize);\r\n        this.timelineZoom = parseFloat(timelineZoom);\r\n    }\r\n}\r\n\r\nexport { Editor };\r\n","/* enum EventType {\r\n    Background = 0,\r\n    Video = 1,\r\n    Break = 2,\r\n} */\r\n\r\ntype EventType = \"background\" | \"video\" | \"break\";\r\n\r\ninterface Event {\r\n    eventType: EventType;\r\n    startTime: number;\r\n}\r\n\r\nclass BackgroundEvent implements Event {\r\n    eventType: EventType = \"background\";\r\n    startTime: number;\r\n    filename: string;\r\n    xOffset: number;\r\n    yOffset: number;\r\n\r\n    constructor(startTime: number, eventParams: string[]) {\r\n        const [filename, xOffset, yOffset] = eventParams;\r\n\r\n        this.startTime = startTime;\r\n        this.filename = filename.replace(/^\"(.*)\"$/, \"$1\");\r\n        this.xOffset = parseInt(xOffset);\r\n        this.yOffset = parseInt(yOffset);\r\n    }\r\n}\r\n\r\nclass VideoEvent implements Event {\r\n    eventType: EventType = \"video\";\r\n    startTime: number;\r\n    filename: string;\r\n    xOffset: number;\r\n    yOffset: number;\r\n\r\n    constructor(startTime: number, eventParams: string[]) {\r\n        const [filename, xOffset, yOffset] = eventParams;\r\n\r\n        this.startTime = startTime;\r\n        this.filename = filename.replace(/^\"(.*)\"$/, \"$1\");\r\n        this.xOffset = parseInt(xOffset);\r\n        this.yOffset = parseInt(yOffset);\r\n    }\r\n}\r\n\r\nclass BreakEvent implements Event {\r\n    eventType: EventType = \"break\";\r\n    startTime: number;\r\n    endTime: number;\r\n\r\n    constructor(startTime: number, eventParams: string[]) {\r\n        this.startTime = startTime;\r\n        this.endTime = parseInt(eventParams[0]);\r\n    }\r\n}\r\n\r\nclass Events {\r\n    events: Event[] = [];\r\n\r\n    parseStringArray(eventStringArray: string[]) {\r\n        this.events = eventStringArray\r\n            .map((eventString) => {\r\n                const [eventType, startTime, ...eventParams] = eventString.split(\",\");\r\n                switch (+eventType) {\r\n                    case 0: {\r\n                        return new BackgroundEvent(+startTime, eventParams);\r\n                    }\r\n                    case 1: {\r\n                        return new VideoEvent(+startTime, eventParams);\r\n                    }\r\n                    case 2: {\r\n                        return new BreakEvent(+startTime, eventParams);\r\n                    }\r\n                }\r\n            })\r\n            .filter((event) => event !== undefined) as Array<Event>;\r\n    }\r\n}\r\n\r\nexport { Events, BackgroundEvent, VideoEvent, BreakEvent };\r\n","class General {\r\n    audioFilename: string;\r\n    audioLeadIn: number;\r\n    previewTime: number;\r\n    countdown: number;\r\n    sampleSet: string;\r\n    stackLeniency: number;\r\n    mode: number;\r\n    letterboxInBreaks: number;\r\n    widescreenStoryboard: number;\r\n    useSkinSprites: number;\r\n    overlayPosition: string;\r\n    skinPreference: string;\r\n    epilepsyWarning: number;\r\n    countdownOffset: number;\r\n    sampleMatchPlaybackRate: number;\r\n\r\n    parseStringArray(args: string[]) {\r\n        // Parse \"key : value\" string format\r\n        function findValueByKey(key: string) {\r\n            const rowFound = args.find((row) => row.split(\":\")[0].toLowerCase() === key.toLowerCase());\r\n\r\n            if (rowFound) {\r\n                return rowFound.replace(/.+: */g, \"\");\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.audioFilename = findValueByKey(\"audioFilename\") ?? \"\";\r\n        this.audioLeadIn = parseInt(findValueByKey(\"audioLeadIn\") ?? \"0\");\r\n        this.previewTime = parseInt(findValueByKey(\"previewTime\") ?? \"-1\");\r\n        this.countdown = parseInt(findValueByKey(\"countdown\") ?? \"1\");\r\n        this.sampleSet = findValueByKey(\"sampleSet\") ?? \"Normal\";\r\n        this.stackLeniency = parseFloat(findValueByKey(\"stackLeniency\") ?? \"0.7\");\r\n        this.mode = parseInt(findValueByKey(\"mode\") ?? \"0\");\r\n        this.letterboxInBreaks = parseInt(findValueByKey(\"letterboxInBreaks\") ?? \"0\");\r\n        this.widescreenStoryboard = parseInt(findValueByKey(\"widescreenStoryboard\") ?? \"0\");\r\n        this.useSkinSprites = parseInt(findValueByKey(\"useSkinSprites\") ?? \"0\");\r\n        this.overlayPosition = findValueByKey(\"overlayPosition\") ?? \"NoChange\";\r\n        this.skinPreference = findValueByKey(\"skinPreference\") ?? \"\";\r\n        this.epilepsyWarning = parseInt(findValueByKey(\"epilepsyWarning\") ?? \"0\");\r\n        this.countdownOffset = parseInt(findValueByKey(\"countdownOffset\") ?? \"0\");\r\n        this.sampleMatchPlaybackRate = parseInt(findValueByKey(\"sampleMatchPlaybackRate\") ?? \"0\");\r\n    }\r\n}\r\n\r\nexport { General };\r\n","export class MathHelper {\r\n    public static BinomialCoefficient(n: number, k: number) {\r\n        return this.Factorial(n) / (this.Factorial(k) * this.Factorial(n - k));\r\n    }\r\n\r\n    public static Factorial(n: number): number {\r\n        return n < 2 ? 1 : n * this.Factorial(n - 1);\r\n    }\r\n\r\n    public static Clamp(value: number, min: number, max: number): number {\r\n        return Math.min(Math.max(value, min), max);\r\n    }\r\n\r\n    public static Lerp(t: number, from: number, to: number, targetFrom: number, targetTo: number): number {\r\n        return (t / (to - from)) * (targetTo - targetFrom) + targetFrom;\r\n    }\r\n\r\n    public static Sum(numbers: number[]) {\r\n        let result = 0;\r\n        for (let i = 0; i < numbers.length; i++) {\r\n            result += numbers[i];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static Average(numbers: number[]): number {\r\n        return numbers.length === 0 ? 0 : this.Sum(numbers) / numbers.length;\r\n    }\r\n\r\n    public static InsideCircle(center: number[], point: number[], radius: number) {\r\n        const dx = point[0] - center[0];\r\n        const dy = point[1] - center[1];\r\n\r\n        return dx * dx + dy * dy <= radius * radius;\r\n    }\r\n}\r\n","import { Vector2 } from \"./Vector2\";\r\n\r\nclass CircularArcProperties {\r\n    isValid: boolean;\r\n    thetaStart: number;\r\n    thetaRange: number;\r\n    direction: number;\r\n    radius: number;\r\n    center: Vector2;\r\n\r\n    get thetaEnd() {\r\n        return this.thetaStart + this.thetaRange * this.direction;\r\n    }\r\n\r\n    constructor(thetaStart: number, thetaRange: number, direction: number, radius: number, center: Vector2) {\r\n        this.isValid = true;\r\n        this.thetaStart = thetaStart;\r\n        this.thetaRange = thetaRange;\r\n        this.direction = direction;\r\n        this.radius = radius;\r\n        this.center = center;\r\n    }\r\n}\r\n\r\nexport class PathApproximator {\r\n    private static BEZIER_TOLERANCE = 0.25;\r\n    private static EPSILON = 1e-3;\r\n    private static CIRCULAR_ARC_TOLERANCE = 0.25;\r\n    private static CATMULL_DETAIL = 50;\r\n\r\n    public static ApproximateLinear(controlPoints: readonly Vector2[]) {\r\n        return controlPoints.map((point) => point.clone());\r\n    }\r\n\r\n    public static ApproximateBezier(controlPoints: readonly Vector2[]) {\r\n        const output = new Array<Vector2>();\r\n\r\n        let n = controlPoints.length - 1;\r\n\r\n        if (n < 0) {\r\n            return output;\r\n        }\r\n\r\n        const toFlatten = new Array<Vector2[]>();\r\n        const freeBuffers = new Array<Vector2[]>();\r\n\r\n        let subdivisionBuffer1 = new Array<Vector2>();\r\n        let subdivisionBuffer2 = new Array<Vector2>();\r\n\r\n        let leftChild = subdivisionBuffer2;\r\n\r\n        toFlatten.push([...controlPoints]);\r\n\r\n        while (toFlatten.length > 0) {\r\n            let parent = toFlatten.pop() as Vector2[];\r\n\r\n            if (this.bezierIsFlatEnough(parent)) {\r\n                this.bezierApproximate(parent, output, subdivisionBuffer1, subdivisionBuffer2, n + 1);\r\n\r\n                freeBuffers.push(parent);\r\n                continue;\r\n            }\r\n\r\n            let rightChild = freeBuffers.length > 0 ? (freeBuffers.pop() as Vector2[]) : new Array<Vector2>();\r\n            this.bezierSubdivide(parent, leftChild, rightChild, subdivisionBuffer1, n + 1);\r\n\r\n            for (let i = 0; i < n + 1; i++) {\r\n                parent[i] = leftChild[i];\r\n            }\r\n\r\n            toFlatten.push(rightChild);\r\n            toFlatten.push(parent);\r\n        }\r\n\r\n        output.push(controlPoints[n]);\r\n\r\n        return output;\r\n    }\r\n\r\n    public static ApproximateCatmull(controlPoints: readonly Vector2[]) {\r\n        let result = new Array<Vector2>();\r\n\r\n        for (let i = 0; i < controlPoints.length - 1; i++) {\r\n            let v1 = i > 0 ? controlPoints[i - 1] : controlPoints[i];\r\n            let v2 = controlPoints[i];\r\n            let v3 = i < controlPoints.length - 1 ? controlPoints[i + 1] : v2.add(v2).subtract(v1);\r\n            let v4 = i < controlPoints.length - 2 ? controlPoints[i + 2] : v3.add(v3).subtract(v2);\r\n\r\n            for (let c = 0; c < this.CATMULL_DETAIL; c++) {\r\n                result.push(this.catmullFindPoint(v1, v2, v3, v4, c / this.CATMULL_DETAIL));\r\n                result.push(this.catmullFindPoint(v1, v2, v3, v4, (c + 1) / this.CATMULL_DETAIL));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static ApproximateCircularArc(controlPoints: readonly Vector2[]) {\r\n        const asd = [...controlPoints];\r\n        let circularArcProperty = this.circularArcProperties(asd);\r\n\r\n        if (!circularArcProperty.isValid) {\r\n            return [...controlPoints];\r\n        }\r\n\r\n        const pr = circularArcProperty as CircularArcProperties;\r\n\r\n        const amountPoints =\r\n            2 * pr.radius <= this.CIRCULAR_ARC_TOLERANCE\r\n                ? 2\r\n                : Math.max(2, Math.ceil(pr.thetaRange / (2 * Math.acos(1 - this.CIRCULAR_ARC_TOLERANCE / pr.radius))));\r\n\r\n        const output = new Array<Vector2>();\r\n\r\n        for (let i = 0; i < amountPoints; ++i) {\r\n            const fract = i / (amountPoints - 1);\r\n            const theta = pr.thetaStart + pr.direction * fract * pr.thetaRange;\r\n            const o = new Vector2(Math.cos(theta), Math.sin(theta)).multiply(pr.radius);\r\n            output.push(pr.center.add(o));\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    private static bezierIsFlatEnough(controlPoints: Vector2[]) {\r\n        for (let i = 1; i < controlPoints.length - 1; i++) {\r\n            const r = controlPoints[i - 1].subtract(controlPoints[i].multiply(2)).add(controlPoints[i + 1]);\r\n\r\n            const lengthSquared = r.lengthSquared();\r\n\r\n            if (lengthSquared > this.BEZIER_TOLERANCE * this.BEZIER_TOLERANCE * 4) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private static bezierSubdivide(\r\n        controlPoints: Vector2[],\r\n        l: Vector2[],\r\n        r: Vector2[],\r\n        subdivisionBuffer: Vector2[],\r\n        count: number\r\n    ) {\r\n        const midpoints = subdivisionBuffer;\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            midpoints[i] = controlPoints[i];\r\n        }\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            l[i] = midpoints[0];\r\n            r[count - i - 1] = midpoints[count - i - 1];\r\n\r\n            for (let j = 0; j < count - i - 1; j++) {\r\n                midpoints[j] = Vector2.Midpoint(midpoints[j], midpoints[j + 1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static bezierApproximate(\r\n        controlPoints: Vector2[],\r\n        output: Vector2[],\r\n        subdivisionBuffer1: Vector2[],\r\n        subdivisionBuffer2: Vector2[],\r\n        count: number\r\n    ) {\r\n        let l = subdivisionBuffer2;\r\n        let r = subdivisionBuffer1;\r\n\r\n        this.bezierSubdivide(controlPoints, l, r, subdivisionBuffer1, count);\r\n\r\n        for (let i = 0; i < count - 1; i++) {\r\n            l[count + i] = r[i + 1];\r\n        }\r\n\r\n        output.push(controlPoints[0].clone());\r\n\r\n        for (let i = 1; i < count - 1; i++) {\r\n            let index = 2 * i;\r\n\r\n            const p = l[index - 1]\r\n                .add(l[index].multiply(2))\r\n                .add(l[index + 1])\r\n                .multiply(0.25);\r\n\r\n            output.push(p);\r\n        }\r\n    }\r\n\r\n    private static circularArcProperties(\r\n        controlPoints: Vector2[]\r\n    ): CircularArcProperties | Pick<CircularArcProperties, \"isValid\"> {\r\n        const [a, b, c] = controlPoints;\r\n\r\n        // If we have a degenerate triangle where a side-length is almost zero, then give up and fallback to a more numerically stable method.\r\n        if (Math.abs((b[1] - a[1]) * (c[0] - a[0]) - (b[0] - a[0]) * (c[1] - a[1])) < this.EPSILON) {\r\n            return { isValid: false };\r\n        }\r\n\r\n        // See: https://en.wikipedia.org/wiki/Circumscribed_circle#Cartesian_coordinates_2\r\n        const d = 2 * (a[0] * b.subtract(c)[1] + b[0] * c.subtract(a)[1] + c[0] * a.subtract(b)[1]);\r\n        const aSq = a.lengthSquared();\r\n        const bSq = b.lengthSquared();\r\n        const cSq = c.lengthSquared();\r\n\r\n        const center = new Vector2(\r\n            (aSq * (b[1] - c[1]) + bSq * (c[1] - a[1]) + cSq * (a[1] - b[1])) / d,\r\n            (aSq * (c[0] - b[0]) + bSq * (a[0] - c[0]) + cSq * (b[0] - a[0])) / d\r\n        );\r\n\r\n        const dA = a.subtract(center);\r\n        const dC = c.subtract(center);\r\n\r\n        const radius = dA.length();\r\n\r\n        let thetaStart = Math.atan2(dA[1], dA[0]);\r\n        let thetaEnd = Math.atan2(dC[1], dC[0]);\r\n\r\n        while (thetaEnd < thetaStart) {\r\n            thetaEnd += 2 * Math.PI;\r\n        }\r\n\r\n        let dir = 1;\r\n        let thetaRange = thetaEnd - thetaStart;\r\n\r\n        // Decide in which direction to draw the circle, depending on which side of\r\n        // AC B lies.\r\n        const orthoAtoC = c.subtract(a).rotate(-Math.PI / 2);\r\n\r\n        if (Vector2.Dot(orthoAtoC, b.subtract(a)) < 0) {\r\n            dir = -dir;\r\n            thetaRange = 2 * Math.PI - thetaRange;\r\n        }\r\n\r\n        return new CircularArcProperties(thetaStart, thetaRange, dir, radius, center);\r\n    }\r\n\r\n    private static catmullFindPoint(vec1: Vector2, vec2: Vector2, vec3: Vector2, vec4: Vector2, t: number) {\r\n        const t2 = t * t;\r\n        const t3 = t2 * t;\r\n\r\n        return new Vector2(\r\n            0.5 *\r\n                (2 * vec2[0] +\r\n                    (-vec1[0] + vec3[0]) * t +\r\n                    (2 * vec1[0] - 5 * vec2[0] + 4 * vec3[0] - vec4[0]) * t2 +\r\n                    (-vec1[0] + 3 * vec2[0] - 3 * vec3[0] + vec4[0]) * t3),\r\n            0.5 *\r\n                (2 * vec2[1] +\r\n                    (-vec1[1] + vec3[1]) * t +\r\n                    (2 * vec1[1] - 5 * vec2[1] + 4 * vec3[1] - vec4[1]) * t2 +\r\n                    (-vec1[1] + 3 * vec2[1] - 3 * vec3[1] + vec4[1]) * t3)\r\n        );\r\n    }\r\n}\r\n","import { MathHelper } from \"./MathHelper\";\r\nimport { PathApproximator } from \"./PathApproximator\";\r\nimport { Vector2 } from \"./Vector2\";\r\n\r\nexport class PathHelper {\r\n    public static CalculateLength(pathPoints: readonly Vector2[]): number {\r\n        let length = 0;\r\n\r\n        for (let i = 0; i < pathPoints.length - 1; i++) {\r\n            const current = pathPoints[i];\r\n            const next = pathPoints[i + 1];\r\n\r\n            length += Vector2.Distance(current, next);\r\n        }\r\n\r\n        return length;\r\n    }\r\n\r\n    public static TrimPath(path: readonly Vector2[], maxLength: number): Vector2[] {\r\n        const result = new Array<Vector2>();\r\n\r\n        if (path.length < 1) {\r\n            return result;\r\n        }\r\n\r\n        result.push(path[0]);\r\n\r\n        let length = 0;\r\n\r\n        for (let i = 1; i < path.length; i++) {\r\n            const prev = path[i - 1];\r\n            const current = path[i];\r\n\r\n            const distance = Vector2.Distance(prev, current);\r\n\r\n            if (length + distance > maxLength) {\r\n                const t = (maxLength - length) / distance;\r\n                const interp = new Vector2(prev[0] * (1 - t) + current[0] * t, prev[1] * (1 - t) + current[1] * t);\r\n\r\n                result.push(interp);\r\n                break;\r\n            }\r\n\r\n            length += distance;\r\n            result.push(path[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static GetPointAt(pathPoints: readonly Vector2[], time: number) {\r\n        time = MathHelper.Clamp(time, 0, 1);\r\n        let result: Vector2 | null = null;\r\n\r\n        const totalLength = PathHelper.CalculateLength(pathPoints);\r\n        const expectedLength = totalLength * time;\r\n\r\n        let length = 0;\r\n\r\n        for (let i = 1; i < pathPoints.length; i++) {\r\n            const prev = pathPoints[i - 1];\r\n            const current = pathPoints[i];\r\n\r\n            const dist = Vector2.Distance(prev, current);\r\n\r\n            if (length + dist > expectedLength) {\r\n                const t = (expectedLength - length) / dist;\r\n\r\n                result = Vector2.LinearInterpolation(prev, current, t);\r\n\r\n                break;\r\n            }\r\n\r\n            length += dist;\r\n        }\r\n\r\n        // Just in case something weird happened related to float precision bullshit\r\n        if (!result) {\r\n            result = pathPoints[pathPoints.length - 1];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static Interpolate(path: readonly Vector2[], maxSegmentLength: number) {\r\n        const result = new Array<Vector2>();\r\n\r\n        if (path.length < 1) {\r\n            return result;\r\n        }\r\n\r\n        result.push(path[0]);\r\n\r\n        for (let i = 1; i < path.length; i++) {\r\n            const prev = path[i - 1];\r\n            const current = path[i];\r\n\r\n            const distance = Vector2.Distance(prev, current);\r\n            const divideCount = Math.floor(distance / maxSegmentLength);\r\n\r\n            for (let j = 0; j < divideCount; j++) {\r\n                const t = (j + 1) / (divideCount + 1);\r\n\r\n                result.push(new Vector2(prev[0] * (1 - t) + current[0] * t, prev[1] * (1 - t) + current[1] * t));\r\n            }\r\n\r\n            result.push(path[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static SplitControlPoints(controlPoints: Vector2[]): Array<Vector2[]> {\r\n        const pathsControlPoints = new Array<Vector2[]>();\r\n\r\n        let startIndex = 0;\r\n\r\n        for (let i = 1; i < controlPoints.length; i++) {\r\n            const prev = controlPoints[i - 1];\r\n            const current = controlPoints[i];\r\n\r\n            if (Vector2.Equals(prev, current) || i === controlPoints.length - 1) {\r\n                const newControlPoints: Array<Vector2> = [];\r\n\r\n                const endIndex = i === controlPoints.length - 1 ? i + 1 : i;\r\n\r\n                for (let j = startIndex; j < endIndex; j++) {\r\n                    newControlPoints.push(controlPoints[j]);\r\n                }\r\n\r\n                pathsControlPoints.push(newControlPoints);\r\n                startIndex = i;\r\n            }\r\n        }\r\n\r\n        return pathsControlPoints;\r\n    }\r\n\r\n    public static CombinePath(pathsControlPoints: Array<Vector2[]>, pathType: string) {\r\n        const result: Array<Vector2> = [];\r\n\r\n        for (let i = 0; i < pathsControlPoints.length; i++) {\r\n            let path = new Array<Vector2>();\r\n            const controlPoints = pathsControlPoints[i];\r\n\r\n            switch (pathType) {\r\n                case \"B\": {\r\n                    path = PathApproximator.ApproximateBezier(controlPoints);\r\n                    break;\r\n                }\r\n                case \"P\": {\r\n                    path = PathApproximator.ApproximateCircularArc(controlPoints);\r\n                    break;\r\n                }\r\n                case \"C\": {\r\n                    path = PathApproximator.ApproximateCatmull(controlPoints);\r\n                    break;\r\n                }\r\n                case \"L\":\r\n                default: {\r\n                    path = PathApproximator.ApproximateLinear(controlPoints);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // If it's not the first path, append path points except for the first point because it's already there,\r\n            // which is the last point of the previous path\r\n            const startIndex = i === 0 ? 0 : 1;\r\n            for (let i = startIndex; i < path.length; i++) {\r\n                result.push(path[i]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static RoundCoordinates(path: Vector2[]) {\r\n        const result: Array<Vector2> = [];\r\n        for (let i = 0; i < path.length; i++) {\r\n            const vec = new Vector2(Math.round(path[i][0]), Math.round(path[i][1]));\r\n            result.push(vec);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /*\r\n        (c) 2017, Vladimir Agafonkin\r\n        Simplify.js, a high-performance JS polyline simplification library\r\n        mourner.github.io/simplify-js\r\n    */\r\n    public static Simplify(path: Vector2[], tolerance: number, highQuality: boolean) {\r\n        if (path.length < 2) {\r\n            return path;\r\n        }\r\n\r\n        const sqTolerance = tolerance * tolerance;\r\n\r\n        path = highQuality ? path : this.simplifyRadialDist(path, sqTolerance);\r\n        path = this.simplifyDouglasPeucker(path, sqTolerance);\r\n\r\n        return path;\r\n    }\r\n\r\n    private static simplifyRadialDist(path: Vector2[], sqTolerance: number) {\r\n        let prevPoint = path[0];\r\n        let newPoints = [prevPoint];\r\n\r\n        let point: Vector2 = path[1];\r\n\r\n        for (let i = 1, len = path.length; i < len; i++) {\r\n            point = path[i];\r\n\r\n            if (Vector2.DistanceSquared(point, prevPoint) > sqTolerance) {\r\n                newPoints.push(point);\r\n                prevPoint = point;\r\n            }\r\n        }\r\n\r\n        if (prevPoint !== point) {\r\n            newPoints.push(point);\r\n        }\r\n\r\n        return newPoints;\r\n    }\r\n\r\n    private static simplifyDouglasPeucker(path: Vector2[], sqTolerance: number): Vector2[] {\r\n        let last = path.length - 1;\r\n\r\n        let simplified = [path[0]];\r\n        this.simplifyDPStep(path, 0, last, sqTolerance, simplified);\r\n        simplified.push(path[last]);\r\n\r\n        return simplified;\r\n    }\r\n\r\n    private static simplifyDPStep(\r\n        path: Vector2[],\r\n        first: number,\r\n        last: number,\r\n        sqTolerance: number,\r\n        simplified: Vector2[]\r\n    ) {\r\n        let maxSqDist = sqTolerance;\r\n        let index: number = 0;\r\n\r\n        for (let i = first + 1; i < last; i++) {\r\n            let sqDist = this.getSqSegDist(path[i], path[first], path[last]);\r\n\r\n            if (sqDist > maxSqDist) {\r\n                index = i;\r\n                maxSqDist = sqDist;\r\n            }\r\n        }\r\n\r\n        if (maxSqDist > sqTolerance) {\r\n            if (index - first > 1) {\r\n                this.simplifyDPStep(path, first, index, sqTolerance, simplified);\r\n            }\r\n            simplified.push(path[index]);\r\n            if (last - index > 1) {\r\n                this.simplifyDPStep(path, index, last, sqTolerance, simplified);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static getSqSegDist(p: Vector2, p1: Vector2, p2: Vector2) {\r\n        var x = p1[0],\r\n            y = p1[1],\r\n            dx = p2[0] - x,\r\n            dy = p2[1] - y;\r\n\r\n        if (dx !== 0 || dy !== 0) {\r\n            var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\r\n\r\n            if (t > 1) {\r\n                x = p2[0];\r\n                y = p2[1];\r\n            } else if (t > 0) {\r\n                x += dx * t;\r\n                y += dy * t;\r\n            }\r\n        }\r\n\r\n        dx = p[0] - x;\r\n        dy = p[1] - y;\r\n\r\n        return dx * dx + dy * dy;\r\n    }\r\n}\r\n","import { PathHelper } from \"./PathHelper\";\r\nimport { Vector2 } from \"./Vector2\";\r\n\r\ntype TPath = {\r\n    (path: Vector2[]): Path;\r\n    (path: number[][]): Path;\r\n};\r\n\r\n// kinda buggy dont touch pls\r\nexport class Path {\r\n    private controlPoints: Vector2[];\r\n\r\n    public points: Vector2[];\r\n\r\n    // Maximum length of each path segment\r\n    private PATH_DETAIL = 10;\r\n\r\n    constructor(pathType: string, controlPoints: readonly number[][], maxLength?: number);\r\n    constructor(pathType: string, controlPoints: readonly Vector2[], maxLength?: number);\r\n    constructor(public pathType: string, controlPoints: readonly Vector2[] | readonly number[][], private maxLength?: number) {\r\n        if (controlPoints[0] instanceof Vector2) {\r\n            this.controlPoints = controlPoints as Vector2[];\r\n        } else {\r\n            this.controlPoints = controlPoints.map((controlPoint) => new Vector2(controlPoint[0], controlPoint[1]));\r\n        }\r\n\r\n        const curvesPath = PathHelper.SplitControlPoints(this.controlPoints);\r\n\r\n        this.points = PathHelper.CombinePath(curvesPath, this.pathType);\r\n\r\n        if (maxLength) {\r\n            this.points = PathHelper.TrimPath(this.points, maxLength);\r\n        }\r\n\r\n        // Equal-ish distance between points no matter where it is, useful for reducing the amount of points\r\n        // this.points = PathHelper.Simplify(this.points, 1, true);\r\n        // this.points = PathHelper.Interpolate(this.points, this.PATH_DETAIL);\r\n    }\r\n\r\n    public move(startX: number, startY: number, endX: number, endY: number) {\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            this.points[i][0] += endX - startX;\r\n            this.points[i][1] += endY - startY;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public translate(x: number, y: number) {\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            this.points[i][0] += x;\r\n            this.points[i][1] += y;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public scale(scale: number): Path;\r\n    public scale(x: number, y: number): Path;\r\n    public scale(xOrScale: number, y?: number): Path {\r\n        if (y === undefined) {\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                this.points[i][0] *= xOrScale;\r\n                this.points[i][1] *= xOrScale;\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                this.points[i][0] *= xOrScale;\r\n                this.points[i][1] *= y;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public getLength(): number {\r\n        return PathHelper.CalculateLength(this.points);\r\n    }\r\n\r\n    // TODO: optimize this , should be easy\r\n    public getPointAt(t: number) {\r\n        return PathHelper.GetPointAt(this.points, t);\r\n    }\r\n\r\n    public getTranslatedPoints(vector: [number, number]): Vector2[];\r\n    public getTranslatedPoints(vector: Vector2): Vector2[];\r\n    public getTranslatedPoints(translation: number): Vector2[];\r\n    public getTranslatedPoints(x: number, y?: number): Vector2[];\r\n    public getTranslatedPoints(xOrTranslationOrVector: number | Vector2 | [number, number], y?: number): Vector2[] {\r\n        const result: Vector2[] = [];\r\n\r\n        if (typeof xOrTranslationOrVector === \"number\") {\r\n            const x = xOrTranslationOrVector;\r\n\r\n            if (y === undefined) {\r\n                for (let i = 0; i < this.points.length; i++) {\r\n                    result.push(this.points[i].add(x));\r\n                }\r\n            } else {\r\n                for (let i = 0; i < this.points.length; i++) {\r\n                    const point = this.points[i].add([x, y]);\r\n                    result.push(point);\r\n                }\r\n            }\r\n        } else {\r\n            const vector = xOrTranslationOrVector;\r\n\r\n            for (let i = 0; i < this.points.length; i++) {\r\n                const point = this.points[i].add([vector[0], vector[1]]);\r\n                result.push(point);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public clone(): Path {\r\n        const controlPoints = this.controlPoints.map((point) => point.clone());\r\n        return new Path(this.pathType, controlPoints, this.maxLength);\r\n    }\r\n}\r\n","function generateInOut(inFunc: (x: number) => number, outFunc: (x: number) => number) {\r\n    return function (x: number) {\r\n        return x < 0.5 ? inFunc(x * 2) / 2 : outFunc(x * 2 - 1) / 2 + 0.5;\r\n    };\r\n}\r\n\r\nfunction elasticBase(x: number) {\r\n    const n = 7;\r\n    const p = 0.38;\r\n    return 1 + -1 * Math.pow(2, -1 * n * x) * Math.cos((2 * Math.PI * x) / p);\r\n}\r\n\r\nfunction bounceBase(x: number) {\r\n    const g = 100;\r\n    const f = 0.4;\r\n    const T = 2 * Math.sqrt(1 / g);\r\n    const q = 1 - g * ((x % T) - T / 2) ** 2;\r\n\r\n    return Math.pow(f, Math.floor(x / T)) * q;\r\n}\r\n\r\nexport type EasingType = Exclude<keyof typeof EasingFunction, \"prototype\">;\r\nexport class EasingFunction {\r\n    static Linear(x: number) {\r\n        return x;\r\n    }\r\n\r\n    static InQuad(x: number) {\r\n        return x ** 2;\r\n    }\r\n\r\n    static OutQuad(x: number) {\r\n        return -((x - 1) ** 2) + 1;\r\n    }\r\n\r\n    static InOutQuad(x: number) {\r\n        return generateInOut(this.InQuad, this.OutQuad)(x);\r\n    }\r\n\r\n    static InCubic(x: number) {\r\n        return x ** 3;\r\n    }\r\n\r\n    static OutCubic(x: number) {\r\n        return (x - 1) ** 3 + 1;\r\n    }\r\n\r\n    static InOutCubic(x: number) {\r\n        return generateInOut(this.InCubic, this.OutCubic)(x);\r\n    }\r\n\r\n    static InQuart(x: number) {\r\n        return x ** 4;\r\n    }\r\n\r\n    static OutQuart(x: number) {\r\n        return -((x - 1) ** 4) + 1;\r\n    }\r\n\r\n    static InOutQuart(x: number) {\r\n        return generateInOut(this.InQuart, this.OutQuart)(x);\r\n    }\r\n\r\n    static InQuint(x: number) {\r\n        return x ** 5;\r\n    }\r\n\r\n    static OutQuint(x: number) {\r\n        return (x - 1) ** 5 + 1;\r\n    }\r\n\r\n    static InOutQuint(x: number) {\r\n        return generateInOut(this.InQuint, this.OutQuint)(x);\r\n    }\r\n\r\n    static InSine(x: number) {\r\n        return 1 - Math.cos((x * Math.PI) / 2);\r\n    }\r\n\r\n    static OutSine(x: number) {\r\n        return Math.sin((x * Math.PI) / 2);\r\n    }\r\n\r\n    static InOutSine(x: number) {\r\n        return generateInOut(this.InSine, this.OutSine)(x);\r\n    }\r\n\r\n    static InExpo(x: number) {\r\n        return x === 0 ? 0 : 2 ** (10 * (x - 1));\r\n    }\r\n\r\n    static OutExpo(x: number) {\r\n        return x === 1 ? 1 : 1 - 2 ** (-10 * x);\r\n    }\r\n\r\n    static InOutExpo(x: number) {\r\n        return generateInOut(this.InExpo, this.OutExpo)(x);\r\n    }\r\n\r\n    static InCirc(x: number) {\r\n        return 1 - Math.sqrt(1 - x * x);\r\n    }\r\n\r\n    static OutCirc(x: number) {\r\n        return Math.sqrt(-((x - 1) ** 2) + 1);\r\n    }\r\n\r\n    static InOutCirc(x: number) {\r\n        return generateInOut(this.InCirc, this.OutCirc)(x);\r\n    }\r\n\r\n    static InElastic(x: number) {\r\n        return 1 - this.OutElastic(1 - x);\r\n    }\r\n\r\n    static OutElastic(x: number) {\r\n        return elasticBase(x);\r\n    }\r\n\r\n    static InOutElastic(x: number) {\r\n        return generateInOut(this.InElastic, this.OutElastic)(x);\r\n    }\r\n\r\n    static InBounce(x: number) {\r\n        return 1 - this.OutBounce(1 - x);\r\n    }\r\n\r\n    static OutBounce(x: number) {\r\n        return 1 - (x < 0.2 ? bounceBase(x / 2 + 0.1) : bounceBase(x));\r\n    }\r\n\r\n    static InOutBounce(x: number) {\r\n        return generateInOut(this.InBounce, this.OutBounce)(x);\r\n    }\r\n}\r\n","import { EasingFunction, EasingType } from \"./EasingFunction\";\r\n\r\ninterface Easing {\r\n    startTime: number;\r\n    endTime: number;\r\n    targetFrom: number;\r\n    targetTo: number;\r\n    easingType: EasingType;\r\n}\r\n\r\n// Holds possibly different values depending on the given time\r\nclass Easer {\r\n    easings: Easing[] = [];\r\n    public time: number = 0;\r\n\r\n    constructor(public fallbackValue: number = 0) {}\r\n\r\n    static CreateEasing(\r\n        startTime: number,\r\n        endTime: number,\r\n        targetFrom: number,\r\n        targetTo: number,\r\n        easingType: EasingType = \"Linear\"\r\n    ): Easing {\r\n        return { startTime, endTime, targetFrom, targetTo, easingType };\r\n    }\r\n\r\n    get value(): number {\r\n        return this.getValueAt(this.time);\r\n    }\r\n\r\n    getValueAt(time: number): number {\r\n        if (this.easings.length === 0) {\r\n            return this.fallbackValue;\r\n        }\r\n\r\n        let result: number | undefined = undefined;\r\n        let selectedEasing: Easing | undefined = undefined;\r\n\r\n        for (let i = this.easings.length - 1; i >= 0; i--) {\r\n            selectedEasing = this.easings[i];\r\n\r\n            if (time > selectedEasing.endTime || time < selectedEasing.startTime) {\r\n                continue;\r\n            }\r\n\r\n            const t = (time - selectedEasing.startTime) / (selectedEasing.endTime - selectedEasing.startTime);\r\n            result =\r\n                EasingFunction[selectedEasing.easingType](t) * (selectedEasing.targetTo - selectedEasing.targetFrom) +\r\n                selectedEasing.targetFrom;\r\n            break;\r\n        }\r\n\r\n        if (result === undefined) {\r\n            let minDeltaTime = Infinity;\r\n            let closestIndexBefore: number = 0;\r\n\r\n            // edge case, time is before the first easing\r\n            if (time < this.easings[0].startTime) {\r\n                result = this.easings[0].targetFrom;\r\n            } else {\r\n                for (let i = 0; i < this.easings.length; i++) {\r\n                    const easing = this.easings[i];\r\n                    const deltaTime = time - easing.endTime;\r\n\r\n                    if (deltaTime < 0) {\r\n                        break;\r\n                    }\r\n\r\n                    if (minDeltaTime > deltaTime) {\r\n                        minDeltaTime = deltaTime;\r\n                        closestIndexBefore = i;\r\n                    }\r\n                }\r\n\r\n                const closestEasing = this.easings[closestIndexBefore];\r\n                result = closestEasing.targetTo;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // I hate TypeScript function overloading so much 🤮\r\n    addEasing(...easings: Easing[]): Easer;\r\n    addEasing(startTime: number, endTime: number, targetFrom: number, targetTo: number, easingType?: EasingType): Easer;\r\n    addEasing(\r\n        easingsOrStartTime: Easing | number,\r\n        endTime?: number | Easing,\r\n        targetFrom?: number | Easing,\r\n        targetTo?: number | Easing,\r\n        easingType: EasingType | Easing = \"Linear\"\r\n    ): Easer {\r\n        if (typeof easingsOrStartTime === \"number\") {\r\n            const startTime = easingsOrStartTime;\r\n            this.easings.push({\r\n                startTime: startTime as number,\r\n                endTime: endTime as number,\r\n                targetFrom: targetFrom as number,\r\n                targetTo: targetTo as number,\r\n                easingType: easingType as EasingType,\r\n            });\r\n        } else {\r\n            this.easings.push(...arguments);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    removeEasing(...easings: Easing[]) {\r\n        this.easings = this.easings.filter((e) => !easings.includes(e));\r\n    }\r\n\r\n    removeAllEasings() {\r\n        this.easings = [];\r\n    }\r\n}\r\n\r\nexport { Easer, Easing, EasingFunction, EasingType };\r\n","import { Easer, Easing } from \"./Easer\";\r\n\r\nclass Animation<T> {\r\n    public animationEasers: { easer: Easer; easings: Easing[] }[] = [];\r\n\r\n    constructor(public animationType: T) {}\r\n\r\n    public setSequence(easer: Easer, easings: Easing[]) {\r\n        const easerIndex = this.animationEasers.findIndex((animationEaser) => animationEaser.easer === easer);\r\n        if (easerIndex === -1) {\r\n            this.animationEasers.push({ easer, easings: easings });\r\n            easer.addEasing(...easings);\r\n            return;\r\n        }\r\n\r\n        const oldEasings = this.animationEasers[easerIndex].easings;\r\n        this.animationEasers[easerIndex].easer.removeEasing(...oldEasings);\r\n        easer.addEasing(...easings);\r\n    }\r\n\r\n    public addSequence(easer: Easer, easings: Easing[]) {\r\n        const easerIndex = this.animationEasers.findIndex((animationEaser) => animationEaser.easer === easer);\r\n        if (easerIndex === -1) {\r\n            this.setSequence(easer, easings);\r\n            return;\r\n        }\r\n\r\n        this.animationEasers[easerIndex].easings.push(...easings);\r\n        easer.addEasing(...easings);\r\n    }\r\n\r\n    public removeSequence(sequence: { easer: Easer; easings: Easing[] }) {\r\n        const easerIndex = this.animationEasers.findIndex((animationEaser) => animationEaser.easer === sequence.easer);\r\n\r\n        this.animationEasers[easerIndex].easer.removeEasing(...sequence.easings);\r\n        this.animationEasers.splice(easerIndex, 1);\r\n    }\r\n}\r\n\r\nexport { Animation };\r\n","import { Animation } from \"../../../../../math/Animation\";\r\nimport { Easer, Easing } from \"../../../../../math/Easer\";\r\n\r\nabstract class DrawableHitObject<T> {\r\n    private animations: Animation<T>[] = [];\r\n\r\n    // Called every game tick, depends on the replay node density and playback rate\r\n    update(time: number) {\r\n        this.removeFutureAnimation(time);\r\n    }\r\n\r\n    // Called every frames, ideally 60 frames per seconds / every 16.6 ms\r\n    draw(time: number) {}\r\n\r\n    protected playAnimation(animationType: T, easer: Easer, easings: Easing[]) {\r\n        const animationIndex = this.animations.findIndex((anim) => anim.animationType === animationType);\r\n\r\n        if (animationIndex === -1) {\r\n            const animation = new Animation(animationType);\r\n            this.animations.push(animation);\r\n            animation.addSequence(easer, easings);\r\n            return;\r\n        }\r\n\r\n        this.animations[animationIndex].addSequence(easer, easings);\r\n    }\r\n\r\n    protected removeFutureAnimation(time: number) {\r\n        this.animations.forEach((anim) => {\r\n            const futureAnimEasers = anim.animationEasers.filter((animEasers) => {\r\n                return Math.min(...animEasers.easings.map((easing) => easing.startTime)) > time;\r\n            });\r\n\r\n            futureAnimEasers.forEach((pog) => {\r\n                anim.removeSequence(pog);\r\n            });\r\n        });\r\n    }\r\n\r\n    animate(animationType: T, time: number) {}\r\n}\r\n\r\nexport { DrawableHitObject };\r\n","import { Easer } from \"../../../../../math/Easer\";\r\nimport { Mod } from \"../../../../Mods/Mods\";\r\nimport { HitCircle } from \"../HitCircle\";\r\nimport { DrawableHitObject } from \"./DrawableHitObject\";\r\n\r\ntype HitCircleAnimation = \"SHAKE\" | \"HIT\" | \"MISS\";\r\n\r\nexport class DrawableHitCircle extends DrawableHitObject<HitCircleAnimation> {\r\n    opacity: Easer;\r\n    approachCircleOpacity: Easer;\r\n    approachCircleScale: Easer;\r\n    positionOffset = {\r\n        x: new Easer(0),\r\n        y: new Easer(0),\r\n    };\r\n    scale = new Easer(1);\r\n\r\n    constructor(public hitObject: HitCircle) {\r\n        super();\r\n        const diff = hitObject.difficulty;\r\n        const fadeIn = diff.fadeIn;\r\n        const preempt = diff.getPreempt();\r\n        const appearTime = hitObject.startTime - preempt;\r\n\r\n        const opacity: Easer = new Easer();\r\n        if (diff.mods.contains(Mod.Hidden)) {\r\n            opacity.addEasing(appearTime, appearTime + preempt * 0.4, 0, 1);\r\n            opacity.addEasing(appearTime + preempt * 0.4, appearTime + preempt * 0.7, 1, 0);\r\n        } else {\r\n            opacity.addEasing(appearTime, appearTime + fadeIn, 0, 1);\r\n            opacity.addEasing(hitObject.endTime, hitObject.endTime + 150, 1, 0);\r\n        }\r\n\r\n        const approachCircleOpacity: Easer = new Easer(0);\r\n        if (diff.mods.contains(Mod.Hidden)) {\r\n            if (hitObject.objectIndex === 0) {\r\n                approachCircleOpacity.addEasing(0, Math.min(fadeIn * 2, preempt), 0, 1);\r\n                approachCircleOpacity.addEasing(Math.min(fadeIn * 2, preempt), Math.min(fadeIn * 2, preempt) * 2, 1, 0);\r\n            }\r\n        } else {\r\n            approachCircleOpacity.addEasing(appearTime, appearTime + Math.min(fadeIn * 2, preempt), 0, 1);\r\n            approachCircleOpacity.addEasing(hitObject.startTime, hitObject.startTime + 150, 1, 0);\r\n        }\r\n\r\n        const approachCircleScale: Easer = new Easer(1);\r\n        approachCircleScale.addEasing(appearTime, hitObject.startTime, 4, 1);\r\n\r\n        this.opacity = opacity;\r\n        this.approachCircleOpacity = approachCircleOpacity;\r\n        this.approachCircleScale = approachCircleScale;\r\n\r\n        this.animate(\"HIT\", hitObject.endTime);\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.opacity.time = time;\r\n        this.scale.time = time;\r\n        this.approachCircleOpacity.time = time;\r\n        this.approachCircleScale.time = time;\r\n        this.positionOffset.x.time = time;\r\n        this.positionOffset.y.time = time;\r\n    }\r\n\r\n    animate(animation: HitCircleAnimation, time: number) {\r\n        switch (animation) {\r\n            case \"SHAKE\": {\r\n                this.playAnimation(\"SHAKE\", this.positionOffset.x, shake(time));\r\n                break;\r\n            }\r\n\r\n            case \"MISS\": {\r\n                if (this.hitObject.difficulty.mods.contains(Mod.Hidden)) {\r\n                    break;\r\n                }\r\n\r\n                this.playAnimation(\"MISS\", this.opacity, miss(time));\r\n                this.playAnimation(\"MISS\", this.approachCircleOpacity, miss(time));\r\n                break;\r\n            }\r\n\r\n            case \"HIT\": {\r\n                if (this.hitObject.difficulty.mods.contains(Mod.Hidden)) {\r\n                    break;\r\n                }\r\n\r\n                this.playAnimation(\"HIT\", this.opacity, opacityAfterHit(time));\r\n                this.playAnimation(\"HIT\", this.scale, scaleAfterHit(time));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction shake(time: number) {\r\n    const shakeoffset = 7;\r\n    const shakeTimeStep = 50;\r\n\r\n    const right = Easer.CreateEasing(time, time + shakeTimeStep, 0, shakeoffset);\r\n    const left = Easer.CreateEasing(time + shakeTimeStep, time + shakeTimeStep * 3, shakeoffset, -shakeoffset);\r\n    const center = Easer.CreateEasing(time + shakeTimeStep * 3, time + shakeTimeStep * 4, -shakeoffset, 0, \"OutBounce\");\r\n\r\n    return [right, left, center];\r\n}\r\n\r\nfunction miss(time: number) {\r\n    const fadeOutTime = 80;\r\n    const fadeOut = Easer.CreateEasing(time, time + fadeOutTime, 1, 0);\r\n    return [fadeOut];\r\n}\r\n\r\nfunction opacityAfterHit(time: number) {\r\n    const fadeOutTime = 150;\r\n    const fadeOut = Easer.CreateEasing(time, time + fadeOutTime, 1, 0, \"OutQuad\");\r\n\r\n    return [fadeOut];\r\n}\r\n\r\nfunction scaleAfterHit(time: number) {\r\n    const scaleOutTime = 150;\r\n    const scaleOut = Easer.CreateEasing(time, time + scaleOutTime, 1, 1.25);\r\n\r\n    return [scaleOut];\r\n}\r\n","import { Difficulty } from \"../Difficulty\";\r\n\r\nenum HitObjectType {\r\n    HitCircle = 1 << 0,\r\n    Slider = 1 << 1,\r\n    Spinner = 1 << 3,\r\n    NewCombo = 1 << 2,\r\n    ColorSkip1 = 1 << 4,\r\n    ColorSkip2 = 1 << 5,\r\n    ColorSkip3 = 1 << 6,\r\n}\r\n\r\nclass Hitsample {\r\n    constructor(\r\n        public normalSet: number,\r\n        public additionSet: number,\r\n        public index: number,\r\n        public volume: number,\r\n        public filename: string\r\n    ) {}\r\n}\r\n\r\ninterface HitObjectConfig {\r\n    startPos: [number, number];\r\n    endPos: [number, number];\r\n    startTime: number;\r\n    endTime: number;\r\n    type: HitObjectType;\r\n    hitSound: number;\r\n    hitSample?: Hitsample;\r\n    comboCount: number;\r\n    objectIndex: number;\r\n    difficulty: Difficulty;\r\n}\r\n\r\nclass HitObject {\r\n    startPos: [number, number];\r\n    endPos: [number, number];\r\n    startTime: number;\r\n    endTime: number;\r\n    type: HitObjectType;\r\n    hitSound: number;\r\n    hitSample?: Hitsample;\r\n    comboCount: number;\r\n    objectIndex: number;\r\n\r\n    colour: string = \"#ffffff\";\r\n    difficulty: Difficulty;\r\n\r\n    stackCount: number = 0;\r\n    stackOffset: number = 0;\r\n\r\n    constructor(hitObjectConfig: HitObjectConfig) {\r\n        const { startPos, endPos, startTime, endTime, type, hitSound, hitSample, comboCount, difficulty, objectIndex } =\r\n            hitObjectConfig;\r\n        this.startPos = startPos;\r\n        this.endPos = endPos;\r\n        this.startTime = startTime;\r\n        this.endTime = endTime;\r\n        this.type = type;\r\n        this.hitSound = hitSound;\r\n        this.hitSample = hitSample;\r\n        this.difficulty = difficulty;\r\n\r\n        this.objectIndex = objectIndex;\r\n        this.comboCount = comboCount;\r\n    }\r\n\r\n    draw(time: number) {}\r\n\r\n    update(time: number) {}\r\n\r\n    getStackedStartPos() {\r\n        return [this.startPos[0] - this.stackOffset, this.startPos[1] - this.stackOffset];\r\n    }\r\n\r\n    getStackedEndPos() {\r\n        return [this.endPos[0] - this.stackOffset, this.endPos[1] - this.stackOffset];\r\n    }\r\n\r\n    setNewCombo() {\r\n        this.type &= HitObjectType.NewCombo;\r\n    }\r\n\r\n    isNewCombo() {\r\n        return this.type & HitObjectType.NewCombo;\r\n    }\r\n\r\n    isHitCircle() {\r\n        return this.type & HitObjectType.HitCircle;\r\n    }\r\n\r\n    isSlider() {\r\n        return this.type & HitObjectType.Slider;\r\n    }\r\n\r\n    isSpinner() {\r\n        return this.type & HitObjectType.Spinner;\r\n    }\r\n\r\n    isVisibleAt(time: number) {\r\n        return time >= this.startTime - this.difficulty.getPreempt() && time <= this.endTime + 150;\r\n    }\r\n\r\n    // How many colour(s) are skipped on the new combo\r\n    getColourHax() {\r\n        return ((this.type & (HitObjectType.ColorSkip1 | HitObjectType.ColorSkip2 | HitObjectType.ColorSkip3)) >> 4) + 1;\r\n    }\r\n}\r\n\r\nexport { HitObject, Hitsample, HitObjectConfig, HitObjectType };\r\n","import { DrawableHitCircle } from \"./Drawable/DrawableHitCircle\";\r\nimport { HitObject, HitObjectConfig } from \"./HitObject\";\r\n\r\nclass HitCircle extends HitObject {\r\n    drawable: DrawableHitCircle;\r\n\r\n    constructor(hitObjectConfig: HitObjectConfig) {\r\n        super(hitObjectConfig);\r\n\r\n        this.drawable = new DrawableHitCircle(this);\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.drawable.draw(time);\r\n    }\r\n\r\n    update(time: number): void {\r\n        this.drawable.update(time);\r\n    }\r\n}\r\n\r\nexport { HitCircle, HitObjectConfig };\r\n","import { MathHelper } from \"../../../../../math/MathHelper\";\r\nimport { Easer } from \"../../../../../math/Easer\";\r\nimport { Mod } from \"../../../../Mods/Mods\";\r\nimport { Slider, SliderReverseTick, SliderTick } from \"../Slider\";\r\nimport { DrawableHitObject } from \"./DrawableHitObject\";\r\n\r\nclass DrawableSliderTick {\r\n    opacity: Easer;\r\n    scale: Easer;\r\n\r\n    constructor(public sliderTick: SliderTick) {\r\n        const slider = sliderTick.slider;\r\n        const tickOpacity = new Easer(0);\r\n        const tickScale = new Easer(0);\r\n\r\n        const slideIndex = slider.getSlideIndexAt(sliderTick.time);\r\n\r\n        const diff = slider.difficulty;\r\n        const preempt = diff.getPreempt();\r\n        const appearTime = slider.startTime - preempt;\r\n\r\n        const firstTickAppearTime = slideIndex === 0 ? appearTime : slider.getSlideStartTime(slideIndex);\r\n        let fadeStart = firstTickAppearTime + (sliderTick.time - firstTickAppearTime) / 2 - 150;\r\n        let fadeEnd = fadeStart + 150;\r\n\r\n        tickOpacity.addEasing(fadeStart, fadeEnd, 0, 1);\r\n        tickOpacity.addEasing(fadeEnd, sliderTick.time, 1, 1);\r\n\r\n        tickScale.addEasing(fadeStart, fadeEnd, 0, 1, \"OutElastic\");\r\n        tickScale.addEasing(fadeEnd, sliderTick.time, 1, 1);\r\n\r\n        this.opacity = tickOpacity;\r\n        this.scale = tickScale;\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.opacity.time = time;\r\n        this.scale.time = time;\r\n    }\r\n}\r\n\r\nclass DrawableReverseTick {\r\n    opacity: Easer;\r\n    scale: Easer;\r\n\r\n    constructor(public reverseTick: SliderReverseTick) {\r\n        const slider = reverseTick.slider;\r\n        const slideDuration = Math.floor(slider.duration / slider.slides);\r\n        const reverseTime = reverseTick.time;\r\n\r\n        const tickOpacity = new Easer(0);\r\n        const tickFadeStart = reverseTime - slideDuration * 2;\r\n        tickOpacity.addEasing(tickFadeStart, tickFadeStart + 300, 0, 1);\r\n        tickOpacity.addEasing(tickFadeStart + 300, reverseTime, 1, 1);\r\n\r\n        // Scale beat every 300ms\r\n        const tickScale = new Easer(1);\r\n        const tickStart = reverseTime - slideDuration * 2;\r\n        const tickEnd = reverseTime;\r\n\r\n        for (let i = tickStart; i < tickEnd; i += 300) {\r\n            tickScale.addEasing(i, i + 300, 1, 0.6);\r\n        }\r\n\r\n        this.opacity = tickOpacity;\r\n        this.scale = tickScale;\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.opacity.time = time;\r\n        this.scale.time = time;\r\n    }\r\n}\r\n\r\ntype SliderAnimation = \"FOLLOW_START\" | \"UNFOLLOW\" | \"FOLLOW_END\";\r\n\r\nclass DrawableSlider extends DrawableHitObject<SliderAnimation> {\r\n    progress: number;\r\n    progressPosition: [number, number];\r\n    isVisible: boolean;\r\n    isSliding: boolean;\r\n    isReversed: boolean;\r\n    slideIndex: number;\r\n\r\n    bodyOpacity: Easer;\r\n    headOpacity: Easer;\r\n    ballOpacity: Easer;\r\n\r\n    followCircleOpacity: Easer;\r\n    followCircleScale: Easer;\r\n\r\n    approachCircleOpacity: Easer;\r\n    approachCircleScale: Easer;\r\n\r\n    constructor(public slider: Slider) {\r\n        super();\r\n        const diff = slider.difficulty;\r\n        const fadeIn = diff.fadeIn;\r\n        const preempt = diff.getPreempt();\r\n\r\n        const bodyOpacity: Easer = new Easer();\r\n        const headOpacity: Easer = new Easer();\r\n        const appearTime = slider.startTime - preempt;\r\n\r\n        if (diff.mods.contains(Mod.Hidden)) {\r\n            bodyOpacity.addEasing(appearTime, appearTime + fadeIn, 0, 0.7);\r\n            bodyOpacity.addEasing(appearTime + fadeIn, slider.endTime, 0.7, 0, \"OutQuad\");\r\n\r\n            headOpacity.addEasing(appearTime, appearTime + preempt * 0.4, 0, 1);\r\n            headOpacity.addEasing(appearTime + preempt * 0.4, appearTime + preempt * 0.7, 1, 0);\r\n        } else {\r\n            bodyOpacity.addEasing(appearTime, appearTime + fadeIn, 0, 0.7);\r\n            bodyOpacity.addEasing(slider.endTime, slider.endTime + 150, 0.7, 0);\r\n\r\n            headOpacity.addEasing(appearTime, appearTime + fadeIn, 0, 1);\r\n            headOpacity.addEasing(slider.startTime, slider.startTime + 150, 1, 0);\r\n        }\r\n\r\n        const ballOpacity = new Easer(0);\r\n        ballOpacity.addEasing(slider.startTime, slider.startTime + 1, 0, 1);\r\n        ballOpacity.addEasing(slider.endTime, slider.endTime + 1, 1, 0);\r\n\r\n        const followCircleOpacity = new Easer(0);\r\n        const followCircleScale = new Easer(1);\r\n\r\n        const approachCircleOpacity: Easer = new Easer(0);\r\n\r\n        if (diff.mods.contains(Mod.Hidden)) {\r\n            if (slider.objectIndex === 0) {\r\n                approachCircleOpacity.addEasing(0, Math.min(fadeIn * 2, preempt), 0, 1);\r\n                approachCircleOpacity.addEasing(Math.min(fadeIn * 2, preempt), Math.min(fadeIn * 2, preempt) * 2, 1, 0);\r\n            }\r\n        } else {\r\n            approachCircleOpacity.addEasing(appearTime, appearTime + Math.min(fadeIn * 2, preempt), 0, 1);\r\n            approachCircleOpacity.addEasing(appearTime + Math.min(fadeIn * 2, preempt), slider.startTime, 1, 1);\r\n            approachCircleOpacity.addEasing(slider.startTime, slider.startTime + 150, 1, 0);\r\n        }\r\n\r\n        const approachCircleScale: Easer = new Easer(1);\r\n        approachCircleScale.addEasing(appearTime, slider.startTime, 4, 1);\r\n        approachCircleScale.addEasing(slider.startTime, slider.startTime + 100, 1, 1.05);\r\n\r\n        this.progress = 0;\r\n        this.progressPosition = slider.getPositionAt(0);\r\n        this.isVisible = false;\r\n        this.isSliding = false;\r\n        this.isReversed = false;\r\n        this.slideIndex = 0;\r\n        this.bodyOpacity = bodyOpacity;\r\n        this.headOpacity = headOpacity;\r\n        this.ballOpacity = ballOpacity;\r\n        this.followCircleOpacity = followCircleOpacity;\r\n        this.followCircleScale = followCircleScale;\r\n        this.approachCircleOpacity = approachCircleOpacity;\r\n        this.approachCircleScale = approachCircleScale;\r\n\r\n        this.animate(\"FOLLOW_START\", slider.startTime);\r\n        this.animate(\"FOLLOW_END\", slider.endTime);\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.progress = MathHelper.Clamp((time - this.slider.startTime) / this.slider.duration, 0, 1);\r\n        this.progressPosition = this.slider.getStackedPositionAt(time);\r\n        this.isVisible = this.slider.isVisibleAt(time);\r\n        this.isSliding = time >= this.slider.startTime && time <= this.slider.endTime;\r\n        this.slideIndex = this.slider.getSlideIndexAt(time);\r\n        this.isReversed = this.slider.getSlideDirectionAt(time) === -1;\r\n        this.bodyOpacity.time = time;\r\n        this.headOpacity.time = time;\r\n        this.ballOpacity.time = time;\r\n        this.followCircleOpacity.time = time;\r\n        this.followCircleScale.time = time;\r\n        this.approachCircleOpacity.time = time;\r\n        this.approachCircleScale.time = time;\r\n    }\r\n\r\n    // TODO: create a proper \"fadeTo\" type of animation\r\n    animate(animationType: SliderAnimation, time: number): void {\r\n        switch (animationType) {\r\n            case \"FOLLOW_START\": {\r\n                this.playAnimation(\"FOLLOW_START\", this.followCircleOpacity, followStartOpacityAnim(time));\r\n                this.playAnimation(\"FOLLOW_START\", this.followCircleScale, followStartScaleAnim(time));\r\n                break;\r\n            }\r\n\r\n            case \"UNFOLLOW\": {\r\n                this.playAnimation(\"UNFOLLOW\", this.followCircleOpacity, unfollowOpacityAnim(time));\r\n                this.playAnimation(\"UNFOLLOW\", this.followCircleScale, unfollowScaleAnim(time));\r\n                break;\r\n            }\r\n\r\n            case \"FOLLOW_END\": {\r\n                const opacity = this.followCircleOpacity;\r\n                const scale = this.followCircleScale;\r\n                this.playAnimation(\"FOLLOW_END\", opacity, followerEndOpacityAnim(opacity.getValueAt(time), time));\r\n                this.playAnimation(\"FOLLOW_END\", scale, followerEndScaleAnim(scale.getValueAt(time), time));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst followerStartSize = 1 / 1.4;\r\n\r\nfunction followStartOpacityAnim(time: number) {\r\n    return [Easer.CreateEasing(time, time + 450, 0, 1, \"OutQuad\")];\r\n}\r\n\r\nfunction followStartScaleAnim(time: number) {\r\n    return [Easer.CreateEasing(time, time + 450, followerStartSize, 1, \"OutQuad\")];\r\n}\r\n\r\nfunction unfollowOpacityAnim(time: number) {\r\n    return [Easer.CreateEasing(time, time + 250, 1, 0, \"OutQuad\")];\r\n}\r\n\r\nfunction unfollowScaleAnim(time: number) {\r\n    return [Easer.CreateEasing(time, time + 450, 1, 2, \"OutQuad\")];\r\n}\r\n\r\nfunction followerEndOpacityAnim(currentOpacity: number, time: number) {\r\n    return [Easer.CreateEasing(time, time + 150, currentOpacity, 0, \"OutQuad\")];\r\n}\r\n\r\nfunction followerEndScaleAnim(currentScale: number, time: number) {\r\n    return [Easer.CreateEasing(time, time + 250, currentScale, followerStartSize, \"OutQuad\")];\r\n}\r\n\r\nexport { DrawableReverseTick, DrawableSlider, DrawableSliderTick };\r\n","import { MathHelper } from \"../../../../math/MathHelper\";\r\nimport { Path } from \"../../../../math/Path\";\r\nimport { Vector2 } from \"../../../../math/Vector2\";\r\nimport { TimingPoints } from \"../TimingPoints\";\r\nimport { DrawableReverseTick, DrawableSlider, DrawableSliderTick } from \"./Drawable/DrawableSlider\";\r\nimport { HitObject, HitObjectConfig } from \"./HitObject\";\r\n\r\nclass SliderTick {\r\n    drawable: DrawableSliderTick;\r\n\r\n    constructor(public slider: Slider, public time: number, public position: [number, number]) {\r\n        this.drawable = new DrawableSliderTick(this);\r\n    }\r\n}\r\n\r\nclass SliderReverseTick {\r\n    drawable: DrawableReverseTick;\r\n\r\n    constructor(public slider: Slider, public time: number, public position: [number, number], public isReversed: boolean) {\r\n        this.drawable = new DrawableReverseTick(this);\r\n    }\r\n}\r\n\r\ninterface SliderConfig {\r\n    curveType: string;\r\n    curvePoints: number[][];\r\n    curvePath: Path;\r\n    slides: number;\r\n    length: number;\r\n    edgeSounds: number[];\r\n    edgeSets: string[][];\r\n}\r\n\r\nclass Slider extends HitObject {\r\n    curveType: string;\r\n    curvePoints: number[][];\r\n    curvePath: Path;\r\n    slides: number;\r\n    length: number;\r\n    edgeSounds: number[];\r\n    edgeSets: string[][];\r\n\r\n    startAngle: number;\r\n    endAngle: number;\r\n\r\n    duration: number;\r\n\r\n    sliderTicks: SliderTick[] = [];\r\n    reverseTicks: SliderReverseTick[] = [];\r\n\r\n    drawable: DrawableSlider;\r\n\r\n    constructor(hitObjectConfig: HitObjectConfig, sliderConfig: SliderConfig, private timing: TimingPoints) {\r\n        super(hitObjectConfig);\r\n\r\n        const { curveType, curvePoints, curvePath, slides, length, edgeSounds, edgeSets } = sliderConfig;\r\n\r\n        this.curveType = curveType;\r\n        this.curvePoints = curvePoints;\r\n        this.curvePath = curvePath;\r\n        this.slides = slides;\r\n        this.length = length;\r\n        this.edgeSounds = edgeSounds;\r\n        this.edgeSets = edgeSets;\r\n\r\n        const points = this.curvePath.points;\r\n        const s1 = points[1];\r\n        const s2 = points[0];\r\n        this.startAngle = Vector2.Angle(s2, s1);\r\n\r\n        const e1 = points[points.length - 2];\r\n        const e2 = points[points.length - 1];\r\n        this.endAngle = Vector2.Angle(e2, e1);\r\n\r\n        const { duration, endTime } = this.initializeTiming();\r\n        this.duration = duration;\r\n        this.endTime = endTime;\r\n        this.sliderTicks = this.initializeSliderTicks();\r\n        this.reverseTicks = this.initializeReverseTicks();\r\n\r\n        this.drawable = new DrawableSlider(this);\r\n    }\r\n\r\n    private initializeTiming() {\r\n        const sliderStartTime = this.startTime;\r\n\r\n        const timing = this.timing.getTimingAt(sliderStartTime);\r\n        const beatLength = timing.beatLength;\r\n        const sliderMult = this.difficulty.sliderMultiplier;\r\n        const sliderPixelVelocity = sliderMult * 100; // sliderMult*100 pixels for every beat\r\n\r\n        const sliderBeatCount = (this.length * this.slides) / sliderPixelVelocity;\r\n        const sliderDuration = sliderBeatCount * beatLength;\r\n\r\n        const duration = sliderDuration;\r\n        const endTime = this.startTime + sliderDuration;\r\n\r\n        return { duration, endTime };\r\n    }\r\n\r\n    // TODO: fix bug where ticks fall on the different places for long fast repeating slider\r\n    private initializeSliderTicks() {\r\n        const timing = this.timing.getTimingAt(this.startTime);\r\n\r\n        const sliderTickRate = this.difficulty.sliderTickRate;\r\n        const sliderTickDuration = timing.beatLengthBase / sliderTickRate;\r\n        const sliderSlideDuration = Math.floor(this.duration / this.slides);\r\n\r\n        const tickCountPerSlide = Math.max(0, Math.ceil(sliderSlideDuration / sliderTickDuration) - 1);\r\n        const sliderTicks: SliderTick[] = [];\r\n        for (let i = 0; i < this.slides; i++) {\r\n            const isReverse = i % 2 === 1;\r\n\r\n            if (!isReverse) {\r\n                for (let j = 0; j < tickCountPerSlide; j++) {\r\n                    const tickTime = this.startTime + (j + 1) * sliderTickDuration + i * sliderSlideDuration;\r\n                    const tickPos = this.getPositionAt(tickTime);\r\n\r\n                    const tick = new SliderTick(this, tickTime, tickPos);\r\n                    sliderTicks.push(tick);\r\n                }\r\n            } else {\r\n                for (let j = tickCountPerSlide - 1; j >= 0; j--) {\r\n                    const tickTime =\r\n                        this.startTime + sliderSlideDuration - (j + 1) * sliderTickDuration + i * sliderSlideDuration;\r\n                    const tickPos = this.getPositionAt(tickTime);\r\n\r\n                    const tick = new SliderTick(this, tickTime, tickPos);\r\n                    sliderTicks.push(tick);\r\n                }\r\n            }\r\n        }\r\n\r\n        return sliderTicks;\r\n    }\r\n\r\n    private initializeReverseTicks() {\r\n        const reverseTicks: SliderReverseTick[] = [];\r\n\r\n        for (let i = 1; i < this.slides; i++) {\r\n            const slideDuration = Math.floor(this.duration / this.slides);\r\n            const reverseTime = this.startTime + slideDuration * i;\r\n            const reversePos = this.getPositionAt(reverseTime);\r\n\r\n            const sliderCurvePoints = this.curvePath.points;\r\n\r\n            let reverseAngle;\r\n            if (i % 2 === 0) {\r\n                const p1 = sliderCurvePoints[1];\r\n                const p2 = sliderCurvePoints[0];\r\n\r\n                reverseAngle = Vector2.Angle(p2, p1);\r\n            } else {\r\n                const p1 = sliderCurvePoints[sliderCurvePoints.length - 2];\r\n                const p2 = sliderCurvePoints[sliderCurvePoints.length - 1];\r\n\r\n                reverseAngle = Vector2.Angle(p2, p1);\r\n            }\r\n            const isReversed = i % 2 === 1;\r\n\r\n            const reverseTick = new SliderReverseTick(this, reverseTime, reversePos, isReversed);\r\n            reverseTicks.push(reverseTick);\r\n        }\r\n\r\n        return reverseTicks;\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.drawable.draw(time);\r\n        this.sliderTicks.forEach((ticks) => ticks.drawable.draw(time));\r\n        this.reverseTicks.forEach((ticks) => ticks.drawable.draw(time));\r\n    }\r\n\r\n    getPositionAt(time: number) {\r\n        time = MathHelper.Clamp(time, this.startTime, this.endTime);\r\n        const slideIndex = this.getSlideIndexAt(time);\r\n\r\n        const t1 = (time - this.startTime) / (this.duration / this.slides) - slideIndex;\r\n        const t2 = slideIndex % 2 === 0 ? t1 : 1 - t1;\r\n\r\n        return this.curvePath.getPointAt(t2).toTuple();\r\n    }\r\n\r\n    getStackedPositionAt(time: number): [number, number] {\r\n        const position = this.getPositionAt(time);\r\n\r\n        return [position[0] - this.stackOffset, position[1] - this.stackOffset];\r\n    }\r\n\r\n    getSlideDirectionAt(time: number) {\r\n        time = MathHelper.Clamp(time, this.startTime, this.endTime);\r\n\r\n        return this.getSlideIndexAt(time) % 2 === 0 ? 1 : -1;\r\n    }\r\n\r\n    getSlideIndexAt(time: number) {\r\n        time = MathHelper.Clamp(time, this.startTime, this.endTime);\r\n\r\n        return Math.max(0, Math.ceil(((time - this.startTime) * this.slides) / this.duration) - 1);\r\n    }\r\n\r\n    getSlideStartTime(index: number) {\r\n        return this.startTime + (index * this.duration) / this.slides;\r\n    }\r\n\r\n    getCurvePath() {\r\n        return this.curvePath;\r\n    }\r\n\r\n    getStackedCurvePath() {\r\n        const path = this.curvePath.clone();\r\n        path.translate(-this.stackOffset, -this.stackOffset);\r\n\r\n        return path;\r\n    }\r\n\r\n    getSliderTicks() {\r\n        return this.sliderTicks;\r\n    }\r\n\r\n    getStackedSliderTicks() {\r\n        const ticks: SliderTick[] = [];\r\n        for (const tick of this.sliderTicks) {\r\n            ticks.push(\r\n                new SliderTick(this, tick.time, [tick.position[0] - this.stackOffset, tick.position[1] - this.stackOffset])\r\n            );\r\n        }\r\n        return ticks;\r\n    }\r\n\r\n    getReverseTicks() {\r\n        return this.reverseTicks;\r\n    }\r\n\r\n    getStackedReverseTicks() {\r\n        const ticks: SliderReverseTick[] = [];\r\n        for (const tick of this.reverseTicks) {\r\n            ticks.push(\r\n                new SliderReverseTick(\r\n                    this,\r\n                    tick.time,\r\n                    [tick.position[0] - this.stackOffset, tick.position[1] - this.stackOffset],\r\n                    tick.isReversed\r\n                )\r\n            );\r\n        }\r\n        return ticks;\r\n    }\r\n}\r\n\r\nexport { Slider, SliderTick, SliderReverseTick, SliderConfig };\r\n","import { Easer } from \"../../../../../math/Easer\";\r\nimport { Spinner } from \"../Spinner\";\r\n\r\nexport class DrawableSpinner {\r\n    rpm: number;\r\n    rotation: number;\r\n    meter: number;\r\n    opacity: Easer;\r\n\r\n    constructor(public spinner: Spinner) {\r\n        const opacity = new Easer();\r\n\r\n        const appearTime = spinner.startTime - spinner.difficulty.getPreempt();\r\n        const dissapearTime = spinner.endTime + 150;\r\n\r\n        opacity.addEasing(appearTime, spinner.startTime, 0, 1);\r\n        opacity.addEasing(spinner.startTime, spinner.endTime, 1, 1);\r\n        opacity.addEasing(spinner.endTime, dissapearTime, 1, 0);\r\n\r\n        this.rpm = 0;\r\n        this.rotation = 0;\r\n        this.meter = 0;\r\n        this.opacity = opacity;\r\n    }\r\n\r\n    draw(time: number) {\r\n        this.opacity.time = time;\r\n    }\r\n}\r\n","import { DrawableSpinner } from \"./Drawable/DrawableSpinner\";\r\nimport { HitObject, HitObjectConfig } from \"./HitObject\";\r\n\r\nclass Spinner extends HitObject {\r\n    drawable: DrawableSpinner;\r\n\r\n    constructor(hitObjectConfig: HitObjectConfig) {\r\n        super(hitObjectConfig);\r\n\r\n        this.drawable = new DrawableSpinner(this);\r\n    }\r\n\r\n    draw(time: number): void {\r\n        this.drawable.draw(time);\r\n    }\r\n}\r\n\r\nexport { Spinner };\r\n","import { Path } from \"../../../math/Path\";\r\nimport { Vector2 } from \"../../../math/Vector2\";\r\nimport { Mod } from \"../../Mods/Mods\";\r\nimport { Difficulty } from \"./Difficulty\";\r\nimport { HitCircle } from \"./HitObjects/HitCircle\";\r\nimport { HitObject, HitObjectType, Hitsample } from \"./HitObjects/HitObject\";\r\nimport { Slider } from \"./HitObjects/Slider\";\r\nimport { Spinner } from \"./HitObjects/Spinner\";\r\nimport { TimingPoints } from \"./TimingPoints\";\r\n\r\nclass HitObjects {\r\n    objects: HitObject[] = [];\r\n\r\n    parseStringArray(hitObjectStringArray: string[], difficulty: Difficulty, timing: TimingPoints) {\r\n        let comboCount = 0;\r\n        let objectIndex = 0;\r\n\r\n        for (let hitObjectString of hitObjectStringArray) {\r\n            const hitObjectParams = hitObjectString.split(\",\");\r\n            const hitObjectType = parseInt(hitObjectParams[3]);\r\n\r\n            // If new combo or spinner, reset the combo\r\n            (hitObjectType & HitObjectType.NewCombo || hitObjectType & HitObjectType.Spinner) && (comboCount = 0);\r\n            comboCount++;\r\n            if (hitObjectType & HitObjectType.HitCircle) {\r\n                // General Parameter\r\n                let [x, y, time, type, hitSound] = hitObjectParams.slice(0, 5).map(Number);\r\n\r\n                // Flip Vertically on HardRock Mod\r\n                if (difficulty.mods.contains(Mod.HardRock)) {\r\n                    y = 384 - y;\r\n                }\r\n\r\n                const startPos: [number, number] = [x, y];\r\n                const endPos: [number, number] = [x, y];\r\n                const startTime = time;\r\n                const endTime = time;\r\n\r\n                // Hitsound Parameter\r\n                const [normalSet, additionSet, index, volume, filename] = hitObjectParams[5].split(\":\");\r\n                const hitSample = new Hitsample(+normalSet, +additionSet, +index, +volume, filename);\r\n\r\n                // Add HitObject to array\r\n                const hitObjectConfig = {\r\n                    startPos,\r\n                    endPos,\r\n                    startTime,\r\n                    endTime,\r\n                    type,\r\n                    hitSound,\r\n                    hitSample,\r\n                    comboCount,\r\n                    difficulty,\r\n                    objectIndex,\r\n                };\r\n                const hitCircle = new HitCircle(hitObjectConfig);\r\n                this.objects.push(hitCircle);\r\n            } else if (hitObjectType & HitObjectType.Slider) {\r\n                // General Parameter\r\n                let [x, y, time, type, hitSound] = hitObjectParams.slice(0, 5).map(Number);\r\n                const startTime = time;\r\n                const endTime = time; // will be overwritten later on applyTiming() method\r\n\r\n                // Slider Parameter\r\n                const [curveType, ...curvePointsStr] = hitObjectParams[5].split(\"|\");\r\n                const [slides, length] = hitObjectParams.slice(6, 8).map(Number);\r\n                const curvePoints = curvePointsStr.map((curvePoint) => curvePoint.split(\":\").map(Number));\r\n\r\n                // Flip Vertically on HardRock Mod\r\n                if (difficulty.mods.contains(Mod.HardRock)) {\r\n                    y = 384 - y;\r\n                    curvePoints.forEach((curvePoint) => (curvePoint[1] = 384 - curvePoint[1]));\r\n                }\r\n\r\n                const curvePath = new Path(curveType, [[x, y]].concat(curvePoints), length);\r\n\r\n                // Slider Position\r\n                const startPos: [number, number] = [x, y];\r\n                const endPosRaw = curvePath.points[curvePath.points.length - 1].toTuple();\r\n                const endPos: [number, number] = [Math.floor(endPosRaw[0]), Math.floor(endPosRaw[1])];\r\n\r\n                let hitSample = new Hitsample(0, 0, 0, 0, \"\");\r\n                let edgeSounds: number[] = [];\r\n                let edgeSets: string[][] = [];\r\n\r\n                // If the Hitsound Parameter exists\r\n                if (hitObjectParams.length > 8) {\r\n                    edgeSounds = hitObjectParams[8].split(\"|\").map(Number);\r\n                    edgeSets = hitObjectParams[9].split(\"|\").map((edgeSet) => edgeSet.split(\":\"));\r\n\r\n                    const [normalSet, additionSet, index, volume, filename] = hitObjectParams[10].split(\":\");\r\n                    hitSample = new Hitsample(+normalSet, +additionSet, +index, +volume, filename);\r\n                }\r\n\r\n                // Add HitObject to array\r\n                const hitObjectConfig = {\r\n                    startPos,\r\n                    endPos,\r\n                    startTime,\r\n                    endTime,\r\n                    type,\r\n                    hitSound,\r\n                    hitSample,\r\n                    comboCount,\r\n                    difficulty,\r\n                    objectIndex,\r\n                };\r\n                const sliderConfig = { curveType, curvePoints, curvePath, slides, length, edgeSounds, edgeSets };\r\n                const slider = new Slider(hitObjectConfig, sliderConfig, timing);\r\n                this.objects.push(slider);\r\n            } else if (hitObjectType & HitObjectType.Spinner) {\r\n                // General Parameter & Slider Parameter\r\n                const [x, y, time, type, hitSound, endTime] = hitObjectParams.slice(0, 6).map(Number);\r\n                const startPos: [number, number] = [x, y];\r\n                const endPos = startPos;\r\n                const startTime = time;\r\n\r\n                // Hitsound Parameter\r\n                const [normalSet, additionSet, index, volume, filename] = hitObjectParams[6].split(\":\");\r\n                const hitSample = new Hitsample(+normalSet, +additionSet, +index, +volume, filename);\r\n\r\n                // Add HitObject to array\r\n                const hitObjectConfig = {\r\n                    startPos,\r\n                    endPos,\r\n                    startTime,\r\n                    endTime,\r\n                    type,\r\n                    hitSound,\r\n                    hitSample,\r\n                    comboCount,\r\n                    difficulty,\r\n                    objectIndex,\r\n                };\r\n                const spinner = new Spinner(hitObjectConfig);\r\n                this.objects.push(spinner);\r\n            }\r\n\r\n            objectIndex++;\r\n        }\r\n    }\r\n\r\n    applyColour(colour: string[]) {\r\n        let colourIndex = 0;\r\n        for (let hitObject of this.objects) {\r\n            if (hitObject.isNewCombo()) {\r\n                colourIndex = (colourIndex + hitObject.getColourHax()) % colour.length;\r\n            }\r\n            hitObject.colour = colour[colourIndex];\r\n        }\r\n    }\r\n\r\n    // source : https://gist.githubusercontent.com/peppy/1167470/raw/a665e0774b040f7a930c436baa534b002b1c23ef/osuStacking.cs\r\n    applyStacking(difficulty: Difficulty, stackLeniency: number) {\r\n        const hitObjectRadius = difficulty.getObjectRadius();\r\n\r\n        const stackOffset = hitObjectRadius / 10;\r\n\r\n        const STACK_LENIENCE = 3;\r\n        const stackThreshold = difficulty.getPreempt() * stackLeniency;\r\n\r\n        // Reverse pass for stack calculation\r\n        for (let i = this.objects.length - 1; i > 0; i--) {\r\n            let n = i;\r\n\r\n            let objectI = this.objects[i];\r\n\r\n            if (objectI.stackCount != 0 || objectI.isSpinner()) continue;\r\n\r\n            if (objectI.isHitCircle()) {\r\n                while (--n >= 0) {\r\n                    const objectN = this.objects[n];\r\n\r\n                    if (objectN.isSpinner()) continue;\r\n                    if (objectI.startTime - objectN.endTime > stackThreshold) break;\r\n\r\n                    if (objectN.isSlider() && Vector2.Distance(objectN.endPos, objectI.startPos) < STACK_LENIENCE) {\r\n                        let offset = objectI.stackCount - objectN.stackCount + 1;\r\n\r\n                        for (let j = n + 1; j <= i; j++) {\r\n                            if (Vector2.Distance(objectN.endPos, this.objects[j].startPos) < STACK_LENIENCE) {\r\n                                this.objects[j].stackCount -= offset;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    if (Vector2.Distance(objectN.startPos, objectI.startPos) < STACK_LENIENCE) {\r\n                        objectN.stackCount = objectI.stackCount + 1;\r\n                        objectI = objectN;\r\n                    }\r\n                }\r\n            } else if (objectI.isSlider()) {\r\n                while (--n >= 0) {\r\n                    let objectN = this.objects[n];\r\n\r\n                    if (objectN.isSpinner()) continue;\r\n                    if (objectI.startTime - objectN.startTime > stackThreshold) break;\r\n\r\n                    if (Vector2.Distance(objectN.endPos, objectI.startPos) < STACK_LENIENCE) {\r\n                        objectN.stackCount = objectI.stackCount + 1;\r\n                        objectI = objectN;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const object of this.objects) {\r\n            if (object.isSpinner()) continue;\r\n\r\n            const stackCount = object.stackCount;\r\n            const stackDistance = stackCount * stackOffset;\r\n\r\n            object.stackOffset = stackDistance;\r\n        }\r\n    }\r\n\r\n    getIndexNear(timestamp: number) {\r\n        let mid;\r\n        let lo = 0;\r\n        let hi = this.objects.length - 1;\r\n        while (hi - lo > 1) {\r\n            mid = Math.floor((lo + hi) / 2);\r\n            if (this.objects[mid].startTime < timestamp) {\r\n                lo = mid;\r\n            } else {\r\n                hi = mid;\r\n            }\r\n        }\r\n        if (timestamp - this.objects[lo].startTime <= this.objects[hi].startTime - timestamp) {\r\n            return lo;\r\n        }\r\n        return hi;\r\n    }\r\n}\r\n\r\nexport { HitObjects, HitObject, HitCircle, Slider, Spinner };\r\n","class Metadata {\r\n    title: string;\r\n    titleUnicode: string;\r\n    artist: string;\r\n    artistUnicode: string;\r\n    creator: string;\r\n    version: string;\r\n    source: string;\r\n    tags: string;\r\n    beatmapId: number;\r\n    beatmapSetId: number;\r\n\r\n    parseStringArray(args: string[]) {\r\n        // \"key : value\" String Format Parsing\r\n        const [title, titleUnicode, artist, artistUnicode, creator, version, source, tags, beatmapId, beatmapSetId] =\r\n            args.map((row) => row.replace(/.+: */g, \"\"));\r\n\r\n        this.title = title || \"\";\r\n        this.titleUnicode = titleUnicode || \"\";\r\n        this.artist = artist || \"\";\r\n        this.artistUnicode = artistUnicode || \"\";\r\n        this.creator = creator || \"\";\r\n        this.version = version || \"\";\r\n        this.source = source || \"\";\r\n        this.tags = tags || \"\";\r\n        this.beatmapId = parseInt(beatmapId) || 0;\r\n        this.beatmapSetId = parseInt(beatmapSetId) || 0;\r\n    }\r\n}\r\n\r\nexport { Metadata };\r\n","class Timing {\r\n    public beatLength: number;\r\n    public beatLengthBase: number;\r\n\r\n    constructor(\r\n        public time: number,\r\n        _beatlength: number,\r\n        base: number,\r\n        public meter: number,\r\n        public sampleSet: number,\r\n        public sampleIndex: number,\r\n        public volume: number,\r\n        public uninhereted: number,\r\n        public effects: number\r\n    ) {\r\n        this.beatLengthBase = base;\r\n        if (uninhereted) {\r\n            this.beatLength = _beatlength;\r\n        } else {\r\n            this.beatLength = (Math.max(10, Math.min(1000, -_beatlength)) * base) / 100;\r\n        }\r\n    }\r\n\r\n    get bpm() {\r\n        return (1 / this.beatLengthBase) * 1000 * 60;\r\n    }\r\n}\r\n\r\nclass TimingPoints {\r\n    timings: Timing[] = [];\r\n\r\n    parseStringArray(timingStringArray: string[]) {\r\n        let inheritedBase = 0;\r\n        for (let timingString of timingStringArray) {\r\n            const [time, beatLength, meter, sampleSet, sampleIndex, volume, uninherited, effects] = timingString\r\n                .split(\",\")\r\n                .map(Number);\r\n\r\n            if (uninherited) {\r\n                inheritedBase = beatLength;\r\n            }\r\n\r\n            const timing = new Timing(\r\n                time,\r\n                beatLength,\r\n                inheritedBase,\r\n                meter,\r\n                sampleSet,\r\n                sampleIndex,\r\n                volume,\r\n                uninherited,\r\n                effects\r\n            );\r\n\r\n            this.timings.push(timing);\r\n        }\r\n    }\r\n\r\n    getTimingAt(time: number) {\r\n        let timing = this.timings[0];\r\n        for (let i = 0; i < this.timings.length; i++) {\r\n            if (this.timings[i].time > time) {\r\n                break;\r\n            }\r\n            timing = this.timings[i];\r\n        }\r\n        return timing;\r\n    }\r\n\r\n    getInheritedTimingAt(time: number) {\r\n        let timing = this.timings[0];\r\n        for (let i = 0; i < this.timings.length; i++) {\r\n            if (this.timings[i].time > time) {\r\n                break;\r\n            }\r\n\r\n            if (!this.timings[i].uninhereted) {\r\n                timing = this.timings[i];\r\n            }\r\n        }\r\n        return timing;\r\n    }\r\n\r\n    getUninheritedTimingAt(time: number) {\r\n        let timing = this.timings[0];\r\n        for (let i = 0; i < this.timings.length; i++) {\r\n            if (this.timings[i].time > time) {\r\n                break;\r\n            }\r\n\r\n            if (this.timings[i].uninhereted) {\r\n                timing = this.timings[i];\r\n            }\r\n        }\r\n        return timing;\r\n    }\r\n}\r\n\r\nexport { TimingPoints };\r\n","import { Mods } from \"../Mods/Mods\";\r\nimport { Colours } from \"./BeatmapAttributes/Colours\";\r\nimport { Difficulty } from \"./BeatmapAttributes/Difficulty\";\r\nimport { Editor } from \"./BeatmapAttributes/Editor\";\r\nimport { BackgroundEvent, Events } from \"./BeatmapAttributes/Events\";\r\nimport { General } from \"./BeatmapAttributes/General\";\r\nimport { HitObjects } from \"./BeatmapAttributes/HitObjects\";\r\nimport { Metadata } from \"./BeatmapAttributes/Metadata\";\r\nimport { TimingPoints } from \"./BeatmapAttributes/TimingPoints\";\r\n\r\nclass Beatmap {\r\n    general: General;\r\n    editor: Editor;\r\n    metadata: Metadata;\r\n    difficulty: Difficulty;\r\n    events: Events;\r\n    timingPoints: TimingPoints;\r\n    colours: Colours;\r\n    hitObjects: HitObjects;\r\n\r\n    constructor(private mapData: string = \"\", mods?: Mods) {\r\n        const { general, editor, metadata, difficulty, events, timingPoints, colours, hitObjects } =\r\n            this.parseBeatmap(mods);\r\n        this.general = general;\r\n        this.editor = editor;\r\n        this.metadata = metadata;\r\n        this.difficulty = difficulty;\r\n        this.events = events;\r\n        this.timingPoints = timingPoints;\r\n        this.colours = colours;\r\n        this.hitObjects = hitObjects;\r\n    }\r\n\r\n    private parseBeatmap(mods?: Mods) {\r\n        const general = new General();\r\n        const editor = new Editor();\r\n        const metadata = new Metadata();\r\n        const difficulty = new Difficulty();\r\n        const events = new Events();\r\n        const timingPoints = new TimingPoints();\r\n        const colours = new Colours();\r\n        const hitObjects = new HitObjects();\r\n\r\n        // Split the map data into lines\r\n        const row = this.mapData\r\n            .replace(/(\\/\\/.+)/g, \"\")\r\n            .split(/\\r?\\n/)\r\n            .filter((str) => str !== \"\");\r\n\r\n        // Get section headers index/row\r\n        const sections = [\r\n            \"[General]\",\r\n            \"[Editor]\",\r\n            \"[Metadata]\",\r\n            \"[Difficulty]\",\r\n            \"[Events]\",\r\n            \"[TimingPoints]\",\r\n            \"[Colours]\",\r\n            \"[HitObjects]\",\r\n        ];\r\n        const sectionsIndex = sections.map((section) => row.findIndex((str) => str === section));\r\n\r\n        // Split sections into their own array, and remove the section headers\r\n        const sectionChunk: string[][] = [];\r\n        sectionsIndex.reverse().forEach((index) => {\r\n            sectionChunk.push(row.splice(index).splice(1));\r\n        });\r\n        sectionChunk.reverse();\r\n\r\n        // Parse sections into their own objects\r\n        general.parseStringArray(sectionChunk[0]);\r\n        editor.parseStringArray(sectionChunk[1]);\r\n        metadata.parseStringArray(sectionChunk[2]);\r\n        difficulty.parseStringArray(sectionChunk[3], mods);\r\n        events.parseStringArray(sectionChunk[4]);\r\n        timingPoints.parseStringArray(sectionChunk[5]);\r\n        colours.parseStringArray(sectionChunk[6]);\r\n        hitObjects.parseStringArray(sectionChunk[7], difficulty, timingPoints);\r\n\r\n        // Set hitObjects colours and stacks\r\n        const hexColours = colours.hex;\r\n        hitObjects.applyColour(hexColours);\r\n\r\n        const stackLeniency = general.stackLeniency;\r\n        hitObjects.applyStacking(difficulty, stackLeniency);\r\n\r\n        return { general, editor, metadata, difficulty, events, timingPoints, colours, hitObjects };\r\n    }\r\n\r\n    getMods() {\r\n        return this.difficulty.mods;\r\n    }\r\n\r\n    setMods(mods: Mods) {\r\n        const { general, editor, metadata, difficulty, events, timingPoints, colours, hitObjects } =\r\n            this.parseBeatmap(mods);\r\n\r\n        this.difficulty = difficulty;\r\n        this.hitObjects = hitObjects;\r\n    }\r\n\r\n    getBackgroundFileNames(): string[] {\r\n        const backgroundNames: string[] = [];\r\n        this.events.events.forEach((event) => {\r\n            if (event.eventType === \"background\") {\r\n                backgroundNames.push((event as BackgroundEvent).filename);\r\n            }\r\n        });\r\n        return backgroundNames;\r\n    }\r\n\r\n    getAudioFilename(): string {\r\n        return this.general.audioFilename;\r\n    }\r\n}\r\n\r\nexport { Beatmap };\r\n","import { Beatmap } from \"./osu/Beatmap/Beatmap\";\r\nimport { GameInstance } from \"./osu/Gameplay/GameInstance\";\r\nimport { Mods } from \"./osu/Mods/Mods\";\r\nimport { Replay } from \"./osu/Replay/Replay\";\r\nimport { AudioHandler } from \"./renderer/AudioHandler\";\r\nimport { Renderer } from \"./renderer/Renderer\";\r\nimport { Settings } from \"./settings/Settings\";\r\n\r\ninterface ReplayTaleConfig {\r\n    container: string;\r\n}\r\n\r\nclass ReplayTale {\r\n    beatmap: Beatmap | null = null;\r\n    replay: Replay | null = null;\r\n\r\n    public isModsOverriden: Boolean = false;\r\n    private _replayModsNumeric: number | null;\r\n    private mods: Mods | null = null;\r\n\r\n    private renderer: Renderer;\r\n    private audioHandler: AudioHandler;\r\n    private gameInstance: GameInstance;\r\n\r\n    public isPaused: boolean = true;\r\n    private timestamp: number = 0;\r\n\r\n    private _playbackRate: number = 1;\r\n    public get playbackRate(): number {\r\n        return this._playbackRate;\r\n    }\r\n    public set playbackRate(value: number) {\r\n        this._playbackRate = value;\r\n        this.audioHandler.setAudioOptions(\"beatmap\", { playbackRate: value });\r\n    }\r\n\r\n    constructor(replaytaleConfig: ReplayTaleConfig) {\r\n        const { container } = replaytaleConfig;\r\n        this.renderer = new Renderer(container);\r\n        this.audioHandler = new AudioHandler();\r\n        this.gameInstance = new GameInstance(this.renderer);\r\n    }\r\n\r\n    loadBeatmapAssets(audio?: HTMLAudioElement, background?: HTMLImageElement) {\r\n        if (audio !== undefined) {\r\n            const volume = Settings.get(\"AudioVolume\");\r\n            const offset = Settings.get(\"AudioOffset\");\r\n            this.audioHandler.loadAudio(\"beatmap\", audio, { volume: volume / 100, offsetMS: offset });\r\n\r\n            Settings.addUpdateListener(\"AudioVolume\", (volume: number) => {\r\n                this.audioHandler.setAudioOptions(\"beatmap\", { volume: volume / 100 });\r\n            });\r\n\r\n            Settings.addUpdateListener(\"AudioOffset\", (offset: number) => {\r\n                this.audioHandler.setAudioOptions(\"beatmap\", { offsetMS: offset });\r\n            });\r\n        }\r\n\r\n        if (background !== undefined) {\r\n            this.renderer.setBackground(background);\r\n        }\r\n    }\r\n\r\n    loadBeatmap(beatmap: Beatmap) {\r\n        if (this.mods !== null) {\r\n            beatmap.setMods(this.mods);\r\n        }\r\n\r\n        if (this.mods === null && this.replay && this.replay.mods.numeric !== beatmap.getMods().numeric) {\r\n            const mods = this.replay.mods;\r\n            beatmap.setMods(mods);\r\n        }\r\n\r\n        this.beatmap = beatmap;\r\n        this.gameInstance.loadBeatmap(beatmap);\r\n        this.renderer.loadBeatmap(beatmap);\r\n    }\r\n\r\n    loadReplay(replay: Replay) {\r\n        this._replayModsNumeric = replay.mods.numeric;\r\n\r\n        if (this.mods !== null) {\r\n            replay.mods = this.mods;\r\n        }\r\n\r\n        if (this.beatmap && this.beatmap.getMods().numeric !== replay.mods.numeric) {\r\n            this.beatmap.setMods(replay.mods);\r\n        }\r\n\r\n        this.replay = replay;\r\n        this.gameInstance.loadReplay(replay);\r\n        this.renderer.loadReplay(replay);\r\n    }\r\n\r\n    enableModsOverride(mods: Mods) {\r\n        //console.log(`Enabling Overrides : ${mods.list}`);\r\n\r\n        this.isModsOverriden = true;\r\n\r\n        if (mods.numeric === this.mods?.numeric) {\r\n            return;\r\n        }\r\n\r\n        this.mods = mods;\r\n        this.replay && (this.replay.mods = mods);\r\n        if (this.beatmap) {\r\n            const oldMods = this.beatmap.getMods().numeric;\r\n            this.beatmap.setMods(mods);\r\n\r\n            if (oldMods !== mods.numeric) {\r\n                this.renderer.loadBeatmap(this.beatmap);\r\n            }\r\n        }\r\n    }\r\n\r\n    disableModsOverride() {\r\n        //console.log(`Disabling Overrides! Previous Beatmap Mods : ${this.beatmap?.getMods().list}`);\r\n\r\n        this.mods = null;\r\n        if (this._replayModsNumeric === null) {\r\n            return;\r\n        }\r\n\r\n        const oldReplayMods = new Mods(this._replayModsNumeric);\r\n\r\n        this.replay && (this.replay.mods = oldReplayMods);\r\n\r\n        if (this.beatmap) {\r\n            const oldMapMods = this.beatmap.getMods().numeric;\r\n            this.beatmap.setMods(oldReplayMods);\r\n\r\n            if (oldMapMods !== oldReplayMods.numeric) {\r\n                this.renderer.loadBeatmap(this.beatmap);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _autoSyncCount = 0;\r\n    private _autoSyncLastTime = 0;\r\n    private lastFrameTimestamp: number = 0;\r\n    private loop = (time: number) => {\r\n        if (this.isPaused) return;\r\n\r\n        let deltaTime = time - this.lastFrameTimestamp;\r\n\r\n        this.timestamp += deltaTime * this.playbackRate;\r\n        this.renderer.timestamp = this.timestamp;\r\n        this.gameInstance.time = this.timestamp;\r\n        this.lastFrameTimestamp = time;\r\n\r\n        // Sync audio automatically if somehow the game/audio drifts\r\n        if (Settings.get(\"AudioAutoSyncEnabled\")) {\r\n            const currTime = this.audioHandler.getAudioCurrentTimeMS(\"beatmap\");\r\n            const offset = this.audioHandler.getAudioOffsetMS(\"beatmap\");\r\n            const timeDiff = currTime - offset - this.timestamp;\r\n            if (Math.abs(timeDiff) > Settings.get(\"AudioAutoSyncThresholdMS\")) {\r\n                this.audioHandler.seekAudio(\"beatmap\", this.timestamp / 1000);\r\n\r\n                // Check quick repeating autosync in short intervals\r\n                if (Settings.get(\"AudioAutoSyncDetectIssue\")) {\r\n                    this._autoSyncCount++;\r\n                    if (this.timestamp - this._autoSyncLastTime > 1000) {\r\n                        this._autoSyncCount = 0;\r\n                    }\r\n                    this._autoSyncLastTime = time;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._autoSyncCount > 10) {\r\n            console.warn(\"[Audio] Auto sync issue detected! Disabling audio auto sync!\");\r\n            Settings.set(\"AudioAutoSyncEnabled\", false);\r\n            this._autoSyncCount = 0;\r\n        }\r\n\r\n        requestAnimationFrame(this.loop);\r\n    };\r\n\r\n    play() {\r\n        this.isPaused = false;\r\n        this.lastFrameTimestamp = performance.now();\r\n        this.audioHandler.playAudio(\"beatmap\");\r\n        this.audioHandler.seekAudio(\"beatmap\", this.timestamp / 1000);\r\n\r\n        this.loop(this.lastFrameTimestamp);\r\n    }\r\n\r\n    pause() {\r\n        this.isPaused = true;\r\n        this.audioHandler.pauseAudio(\"beatmap\");\r\n    }\r\n\r\n    seek(timestamp: number) {\r\n        this.timestamp = timestamp;\r\n        this.renderer.timestamp = timestamp;\r\n        this.audioHandler.seekAudio(\"beatmap\", timestamp / 1000);\r\n    }\r\n}\r\n\r\nexport default ReplayTale;\r\nexport * from \"./osu/Mods/Mods\";\r\nexport * from \"./osu/Replay/Replay\";\r\nexport * from \"./osu/Beatmap/Beatmap\";\r\nexport * from \"./settings/Settings\";\r\n"],"names":["createApproachCircle","DrawableHitCircle","DrawableSlider","DrawableSpinner"],"mappings":";;;;AAEA,MAAM,OAAO,CAAA;AAST,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAClC,QAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC1B;AATD,IAAA,IAAW,IAAI,GAAA;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;IACD,IAAW,IAAI,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACrB;AAKJ;;ACTD,MAAM,YAAY,CAAA;AAkBd,IAAA,WAAA,CAAY,QAAkB,EAAA;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7C;AAhBD,IAAA,IAAW,IAAI,GAAA;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;IACD,IAAW,IAAI,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAElB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnB;AAUM,IAAA,WAAW,CAAC,OAAgB,EAAA;AAC/B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;AAEM,IAAA,UAAU,CAAC,MAAc,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;AAEO,IAAA,IAAI,CAAC,IAAY,EAAA;QACrB,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;AACnD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,SAAA;KACJ;AACJ;;AC3CD,IAAK,IAmBJ;AAnBD,CAAA,UAAK,GAAG,EAAA;AACJ,IAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACR,IAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAe,CAAA;AACf,IAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,GAAA,CAAA,GAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAoB,CAAA;AACpB,IAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAe,CAAA;AACf,IAAA,GAAA,CAAA,GAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAiB,CAAA;AACjB,IAAA,GAAA,CAAA,GAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,GAAA,aAAoB,CAAA;AACpB,IAAA,GAAA,CAAA,GAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAmB,CAAA;AACnB,IAAA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,GAAA,OAAc,CAAA;AACd,IAAA,GAAA,CAAA,GAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAiB,CAAA;AACjB,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,GAAA,CAAA,GAAA,WAAkB,CAAA;AAClB,IAAA,GAAA,CAAA,GAAA,CAAA,YAAA,CAAA,GAAA,IAAA,CAAA,GAAA,YAAoB,CAAA;AACpB,IAAA,GAAA,CAAA,GAAA,CAAA,UAAA,CAAA,GAAA,IAAA,CAAA,GAAA,UAAkB,CAAA;AAClB,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,GAAA,IAAA,CAAA,GAAA,SAAiB,CAAA;AACjB,IAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,IAAA,CAAA,GAAA,QAAgB,CAAA;AAChB,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAiB,CAAA;AACjB,IAAA,GAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,GAAA,OAAA,CAAA,GAAA,gBAAwB,CAAA;AACxB,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,GAAA,SAAA,CAAA,GAAA,SAAiB,CAAA;AACrB,CAAC,EAnBI,GAAG,KAAH,GAAG,GAmBP,EAAA,CAAA,CAAA,CAAA;AAED,MAAM,IAAI,CAAA;AAMN,IAAA,WAAA,CAAY,QAAgB,CAAC,EAAA;QALtB,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;AAGhB,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,KAAK,EAAO,CAAC;AAG7B,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACzB;AAED,IAAA,IAAW,iBAAiB,GAAA;QACxB,IAAI,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjD,QAAA,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC7C;AAED,IAAA,IAAW,UAAU,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC5C;AAED,IAAA,IAAW,WAAW,GAAA;AAClB,QAAA,OAAO,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzC;AAED,IAAA,IAAW,IAAI,GAAA;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;AAED,IAAA,IAAW,OAAO,GAAA;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IAED,IAAW,OAAO,CAAC,KAAa,EAAA;QAC5B,IAAI,KAAK,IAAI,CAAC,EAAE;AACZ,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO;AACV,SAAA;AAED,QAAA,IAAI,MAAM,GAAG,IAAI,KAAK,EAAO,CAAC;QAC9B,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,KAAK;aACA,QAAQ,CAAC,CAAC,CAAC;aACX,KAAK,CAAC,EAAE,CAAC;aACT,GAAG,CAAC,MAAM,CAAC;AACX,aAAA,OAAO,EAAE;AACT,aAAA,OAAO,CAAC,CAAC,YAAY,EAAE,KAAK,KAAI;YAC7B,IAAI,YAAY,KAAK,CAAC,EAAE;AACpB,gBAAA,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC;AACnC,gBAAA,GAAG,IAAI,YAAY,IAAI,KAAK,CAAC;AAChC,aAAA;AACL,SAAC,CAAC,CAAC;AAEP,QAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AACpB,QAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;KACjC;AAIM,IAAA,QAAQ,CAAC,GAAqB,EAAA;QACjC,IAAI,GAAG,YAAY,KAAK,EAAE;YACtB,IAAI,MAAM,GAAG,IAAI,CAAC;AAClB,YAAA,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;gBACnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,MAAM,GAAG,EAAE;oBAC/B,MAAM,GAAG,KAAK,CAAC;oBACf,MAAM;AACT,iBAAA;AACJ,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;AACjB,SAAA;QAED,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,MAAM,GAAG,CAAC;KACxC;IAEM,GAAG,CAAC,GAAQ,EAAE,MAAe,EAAA;AAChC,QAAA,IAAI,MAAM,EAAE;AACR,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAA;AAAM,aAAA;AACH,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5B,SAAA;KACJ;IAEO,OAAO,CAAC,GAAG,IAAW,EAAA;AAC1B,QAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC;KAChD;IAEO,QAAQ,CAAC,GAAG,IAAW,EAAA;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;KAC/D;AAEM,IAAA,MAAM,CAAC,GAAQ,EAAA;AAClB,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACjB,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAClB,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC7D,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC9D,SAAA;AAED,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAA;QAED,IACI;AACI,YAAA,GAAG,CAAC,MAAM;AACV,YAAA,GAAG,CAAC,KAAK;AACT,YAAA,GAAG,CAAC,MAAM;AACV,YAAA,GAAG,CAAC,WAAW;AACf,YAAA,GAAG,CAAC,OAAO;AACd,SAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,EACjB;YACE,IAAI,CAAC,QAAQ,CACT,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,KAAK,EACT,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,WAAW,EACf,GAAG,CAAC,OAAO,CACd,CAAC;AACF,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1C,SAAA;QAED,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,QAAQ,CACT,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,KAAK,EACT,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,WAAW,EACf,GAAG,CAAC,OAAO,CACd,CAAC;AACL,SAAA;AAED,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,SAAS,EAAE;AACvB,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAChC,SAAA;AAED,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,OAAO,EAAE;AACrB,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACjC,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAClB,QAAA,OAAO,IAAI,CAAC;KACf;AAEM,IAAA,OAAO,CAAC,GAAQ,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACjB,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO;AACV,SAAA;AAED,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,UAAU,EAAE;AACxB,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAChC,SAAA;AAED,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;AACvD,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACjC,SAAA;AAED,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,WAAW,EAAE;AACzB,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC9B,SAAA;AAED,QAAA,IAAI,GAAG,KAAK,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AACnD,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAClC,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACnB,QAAA,OAAO,IAAI,CAAC;KACf;AACJ,CAAA;AAED;AACA,SAAS,kBAAkB,CAAC,IAAgB,EAAA;AACxC,IAAA,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;;IAGzB,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;QAChC,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC7C,QAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACd,YAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC3B,SAAA;AACJ,KAAA;IAED,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;QAC9B,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC9C,QAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACd,YAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC3B,SAAA;AACJ,KAAA;AAED,IAAA,OAAO,MAAM,CAAC;AAClB;;ACpNA,MAAM,YAAY,CAAA;AAEd,IAAA,WAAA,GAAA;QADO,IAAW,CAAA,WAAA,GAA2E,EAAE,CAAC;KAChF;AAEhB,IAAA,SAAS,CAAC,IAAY,EAAE,KAAuB,EAAE,OAA+B,EAAA;AAC5E,QAAA,MAAM,cAAc,GAAiB;AACjC,YAAA,QAAQ,EAAE,CAAC;AACX,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,YAAY,EAAE,CAAC;SAClB,CAAC;AACF,QAAA,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;AAEvC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;QAC5D,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC;QAE1D,KAAK,CAAC,YAAY,GAAG,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,YAAY,GAAI,CAAC,CAAC;AACvC,QAAA,KAAK,CAAC,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC;QACpC,KAAK,CAAC,MAAM,GAAG,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,MAAM,GAAI,GAAG,CAAC;KAChC;AAED,IAAA,SAAS,CAAC,IAAY,EAAA;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK;YAAE,OAAO;QACnB,KAAK,CAAC,IAAI,EAAE,CAAC;KAChB;AAED,IAAA,UAAU,CAAC,IAAY,EAAA;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK;YAAE,OAAO;QACnB,KAAK,CAAC,KAAK,EAAE,CAAC;KACjB;AAED,IAAA,SAAS,CAAC,IAAY,EAAA;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK;YAAE,OAAO;QACnB,KAAK,CAAC,KAAK,EAAE,CAAC;AACd,QAAA,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtE;IAED,eAAe,CAAC,IAAY,EAAE,OAA8B,EAAA;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;AACpD,QAAA,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAErC,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,YAAY,CAAC;AACxD,QAAA,KAAK,CAAC,YAAY,GAAG,YAAY,KAAZ,IAAA,IAAA,YAAY,KAAZ,KAAA,CAAA,GAAA,YAAY,GAAI,KAAK,CAAC,YAAY,CAAC;QACxD,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC;AACxD,QAAA,KAAK,CAAC,MAAM,GAAG,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,MAAM,GAAI,KAAK,CAAC,MAAM,CAAC;KACzC;IAED,SAAS,CAAC,IAAY,EAAE,IAAY,EAAA;AAChC,QAAA,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,KAAK;YAAE,OAAO;AACnB,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClC,KAAK,CAAC,WAAW,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC;KAC9C;AAED,IAAA,qBAAqB,CAAC,IAAY,EAAA;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK;AAAE,YAAA,OAAO,CAAC,CAAC;AACrB,QAAA,OAAO,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;KACnC;AAED,IAAA,gBAAgB,CAAC,IAAY,EAAA;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK;AAAE,YAAA,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;KAClD;AACJ;;AC5ED;;;;;;;;;;;;;AAagF;AA0D1E,SAAU,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAA;AACvD,IAAA,SAAS,KAAK,CAAC,KAAK,EAAA,EAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAA,EAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC5G,IAAA,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAA;QACrD,SAAS,SAAS,CAAC,KAAK,EAAA;YAAI,IAAI;gBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/B,aAAA;AACD,YAAA,OAAO,CAAC,EAAE;gBACN,MAAM,CAAC,CAAC,CAAC,CAAC;AACb,aAAA;SAAE;QACH,SAAS,QAAQ,CAAC,KAAK,EAAA;YAAI,IAAI;gBAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,aAAA;AACD,YAAA,OAAO,CAAC,EAAE;gBACN,MAAM,CAAC,CAAC,CAAC,CAAC;AACb,aAAA;SAAE;AACH,QAAA,SAAS,IAAI,CAAC,MAAM,EAAA,EAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;AAC9G,QAAA,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1E,KAAC,CAAC,CAAC;AACP;;ACzFA;AAiBA,MAAM,QAAQ,CAAA;AAcH,IAAA,OAAO,iBAAiB,CAA4B,GAAM,EAAE,QAA2C,EAAA;QAC1G,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;AACnC,YAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAC5B,SAAA;QAEA,IAAI,CAAC,SAAS,CAAC,GAAG,CAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjE;AAEM,IAAA,OAAO,oBAAoB,CAA4B,GAAM,EAAE,QAA2C,EAAA;QAC7G,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YACnC,OAAO;AACV,SAAA;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,QAAQ,CAAC,CAAC;AACxE,QAAA,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACvD;AAEM,IAAA,OAAO,GAAG,CAA+B,GAAM,EAAE,KAAuB,EAAA;QAC3E,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;YAC/B,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC5B,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACpB;IAEM,OAAO,GAAG,CAA+B,GAAM,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC9B;AAEM,IAAA,OAAO,QAAQ,GAAA;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACzC;IAEM,OAAO,UAAU,CAAC,QAAgB,EAAA;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAEzC,QAAA,KAAK,MAAM,GAAG,IAAI,IAA4B,EAAE;AAC5C,YAAA,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBAChC,SAAS;AACZ,aAAA;YAEA,IAAI,CAAC,SAAS,CAAC,GAAG,CAA+B,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AACzE,SAAA;KACJ;IAEO,OAAO,MAAM,CAA+B,GAAM,EAAA;QACtD,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YACnC,OAAO;AACV,SAAA;QAED,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAA2B,EAAE;YAChE,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAClC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnB,SAAA;KACJ;;AArEc,QAAA,CAAA,SAAS,GAAc;AAClC,IAAA,QAAQ,EAAE,IAAI;AACd,IAAA,SAAS,EAAE,GAAG;AACd,IAAA,WAAW,EAAE,EAAE;AACf,IAAA,WAAW,EAAE,CAAC;AACd,IAAA,oBAAoB,EAAE,IAAI;AAC1B,IAAA,wBAAwB,EAAE,GAAG;AAC7B,IAAA,wBAAwB,EAAE,IAAI;AAC9B,IAAA,eAAe,EAAE,KAAK;CACzB,CAAC;AAEa,QAAA,CAAA,SAAS,GAAyB,EAA0B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBhF,MAAM,YAAY,CAAA;AAoCd,IAAA,OAAa,IAAI,GAAA;;YACb,IAAI,CAAC,SAAS,EAAE,CAAC;AACjB,YAAA,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEtB,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;gBACzC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC/C,oBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AAC9B,iBAAA;AACJ,aAAA;YAED,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;gBAC1C,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAChD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AAC9B,iBAAA;AACJ,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEO,IAAA,OAAa,QAAQ,GAAA;;YACzB,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;gBAC3C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACxC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpC,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC3B,aAAC,CAAC,CAAC;AAEH,YAAA,MAAM,MAAM,CAAC;SAChB,CAAA,CAAA;AAAA,KAAA;AAEO,IAAA,OAAO,SAAS,GAAA;AACpB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;KAC3B;IAEO,OAAO,iBAAiB,CAAC,IAAY,EAAA;AACzC,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KACrC;AAEO,IAAA,OAAO,iBAAiB,CAAC,IAAY,EAAE,OAAgB,EAAA;AAC3D,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KACxC;;IAGM,OAAO,UAAU,CAAC,IAAY,EAAA;QACjC,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAE5C,QAAA,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AAC1B,YAAA,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;AACrE,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACzC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;KACvC;;AApFa,YAAM,CAAA,MAAA,GAA+B,EAAE,CAAC;AACvC,YAAe,CAAA,eAAA,GAA+B,EAAE,CAAC;AAEjD,YAAA,CAAA,kBAAkB,GAAG,CAAC,YAAA;AACjC,IAAA,YAAY,CAAC,UAAU,GAAG,IAAI,MAAM,EAAE,CAAC;AACvC,IAAA,YAAY,CAAC,WAAW,GAAG,IAAI,MAAM,EAAE,CAAC;IAExC,MAAM,UAAU,GAAgB,YAAY,CAAC;AAE7C,IAAA,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC;AACjC,IAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AACtB,QAAA,MAAM,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC;QACtC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AACxD,KAAC,CAAC,CAAC;IAEH,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK;AACrC,QAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;AACvD,KAAC,CAAC,CAAC;IAEH,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,MAAK;AACxC,QAAA,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;AAC3D,KAAC,CAAC,CAAC;IAEH,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK;AACtC,QAAA,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;AACxD,KAAC,CAAC,CAAC;IAEH,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,MAAK;AACzC,QAAA,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;AAC5D,KAAC,CAAC,CAAC;AACP,CAAC,GAAG;;MC9BK,OAAO,CAAA;IAKhB,WAAY,CAAA,CAAoB,EAAE,CAAU,EAAA;AAU5C,QAAA,IAAA,CAAA,GAAG,GAAiB,CAAC,aAAkD,KAAa;AAChF,YAAA,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AACnC,gBAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;AACxE,aAAA;YAED,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,SAAC,CAAC;AAEF,QAAA,IAAA,CAAA,QAAQ,GAAsB,CAAC,aAAkD,KAAI;AACjF,YAAA,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AACnC,gBAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;AACxE,aAAA;YAED,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,SAAC,CAAC;AAEF,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,MAAc,KAAa;AACnC,YAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;AAC3D,SAAC,CAAC;QA3BE,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,SAAS,EAAE;AAC1C,YAAA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACZ,YAAA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,SAAA;aAAM,IAAI,CAAC,YAAY,KAAK,EAAE;YAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,SAAA;KACJ;IAsBD,aAAa,GAAA;QACT,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtD;IAED,MAAM,GAAA;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KAC1C;AAED,IAAA,GAAG,CAAC,MAAe,EAAA;QACf,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjE;IAED,SAAS,GAAA;QACL,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KAC1E;IAED,OAAO,GAAA;QACH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;IAED,OAAO,GAAA;QACH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;AAED,IAAA,MAAM,CAAC,KAAa,EAAA;QAChB,OAAO,IAAI,OAAO,CACd,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EACrD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CACxD,CAAC;KACL;IAED,KAAK,GAAA;AACD,QAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACxC;AAIM,IAAA,OAAO,IAAI,CAAC,aAAgC,EAAE,CAAU,EAAA;QAC3D,IAAI,aAAa,YAAY,KAAK,EAAE;AAChC,YAAA,OAAO,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,SAAA;QAED,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAE,CAAC,CAAC;KACzC;IAEM,OAAO,OAAO,CAAC,MAAe,EAAA;QACjC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KACjC;IAEM,OAAO,SAAS,CAAC,MAAe,EAAA;AACnC,QAAA,OAAO,IAAI,OAAO,CACd,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACzE,CAAC;KACL;IAEM,OAAO,kBAAkB,CAAC,MAAe,EAAA;AAC5C,QAAA,OAAO,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7C;IAEM,OAAO,iBAAiB,CAAC,MAAe,EAAA;AAC3C,QAAA,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7C;AAKM,IAAA,OAAO,GAAG,CAAC,OAAgB,EAAE,cAAmD,EAAA;AACnF,QAAA,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;AACpC,YAAA,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC;AAChF,SAAA;QAED,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;KACtF;AAKM,IAAA,OAAO,QAAQ,CAAC,OAAgB,EAAE,cAAmD,EAAA;AACxF,QAAA,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;AACpC,YAAA,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC;AAChF,SAAA;QAED,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;KACtF;AAEM,IAAA,OAAO,QAAQ,CAAC,MAAe,EAAE,MAAc,EAAA;AAClD,QAAA,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;KAC9D;AAEM,IAAA,OAAO,eAAe,CAAC,OAAmC,EAAE,OAAmC,EAAA;AAClG,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtF;AAEM,IAAA,OAAO,QAAQ,CAAC,OAAmC,EAAE,OAAmC,EAAA;AAC3F,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;KAC5D;IAEM,OAAO,aAAa,CAAC,MAAe,EAAA;QACvC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1D;IAEM,OAAO,MAAM,CAAC,MAAe,EAAA;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;KAChD;AAEM,IAAA,OAAO,QAAQ,CAAC,OAAgB,EAAE,OAAgB,EAAA;AACrD,QAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACpF;AAEM,IAAA,OAAO,GAAG,CAAC,OAAgB,EAAE,OAAgB,EAAA;QAChD,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzE;AAEM,IAAA,OAAO,MAAM,CAAC,OAAgB,EAAE,OAAgB,EAAA;AACnD,QAAA,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;KACjE;AAEM,IAAA,OAAO,mBAAmB,CAAC,OAAgB,EAAE,OAAgB,EAAE,CAAS,EAAA;AAC3E,QAAA,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KAC9G;AAMM,IAAA,OAAO,WAAW,CACrB,OAAmC,EACnC,OAAmC,EACnC,OAAe,EAAA;AAEf,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;KACrG;AAMM,IAAA,OAAO,KAAK,CAAC,IAAgC,EAAE,EAA8B,EAAA;QAChF,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACvD;AACJ;;ACzLD;;AAEE;AAEF,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAE7B,MAAM,YAAY,GAAG,CAAC,GAAG,CAAC;AAC1B,MAAM,UAAU,GAAG,GAAG,CAAC;AAEvB,MAAM,kBAAkB,GAAG,CAAA;;;;;;;;;;;;;;;CAe1B,CAAC;AAEF,MAAM,oBAAoB,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuD5B,CAAC;AAEF,SAAS,aAAa,CAAC,MAAiB,EAAE,MAAc,EAAE,SAAiB,CAAC,EAAA;IACxE,MAAM,SAAS,GAAa,EAAE,CAAC;IAC/B,MAAM,OAAO,GAAa,EAAE,CAAC;AAE7B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAE3B,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACzC,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC/E,QAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAE7E;;;;;;;;;AASE;QAEF,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACvC,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACvC,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACxB,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACxC,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAExC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACxB,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACrC,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACrC,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,SAAA;AAED,QAAA,SAAS,CAAC,IAAI,CACV,EAAE,CAAC,CAAC,CAAC,EACL,EAAE,CAAC,CAAC,CAAC,EACL,UAAU,EACV,EAAE,CAAC,CAAC,CAAC,EACL,EAAE,CAAC,CAAC,CAAC,EACL,UAAU,EACV,EAAE,CAAC,CAAC,CAAC,EACL,EAAE,CAAC,CAAC,CAAC,EACL,YAAY,EACZ,EAAE,CAAC,CAAC,CAAC,EACL,EAAE,CAAC,CAAC,CAAC,EACL,YAAY,EACZ,EAAE,CAAC,CAAC,CAAC,EACL,EAAE,CAAC,CAAC,CAAC,EACL,UAAU,EACV,EAAE,CAAC,CAAC,CAAC,EACL,EAAE,CAAC,CAAC,CAAC,EACL,UAAU,CACb,CAAC;AACL,KAAA;AAED,IAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;AAClC,CAAC;AAED,SAAS,cAAc,CAAC,MAAiB,EAAE,MAAc,EAAE,SAAiB,CAAC,EAAA;IACzE,MAAM,SAAS,GAAa,EAAE,CAAC;IAC/B,MAAM,OAAO,GAAa,EAAE,CAAC;AAE7B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACvB,QAAA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;AACxC,YAAA,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG,iBAAiB,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAEpD,YAAA,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAClD,YAAA,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,CAAC,GAAG,UAAU,CAAC;YAErB,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,SAAA;QAED,MAAM,WAAW,GAAG,MAAM,GAAG,CAAC,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,YAAA,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,YAAA,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,IAAI,CAAC,CAAC;YAEnD,MAAM,IAAI,WAAW,CAAC;YACtB,MAAM,IAAI,WAAW,CAAC;YACtB,MAAM,IAAI,WAAW,CAAC;YAEtB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACxC,SAAA;AACJ,KAAA;AAED,IAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;AAClC,CAAC;AAED,SAAS,uBAAuB,CAAC,MAAiB,EAAE,MAAc,EAAA;IAC9D,IAAI,SAAS,GAAa,EAAE,CAAC;IAC7B,IAAI,OAAO,GAAa,EAAE,CAAC;IAE3B,MAAM,KAAK,GAAa,EAAE,CAAC;IAC3B,MAAM,KAAK,GAAa,EAAE,CAAC;IAE3B,IAAI,aAAa,GAAG,CAAC,CAAC;IAEtB,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IAC3D,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC9C,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAExC,IAAA,aAAa,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAEtC,MAAM,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IAC5D,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC9C,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAExC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC1C,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChC,KAAA;AAED,IAAA,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC;AACnD,IAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AAE7C,IAAA,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,CAAC;AAC3C,CAAC;AAED,SAAS,eAAe,CAAC,SAAuB,EAAA;AAC5C,IAAA,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAA,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAA,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAA,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAE5B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC1C,QAAA,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE;AACzB,YAAA,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAA;AAAM,aAAA,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE;AAChC,YAAA,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAA;QAED,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,EAAE;AAC7B,YAAA,QAAQ,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,SAAA;aAAM,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,EAAE;AACpC,YAAA,QAAQ,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,SAAA;AACJ,KAAA;IAED,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,sBAAsB,CAAA;AAOxB,IAAA,OAAO,aAAa,CAAC,MAAiB,EAAE,MAAc,EAAA;AAClD,QAAA,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,uBAAuB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAEhF,QAAA,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,eAAe,CAAC,cAAc,CAAC,CAAC;AACjE,QAAA,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AAC1B,QAAA,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;AAE3B,QAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,YAAY,CAAC,YAAY,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;AACvD,QAAA,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAE/B,QAAA,MAAM,OAAO,GAAG;AACZ,YAAA,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;AAC7B,YAAA,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;SAC3B,CAAC;AAEF,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC9E,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;AAE5B,QAAA,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AACvE,QAAA,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;AAClC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC;AAElD,QAAA,OAAO,OAAO,CAAC;KAClB;;AA/BM,sBAAA,CAAA,WAAW,GAAG,CAAC,QAAkB,KAAI;AACxC,IAAA,sBAAsB,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC/C,CAAC;;ACxOL,MAAM,UAAW,SAAQ,SAAS,CAAA;IA8B9B,WAAoB,CAAA,WAAwB,EAAE,gBAAmC,EAAA;AAC7E,QAAA,KAAK,EAAE,CAAC;QADQ,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AA7BpC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC3B,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,MAAM,EAAE,CAAC;QAChC,IAAW,CAAA,WAAA,GAAW,CAAC,CAAC;QACxB,IAAG,CAAA,GAAA,GAAG,MAAM,CAAC;AA6BjB,QAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAEnE,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACvC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAExC,QAAA,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAE3C,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAErC,QAAA,IAAI,CAAC,gBAAgB;YAAE,OAAO;QAE9B,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,gBAAgB,CAAC;QAEtD,IAAI,CAAC,WAAW,GAAG,UAAU,KAAA,IAAA,IAAV,UAAU,KAAV,KAAA,CAAA,GAAA,UAAU,GAAI,CAAC,CAAC;QACnC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACxB,QAAA,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KACrC;AA9CD,IAAA,IAAI,UAAU,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IAED,IAAI,UAAU,CAAC,eAAuB,EAAA;QAClC,IAAI,eAAe,GAAG,CAAC,EAAE;AACrB,YAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACxB,SAAA;aAAM,IAAI,eAAe,GAAG,CAAC,EAAE;AAC5B,YAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;AACtC,SAAA;QAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;KACjD;AAED,IAAA,IAAY,WAAW,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;KACtC;AAED,IAAA,IAAY,YAAY,GAAA;AACpB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;KACvC;AA0BD,IAAA,QAAQ,CAAC,OAAgB,EAAA;QACrB,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;AAC9C,QAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,OAAO,CAAC;QAExC,QAAQ,IAAI,CAAC,GAAG;YACZ,KAAK,YAAY,EAAE;gBACf,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvC,MAAM;AACT,aAAA;YAED,KAAK,UAAU,EAAE;gBACb,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;gBACjD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvC,MAAM;AACT,aAAA;AACJ,SAAA;KACJ;IAED,IAAI,CAAC,SAAiB,EAAA,GAAI;AAC7B;;AClFD,SAAS,gBAAgB,CAAC,WAAmB,EAAE,YAAoB,EAAA;AAC/D,IAAA,MAAM,UAAU,GAAG,WAAW,GAAG,GAAG,CAAC;AACrC,IAAA,MAAM,WAAW,GAAG,YAAY,GAAG,GAAG,CAAC;IAEvC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,iBAAiB,CAAC,SAAiB,EAAE,UAAkB,EAAE,OAAe,EAAE,QAAgB,EAAA;AAC/F,IAAA,MAAM,UAAU,GAAG,SAAS,GAAG,OAAO,CAAC;AACvC,IAAA,MAAM,WAAW,GAAG,UAAU,GAAG,QAAQ,CAAC;IAE1C,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAC7C;;ACZM,SAAU,QAAQ,CAAC,GAAW,EAAA;IAChC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACvB,QAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,KAAA;AAED,IAAA,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;AACjB,QAAA,OAAO,GAAG,CAAC;AACd,KAAA;AAED,IAAA,OAAO,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC7B;;ACLA,SAAS,YAAY,CAAC,SAAoB,EAAE,MAAc,EAAA;AACtD,IAAA,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC;IACzC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAErD,IAAA,MAAM,eAAe,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC5C,IAAA,eAAe,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AACnC,IAAA,eAAe,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AACpC,IAAA,eAAe,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;IACxC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAErC,MAAM,gBAAgB,GAAG,YAAY,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AACrE,IAAA,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAChD,IAAA,UAAU,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AAC9B,IAAA,UAAU,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IAC/B,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAEhC,IAAA,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC;AACxB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC;AAC1B,QAAA,eAAe,EAAE,CAAC;AACrB,KAAA,CAAC,CAAC;AACH,IAAA,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;IAC5D,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAElC,IAAA,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;AAC/B,IAAA,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AACjC,IAAA,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC5B,IAAA,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC9B,IAAA,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;AACnB,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAASA,sBAAoB,CAAC,MAAc,EAAA;IACxC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC1D,IAAA,MAAM,EAAE,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/B,IAAA,EAAE,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AACtB,IAAA,EAAE,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IACvB,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAExB,IAAA,OAAO,EAAE,CAAC;AACd,CAAC;AAED,MAAMC,mBAAkB,SAAQ,SAAS,CAAA;IAQrC,WAAoB,CAAA,SAAoB,EAAE,WAAmB,EAAA;AACzD,QAAA,KAAK,EAAE,CAAC;QADQ,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;AAGpC,QAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,kBAAkB,EAAE,CAAC;QAChD,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;QACpC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,eAAe,EAAE,GAAG,WAAW,CAAC;QAEnE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,GAAGD,sBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAExD,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEnC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;QAClB,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,OAAO;YAAE,OAAO;AAErB,QAAA,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE/G,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,qBAAqB,CAAC,KAAK,CAAC;AACxD,QAAA,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAEzE,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC;AAC1D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC;KAC7D;AACJ;;ACpFD,SAAS,gBAAgB,CAAC,IAAU,EAAE,MAAc,EAAA;AAChD,IAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,IAAA,IAAI,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,KAAA;AAED,IAAA,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;AACtB,IAAA,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;AAEtB,IAAA,MAAM,OAAO,GAAG,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC1E,IAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAEnC,IAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAA,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;AACnB,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,gBAAgB,CAAC,MAAc,EAAE,MAAc,EAAA;IACpD,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACtC,IAAA,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;IAEhC,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACxD,IAAA,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;AACzC,IAAA,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;IACvB,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACxC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzC,IAAA,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAE1B,MAAM,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AACnE,IAAA,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;IACjD,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC5C,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAEnC,IAAA,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC;AACxB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC;AAC1B,QAAA,eAAe,EAAE,CAAC;AACrB,KAAA,CAAC,CAAC;AACH,IAAA,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAE5B,IAAA,MAAM,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC;AACnC,IAAA,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAA,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACnC,IAAA,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAE5B,IAAA,OAAO,UAAU,CAAC;AACtB,CAAC;AAED,SAAS,gBAAgB,CAAC,MAAc,EAAA;IACpC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACpD,IAAA,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;IACvC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAChC,IAAA,UAAU,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AAC9B,IAAA,UAAU,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AAC/B,IAAA,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;AAErB,IAAA,OAAO,UAAU,CAAC;AACtB,CAAC;AAED,SAAS,oBAAoB,CAAC,MAAc,EAAA;IACxC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAC9D,IAAA,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;IAC3C,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACpC,IAAA,cAAc,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AAClC,IAAA,cAAc,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AACnC,IAAA,cAAc,CAAC,KAAK,GAAG,CAAC,CAAC;AAEzB,IAAA,OAAO,cAAc,CAAC;AAC1B,CAAC;AAED,SAAS,oBAAoB,CAAC,MAAc,EAAA;IACxC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC1D,IAAA,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3C,IAAA,cAAc,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AAClC,IAAA,cAAc,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IACnC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAEpC,IAAA,OAAO,cAAc,CAAC;AAC1B,CAAC;AAED,SAAS,oBAAoB,CAAC,MAAc,EAAE,MAAc,EAAA;AACxD,IAAA,MAAM,qBAAqB,GAAG,MAAM,CAAC,sBAAsB,EAAE,CAAC;AAC9D,IAAA,MAAM,cAAc,GAAG,IAAI,SAAS,EAAE,CAAC;IAEvC,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;AAEjE,IAAA,KAAK,MAAM,aAAa,IAAI,qBAAqB,EAAE;QAC/C,MAAM,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAC/D,QAAA,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;AAC3C,QAAA,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC;AAC3B,QAAA,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AAC5B,QAAA,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAExB,QAAA,MAAM,WAAW,GAAG;AAChB,YAAA,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,WAAW;AAC9D,YAAA,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,WAAW;SACjE,CAAC;AACF,QAAA,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAErD,QAAA,OAAO,CAAC,QAAQ,GAAG,aAAa,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC;AAElF,QAAA,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACpC,KAAA;AAED,IAAA,OAAO,cAAc,CAAC;AAC1B,CAAC;AAED,SAAS,iBAAiB,CAAC,MAAc,EAAE,MAAc,EAAA;AACrD,IAAA,MAAM,kBAAkB,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;IAE1D,MAAM,WAAW,GAAG,YAAY,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;IAChE,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;AAEjE,IAAA,MAAM,WAAW,GAAG,IAAI,SAAS,EAAE,CAAC;AAEpC,IAAA,KAAK,MAAM,UAAU,IAAI,kBAAkB,EAAE;AACzC,QAAA,MAAM,IAAI,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1B,QAAA,MAAM,eAAe,GAAG;AACpB,YAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW;AACvE,YAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW;SAC1E,CAAC;AAEF,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;AAE1D,QAAA,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,KAAA;AAED,IAAA,OAAO,WAAW,CAAC;AACvB,CAAC;AAED,MAAME,gBAAe,SAAQ,SAAS,CAAA;IAYlC,WAAoB,CAAA,MAAc,EAAU,WAAmB,EAAA;AAC3D,QAAA,KAAK,EAAE,CAAC;QADQ,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAAU,IAAW,CAAA,WAAA,GAAX,WAAW,CAAQ;AAE3D,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;QAC7C,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;QACpC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;AAEpC,QAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,GAAG,WAAW,CAAC;AAChE,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9D,QAAA,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxD,QAAA,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrE,QAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAE/D,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;QAClB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,OAAO;YAAE,OAAO;QAErB,MAAM,EACF,gBAAgB,EAChB,WAAW,EACX,WAAW,EACX,WAAW,EACX,qBAAqB,EACrB,mBAAmB,EACnB,mBAAmB,EACnB,iBAAiB,GACpB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAEzB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,qBAAqB,CAAC,KAAK,CAAC;AAC9D,QAAA,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9E,QAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAE/E,QAAA,MAAM,OAAO,GAAG;AACZ,YAAA,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;AAC9E,YAAA,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;SACjF,CAAC;AAEF,QAAA,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAE1C,QAAA,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAEvD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YACnD,MAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;YAE/C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC;AAChD,YAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACpD,SAAA;AAED,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;YAClD,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;YAE9C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC;AAC7C,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACjD,SAAA;KACJ;AACJ;;AC1OD,MAAM,UAAU,GAAG,GAAG,CAAC;AACvB,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAE5B,SAAS,iBAAiB,CAAC,IAAY,EAAA;IACnC,MAAM,WAAW,GAAa,EAAE,CAAC;AACjC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC/D,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAEtD,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACnC,QAAA,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,QAAA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvB,QAAA,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,KAAA;AAED,IAAA,OAAO,WAAW,CAAC;AACvB,CAAC;AAED,MAAM,UAAW,SAAQ,SAAS,CAAA;IAI9B,WAAoB,CAAA,MAAc,EAAU,WAAmB,EAAA;AAC3D,QAAA,KAAK,EAAE,CAAC;QADQ,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAAU,IAAW,CAAA,WAAA,GAAX,WAAW,CAAQ;QAG3D,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAE/B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AACpE,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;AAClB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC7D,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,iBAAiB,CAAC,CAAC;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,CAAC;AACvF,QAAA,MAAM,KAAK,GAAG,QAAQ,GAAG,UAAU,GAAG,CAAC,CAAC;QAExC,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;AAEpD,YAAA,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;AAElD,YAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AAChD,gBAAA,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC9B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACvD,gBAAA,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC9B,aAAA;AAAM,iBAAA;AACH,gBAAA,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;gBAC3B,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC;AACvD,aAAA;AAED,YAAA,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;YACzB,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;AACjF,SAAA;AAED,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAA,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACjE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAErC,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAEhC,IAAI,CAAC,SAAS,CAAC;AACX,gBAAA,KAAK,EAAE,QAAQ;AACf,gBAAA,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW;AAC3B,gBAAA,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC;AACnD,aAAA,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,SAAA;KACJ;AACJ;;AC7ED,MAAM,YAAY,GAAG,EAAE,CAAC;AAExB,SAAS,gBAAgB,CAAC,IAAY,EAAA;IAClC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AACvD,IAAA,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACvC,IAAA,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;AACxB,IAAA,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;AACzB,IAAA,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAE3B,IAAA,OAAO,UAAU,CAAC;AACtB,CAAC;AACD,MAAM,UAAW,SAAQ,SAAS,CAAA;IAG9B,WAAoB,CAAA,MAAc,EAAU,WAAmB,EAAA;AAC3D,QAAA,KAAK,EAAE,CAAC;QADQ,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAAU,IAAW,CAAA,WAAA,GAAX,WAAW,CAAQ;AAG3D,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;AAC/C,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;QAE/C,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAEjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC3B;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;AAClB,QAAA,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAErE,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KACjE;AACJ;;AClCD,MAAM,IAAK,SAAQ,QAAQ,CAAA;IACvB,WAAY,CAAA,KAAa,EAAE,MAAc,EAAE,QAAkB,EAAE,KAAa,EAAE,KAAa,EAAA;AACvF,QAAA,KAAK,EAAE,CAAC;QACR,IAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,QAAA,QAAQ,QAAQ;AACZ,YAAA,KAAK,OAAO;gBACR,QAAQ,GAAG,CAAC,CAAC;gBACb,MAAM;AACV,YAAA,KAAK,MAAM;gBACP,QAAQ,GAAG,CAAC,CAAC;gBACb,MAAM;AACV,YAAA,KAAK,OAAO;gBACR,QAAQ,GAAG,CAAC,CAAC;gBACb,MAAM;AACV,YAAA,KAAK,QAAQ;gBACT,QAAQ,GAAG,EAAE,CAAC;gBACd,MAAM;AACV,YAAA,KAAK,OAAO;gBACR,QAAQ,GAAG,EAAE,CAAC;gBACd,MAAM;AACb,SAAA;AAED,QAAA,MAAM,eAAe,GAAG,KAAK,GAAG,GAAG,CAAC;AACpC,QAAA,MAAM,aAAa,GAAG,MAAM,GAAG,GAAG,CAAC;QAEnC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QACvD,QAAQ,IAAI,KAAK,CAAC;QAElB,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;QACzD,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;;QAGxD,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,mBAAmB,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,MAAM,CAAC,CAAC;AACrC,SAAA;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,iBAAiB,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AACpC,SAAA;;QAGD,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;QAE/B,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAE/B,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;AACJ;;ACnDD;AACA,MAAM,wBAAwB,GAAG,IAAI,CAAC;AACtC,MAAM,oBAAoB,GAAG,GAAG,CAAC;AACjC,MAAM,kBAAkB,GAAG,KAAK,CAAC;AAEjC,SAAS,uBAAuB,CAAC,WAAmB,EAAA;IAChD,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAE9D,IAAA,MAAM,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC;AACzC,IAAA,MAAM,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;IAE1C,MAAM,KAAK,GACP,wBAAwB,IAAI,CAAC,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;AAEvH,IAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACnC,IAAA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACxB,IAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAA,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,kBAAkB,CAAC,WAAmB,EAAA;IAC3C,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAEzD,IAAA,MAAM,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC;AACzC,IAAA,MAAM,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;IAE1C,MAAM,KAAK,GACP,wBAAwB,IAAI,CAAC,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;AAEvH,IAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACnC,IAAA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACxB,IAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAA,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAEvB,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,sBAAsB,CAAC,WAAmB,EAAA;IAC/C,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAEzD,IAAA,MAAM,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC;AACzC,IAAA,MAAM,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;IAE1C,MAAM,KAAK,GACP,wBAAwB,IAAI,CAAC,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;IAEvH,MAAM,IAAI,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvC,IAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,IAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACX,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACnC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;IACrC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC;IACvD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1B,IAAA,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,mBAAmB,CAAC,WAAmB,EAAA;IAC5C,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAE1D,IAAA,MAAM,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC;AACzC,IAAA,MAAM,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;IAE1C,MAAM,KAAK,GACP,oBAAoB,IAAI,CAAC,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;AAEnH,IAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACnC,IAAA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACxB,IAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAA,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAEvB,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,oBAAoB,CAAC,WAAmB,EAAA;AAC7C,IAAA,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC;AACxB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,UAAU,EAAE,eAAe;QAC3B,QAAQ,EAAE,EAAE,GAAG,WAAW;AAC1B,QAAA,UAAU,EAAE,KAAK;AACjB,QAAA,QAAQ,EAAE,OAAO;AACjB,QAAA,eAAe,EAAE,CAAC;AACrB,KAAA,CAAC,CAAC;IAEH,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAEtC,IAAA,MAAM,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC;AACzC,IAAA,MAAM,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;IAE1C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC;IACvD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1B,IAAA,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,iBAAiB,CAAC,WAAmB,EAAA;IAC1C,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAExD,IAAA,MAAM,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC;AACzC,IAAA,MAAM,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;IAE1C,MAAM,KAAK,GAAG,kBAAkB,IAAI,CAAC,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;AAE3H,IAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACnC,IAAA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACxB,IAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,EAAE,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAE7B,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AACD,MAAMC,iBAAgB,SAAQ,SAAS,CAAA;IAUnC,WAAoB,CAAA,OAAgB,EAAE,WAAmB,EAAA;AACrD,QAAA,KAAK,EAAE,CAAC;QADQ,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;AAGhC,QAAA,IAAI,CAAC,iBAAiB,GAAG,uBAAuB,CAAC,WAAW,CAAC,CAAC;AAC9D,QAAA,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;AAExD,QAAA,IAAI,CAAC,gBAAgB,GAAG,sBAAsB,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;AAE/C,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAEnC,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;QAClB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,OAAO;YAAE,OAAO;AAErB,QAAA,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AAEhE,QAAA,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAE3B,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAE5F,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACvC,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAA,EAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;KACvD;AACJ;;MC7JY,iBAAiB,CAAA;IACnB,OAAO,UAAU,CAAC,KAAa,EAAE,MAAc,EAAE,QAAkB,EAAE,KAAa,EAAE,KAAa,EAAA;AACpG,QAAA,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KAC1D;AAEM,IAAA,OAAO,eAAe,CAAC,SAAoB,EAAE,WAAmB,EAAA;AACnE,QAAA,IAAI,SAAS,CAAC,WAAW,EAAE,EAAE;AACzB,YAAA,OAAO,IAAIF,mBAAiB,CAAC,SAAsB,EAAE,WAAW,CAAC,CAAC;AACrE,SAAA;AAAM,aAAA,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAE;AAC7B,YAAA,OAAO,IAAIC,gBAAc,CAAC,SAAmB,EAAE,WAAW,CAAC,CAAC;AAC/D,SAAA;AAAM,aAAA;AACH,YAAA,OAAO,IAAIC,iBAAe,CAAC,SAAoB,EAAE,WAAW,CAAC,CAAC;AACjE,SAAA;KACJ;AACJ;;ACdD,MAAM,YAAa,SAAQ,SAAS,CAAA;AAKhC,IAAA,WAAA,CAAoB,WAAwB,EAAA;AACxC,QAAA,KAAK,EAAE,CAAC;QADQ,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QAHpC,IAAkB,CAAA,kBAAA,GAAwB,EAAE,CAAC;QAKjD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QAChD,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;AAElD,QAAA,MAAM,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;;QAG7B,IAAI,YAAY,GAAG,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,EAAE;AACtC,YAAA,IAAI,CAAC,mBAAmB,GAAG,CAAC,WAAW,GAAG,cAAc,EAAE,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;AACrG,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,GAAG,cAAc,EAAE,YAAY,GAAG,cAAc,CAAC,CAAC;AACvG,SAAA;;AAGD,QAAA,MAAM,UAAU,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACnE,QAAA,MAAM,UAAU,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAEpE,MAAM,IAAI,GAAG,iBAAiB,CAAC,UAAU,CACrC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAC3B,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAC3B,OAAO,EACP,QAAQ,EACR,IAAI,CACP,CAAC;AACF,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;KAC7C;AAED,IAAA,WAAW,CAAC,OAAgB,EAAA;AACxB,QAAA,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7G,QAAA,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAEvB,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AAC3C,QAAA,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzF,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;YACrC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AACrE,YAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3C,SAAC,CAAC,CAAC;AAEH,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;AACnD,QAAA,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,SAAA;KACJ;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;AAClB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;YAErD,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9C,SAAA;KACJ;AACJ;;ACvDD,MAAM,UAAW,SAAQ,SAAS,CAAA;AAG9B,IAAA,WAAA,CAAoB,WAAwB,EAAA;AACxC,QAAA,KAAK,EAAE,CAAC;QADQ,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QAFpC,IAAY,CAAA,YAAA,GAAoB,EAAqB,CAAC;QAI1D,IAAI,CAAC,YAAY,GAAG;AAChB,YAAA,UAAU,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;AACvE,YAAA,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;SACrF,CAAC;KACL;IAED,WAAW,CAAC,OAAgB,EAAA,GAAI;IAEhC,OAAO,CAAC,OAAgB,EAAA,GAAI;IAE5B,IAAI,CAAC,IAAY,EAAA,GAAI;AACxB;;ACrBD,MAAM,WAAY,SAAQ,SAAS,CAAA;AAM/B,IAAA,WAAA,CAAoB,WAAwB,EAAA;AACxC,QAAA,KAAK,EAAE,CAAC;QADQ,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QAExC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QAChD,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;AAElD,QAAA,MAAM,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;;QAG7B,IAAI,YAAY,GAAG,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,EAAE;AACtC,YAAA,IAAI,CAAC,mBAAmB,GAAG,CAAC,WAAW,GAAG,cAAc,EAAE,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;AACrG,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,GAAG,cAAc,EAAE,YAAY,GAAG,cAAc,CAAC,CAAC;AACvG,SAAA;;AAGD,QAAA,MAAM,UAAU,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACnE,QAAA,MAAM,UAAU,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;KAC7C;AAED,IAAA,UAAU,CAAC,MAAc,EAAA;AACrB,QAAA,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzF,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAEhD,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAClC;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACnC;AACJ;;ACnCD,MAAM,QAAQ,CAAA;AA4BV,IAAA,WAAA,CAAY,aAAqB,EAAA;QAtBzB,IAAU,CAAA,UAAA,GAAW,CAAC,CAAC;;AAwB3B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC;AAC7B,YAAA,eAAe,EAAE,kBAAkB;AACnC,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;AAC/B,YAAA,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;AACjC,YAAA,eAAe,EAAE,QAAQ;AAC5B,SAAA,CAAC,CAAC;;QAGH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACjC,QAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AAC9B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;QAGnB,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAyB,CAAC,CAAC;;QAGxE,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;AACrF,QAAA,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;QAG1C,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;QAG5C,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,WAAW,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;QAG3C,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE1C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAGzC,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;AA/DD,IAAA,IAAI,SAAS,GAAA;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IAED,IAAI,SAAS,CAAC,IAAY,EAAA;AACtB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAEzB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAE5B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;IAoDK,IAAI,GAAA;;;AAEN,YAAA,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;SACrC,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,WAAW,CAAC,OAAgB,EAAA;AACxB,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACvC,QAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACxC;AAED,IAAA,UAAU,CAAC,MAAc,EAAA;AACrB,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACvC;AAED,IAAA,OAAO,CAAC,OAAgB,EAAA;AACpB,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACpC;AAED,IAAA,aAAa,CAAC,KAAuB,EAAA;QACjC,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KACrC;AACJ;;AC1GD,IAAK,QAMJ,CAAA;AAND,CAAA,UAAK,QAAQ,EAAA;AACT,IAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAW,CAAA;AACX,IAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAW,CAAA;AACX,IAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAW,CAAA;AACX,IAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAW,CAAA;AACX,IAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAc,CAAA;AAClB,CAAC,EANI,QAAQ,KAAR,QAAQ,GAMZ,EAAA,CAAA,CAAA,CAAA;AAID,MAAM,UAAU,CAAA;IASZ,WAAY,CAAA,SAAiB,EAAE,SAAiB,EAAE,CAAS,EAAE,CAAS,EAAE,WAAmB,EAAA;QAR3F,IAAI,CAAA,IAAA,GAAsB,IAAI,CAAC;QAC/B,IAAI,CAAA,IAAA,GAAsB,IAAI,CAAC;AAQ3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,QAAA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,QAAA,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;IAED,SAAS,CAAC,CAAS,EAAE,CAAS,EAAA;AAC1B,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACZ,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACf;AAED,IAAA,UAAU,CAAC,CAAS,EAAA;AAChB,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACf;AAED,IAAA,UAAU,CAAC,CAAS,EAAA;AAChB,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACf;AAED,IAAA,SAAS,CAAC,GAAkB,EAAE,SAAS,GAAG,KAAK,EAAA;AAC3C,QAAA,IAAI,SAAS,EAAE;AACX,YAAA,QAAQ,GAAG;gBACP,KAAK,IAAI,EAAE;AACP,oBAAA,OAAO,IAAI,CAAC,QAAQ,MAAM,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,iBAAA;gBAED,KAAK,IAAI,EAAE;AACP,oBAAA,OAAO,IAAI,CAAC,QAAQ,MAAM,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,iBAAA;gBAED,KAAK,IAAI,EAAE;AACP,oBAAA,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE,CAAC;AACxC,iBAAA;gBAED,KAAK,IAAI,EAAE;AACP,oBAAA,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE,CAAC;AACxC,iBAAA;AAED,gBAAA,SAAS;AACL,oBAAA,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;AAC9B,iBAAA;AACJ,aAAA;AACJ,SAAA;AAED,QAAA,QAAQ,GAAG;YACP,KAAK,IAAI,EAAE;AACP,gBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,CAAC;AACxD,aAAA;YAED,KAAK,IAAI,EAAE;AACP,gBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,CAAC;AACxD,aAAA;YAED,KAAK,IAAI,EAAE;AACP,gBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,CAAC;AACxD,aAAA;YAED,KAAK,IAAI,EAAE;AACP,gBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE,MAAM,QAAQ,CAAC,EAAE,CAAC;AACxD,aAAA;YAED,KAAK,OAAO,EAAE;AACV,gBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,MAAM,QAAQ,CAAC,KAAK,CAAC;AAC9D,aAAA;AAED,YAAA,SAAS;AACL,gBAAA,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClE,aAAA;AACJ,SAAA;KACJ;AAED,IAAA,UAAU,CAAC,GAAkB,EAAE,SAAS,GAAG,KAAK,EAAA;QAC5C,IAAI,GAAG,KAAK,SAAS,EAAE;YACnB,MAAM,IAAI,GAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9D,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACpB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AACzC,SAAA;QAED,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;KACjF;AAED,IAAA,WAAW,CAAC,GAAkB,EAAE,SAAS,GAAG,KAAK,EAAA;AAC7C,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACpB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AACzC,SAAA;QAED,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;KACjF;IAED,WAAW,CAAC,GAAG,IAAgB,EAAA;AAC3B,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,QAAA,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;KAC7B;IAED,WAAW,CAAC,GAAG,IAAgB,EAAA;AAC3B,QAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC;KACjD;AAED,IAAA,cAAc,CAAC,GAAa,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;KAC1D;IAED,KAAK,GAAA;QACD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxF;AACJ;;AC/HD,MAAM,UAAW,SAAQ,KAAiB,CAAA;AAItC,IAAA,WAAA,CAAY,UAAkC,EAAA;QAC1C,IAAI,UAAU,KAAK,SAAS,EAAE;AAC1B,YAAA,KAAK,EAAE,CAAC;YACR,OAAO;AACV,SAAA;QAED,IAAI,KAAK,GAAiB,EAAE,CAAC;AAC7B,QAAA,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAChC,MAAM,gBAAgB,GAAG,UAAU;iBAC9B,KAAK,CAAC,GAAG,CAAC;AACV,iBAAA,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACZ,iBAAA,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAE9C,IAAI,eAAe,GAAG,CAAC,CAAC;AAExB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,gBAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC;gBAE5C,eAAe,IAAI,SAAS,CAAC;AAC7B,gBAAA,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,eAAe,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;AAC3E,gBAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,aAAA;AAED,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,CAAC,GAAG,CAAC;AAAE,oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,gBAAA,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,iBAAA;AACJ,aAAA;AACJ,SAAA;aAAM,IAAI,UAAU,YAAY,UAAU,EAAE;YACzC,KAAK,GAAG,UAAU,CAAC;AACtB,SAAA;AAED,QAAA,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACpB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,SAAA;KACJ;IAED,QAAQ,GAAA;QACJ,IAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAA,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AAClB,YAAA,GAAG,IAAI,CAAG,EAAA,IAAI,CAAC,SAAS,CAAA,CAAA,EAAI,IAAI,CAAC,CAAC,CAAI,CAAA,EAAA,IAAI,CAAC,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;AACrE,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,GAAG,CAAC;KACd;AAED,IAAA,eAAe,CAAC,SAAiB,EAAE,YAAoB,CAAC,EAAE,YAAoB,CAAC,EAAA;QAC3E,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAE3C,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,EAAE,CAAC,CAAC,CAAC;AAClD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KAC3C;IAED,WAAW,CAAC,IAAY,EAAE,EAAU,EAAA;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAEvC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KAC3C;AAED,IAAA,YAAY,CAAC,SAAiB,EAAA;AAC1B,QAAA,IAAI,GAAG,CAAC;QACR,IAAI,EAAE,GAAG,CAAC,CAAC;AACX,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACzB,QAAA,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;AAChB,YAAA,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,SAAS,EAAE;gBACjC,EAAE,GAAG,GAAG,CAAC;AACZ,aAAA;AAAM,iBAAA;gBACH,EAAE,GAAG,GAAG,CAAC;AACZ,aAAA;AACJ,SAAA;AACD,QAAA,IAAI,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,GAAG,SAAS,EAAE;AAClE,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AACD,QAAA,OAAO,EAAE,CAAC;KACb;AAED,IAAA,OAAO,CAAC,SAAiB,EAAA;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;KAC7C;AAED,IAAA,aAAa,CAAC,SAAiB,EAAE,WAAW,GAAG,KAAK,EAAA;QAChD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC3C,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAEzB,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAC9B,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE;YAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAEjC,IAAI,CAAC,QAAQ,EAAE;gBACX,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,aAAA;AAED,YAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;YACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAEnC,YAAA,MAAM,QAAQ,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC5C,YAAA,MAAM,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC;AAEvC,YAAA,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC,CAAC;AACrE,SAAA;AAAM,aAAA;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAEjC,IAAI,CAAC,QAAQ,EAAE;gBACX,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,aAAA;AAED,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAEnC,YAAA,MAAM,QAAQ,GAAG,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;AAChD,YAAA,MAAM,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC;AAEvC,YAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC,CAAC;AAC7E,SAAA;KACJ;AACJ;;ACpID,MAAM,IAAI,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC,IAAI,CAAC;AAC3D,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAE3B,MAAM,KAAK,GAAG,kBAAkB,CAAC;AACjC,MAAM,MAAM,CAAA;AAAZ,IAAA,WAAA,GAAA;QACW,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;QACb,IAAW,CAAA,WAAA,GAAG,CAAC,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;QAChB,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;QACf,IAAW,CAAA,WAAA,GAAG,CAAC,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,CAAC,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,CAAC,CAAC;QACf,IAAK,CAAA,KAAA,GAAG,CAAC,CAAC;QACV,IAAK,CAAA,KAAA,GAAG,CAAC,CAAC;QACV,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;QACX,IAAK,CAAA,KAAA,GAAG,CAAC,CAAC;QACV,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;QACb,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;AACjB,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAClB,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;AACd,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;AACjB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAO,CAAA,OAAA,GAAG,CAAC,CAAC;KAuBtB;IArBS,MAAM,GAAA;;AACR,YAAA,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACjD,YAAA,OAAO,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE;AAC3B,gBAAA,IAAI,EAAE,0BAA0B;AACnC,aAAA,CAAC,CAAC;SACN,CAAA,CAAA;AAAA,KAAA;IAEM,OAAa,UAAU,CAAC,MAAc,EAAA;;AACzC,YAAA,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B,CAAA,CAAA;AAAA,KAAA;IAEM,OAAa,eAAe,CAAC,WAAwB,EAAA;;YACxD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpD,YAAA,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;AACzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACpC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,aAAA;AAED,YAAA,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B,CAAA,CAAA;AAAA,KAAA;AACJ,CAAA;AAED;AACA,SAAS,IAAI,CAAC,IAAY,EAAA;IACtB,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,OAAO,IAAI,OAAO,CAAS,CAAO,OAAO,EAAE,MAAM,KAAI,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACjD,QAAA,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAE1B,IAAI;AACA,YAAA,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AACjC,YAAA,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AACvC,YAAA,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACrC,YAAA,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACrC,YAAA,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAEpC,YAAA,MAAM,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC,YAAA,MAAM,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC,YAAA,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAEpC,YAAA,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAA,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAA,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAEhC,YAAA,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AACjC,YAAA,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAElC,YAAA,MAAM,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAErC,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;AAE1C,YAAA,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YACnC,MAAM,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5E,YAAA,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AAExC,YAAA,IAAI,MAAM,CAAC,YAAY,IAAI,CAAC,EAAE;gBAC1B,MAAM,gBAAgB,GAAG,MAAM,qBAAqB,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;gBAChF,MAAM,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,gBAAgB,CAAC,CAAC;gBACrD,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,aAAA;YAED,OAAO,CAAC,MAAM,CAAC,CAAC;AACnB,SAAA;AAAC,QAAA,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,IAAI,CAAC,CAAC;AAChB,SAAA;KACJ,CAAA,CAAC,CAAC;IAEH,SAAS,QAAQ,CAAC,MAAc,EAAA;AAC5B,QAAA,MAAM,EAAE,CAAC;QACT,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACtC;IAED,SAAS,SAAS,CAAC,MAAc,EAAA;QAC7B,MAAM,IAAI,CAAC,CAAC;QACZ,OAAO,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;KAC3C;IAED,SAAS,WAAW,CAAC,MAAc,EAAA;QAC/B,MAAM,IAAI,CAAC,CAAC;QACZ,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACzC;IAED,SAAS,QAAQ,CAAC,MAAc,EAAA;QAC5B,MAAM,IAAI,CAAC,CAAC;QACZ,OAAO,MAAM,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC7C;IAED,SAAS,UAAU,CAAC,MAAc,EAAA;QAC9B,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE;AACjC,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,IAAI,UAAU,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AACpE,YAAA,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;AACjC,YAAA,MAAM,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;AAC3C,YAAA,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC9D,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,EAAE,CAAC;AACT,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;KACJ;AAED,IAAA,SAAS,cAAc,CAAC,MAAc,EAAE,MAAc,EAAE,QAAkB,EAAA;QACtE,MAAM,IAAI,MAAM,CAAC;AACjB,QAAA,OAAO,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAChH;AAED,IAAA,SAAS,qBAAqB,CAAC,MAAc,EAAE,MAAc,EAAA;QACzD,OAAO,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,KAAI;YAC3C,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,MAAc,EAAE,GAAU,KAAI;gBAC1D,IAAI,MAAM,KAAK,SAAS,EAAE;oBACtB,OAAO,CAAC,MAAM,CAAC,CAAC;AACnB,iBAAA;AAAM,qBAAA;oBACH,MAAM,CAAC,GAAG,CAAC,CAAC;AACf,iBAAA;AACL,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACN;AACL,CAAC;AAED;AACA,SAAS,KAAK,CAAC,MAAc,EAAA;IACzB,OAAO,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,KAAI;QAC3C,IAAI;AACA,YAAA,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC9C,IAAI,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACnD,IAAI,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAChD,IAAI,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAChD,IAAI,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAE9C,IAAI,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;YACtD,IAAI,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;YACtD,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;YAEpD,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAC1C,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAC1C,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;YAE5C,IAAI,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAC5C,IAAI,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;AAChD,YAAA,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAE/D,IAAI,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAI,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;YAElD,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AAEtF,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,GAAQ,EAAE,GAAQ,KAAI;gBACxE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClC,IAAI,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACnD,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;AAE7C,gBAAA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;oBAC9B,QAAQ;oBACR,WAAW;oBACX,UAAU;oBACV,UAAU;oBACV,SAAS;oBACT,WAAW;oBACX,WAAW;oBACX,UAAU;oBACV,KAAK;oBACL,KAAK;oBACL,MAAM;oBACN,KAAK;oBACL,QAAQ;oBACR,YAAY;oBACZ,IAAI;oBACJ,QAAQ;oBACR,SAAS;oBACT,YAAY;oBACZ,UAAU;oBACV,OAAO;AACV,iBAAA,CAAC,CAAC;gBAEH,OAAO,CAAC,WAAW,CAAC,CAAC;AACzB,aAAC,CAAC,CAAC;AACN,SAAA;AAAC,QAAA,OAAO,GAAG,EAAE;YACV,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,SAAA;AACL,KAAC,CAAC,CAAC;IAEH,SAAS,WAAW,CAAC,IAAY,EAAA;AAC7B,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,YAAA,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjG,SAAA;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KAC9B;IAED,SAAS,YAAY,CAAC,GAAW,EAAA;QAC7B,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACzB,QAAA,OAAO,MAAM,CAAC;KACjB;IAED,SAAS,UAAU,CAAC,KAAa,EAAA;QAC7B,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,QAAA,OAAO,MAAM,CAAC;KACjB;IACD,SAAS,SAAS,CAAC,IAAY,EAAA;QAC3B,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,QAAA,OAAO,MAAM,CAAC;KACjB;AACL;;AC1OA,MAAM,eAAe,GAAG;AACpB,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CAClB,CAAC;AAEF,MAAM,OAAO,CAAA;AAAb,IAAA,WAAA,GAAA;QACI,IAAK,CAAA,KAAA,GAAe,EAAE,CAAC;KAwB1B;;AAnBG,IAAA,gBAAgB,CAAC,iBAA2B,EAAA;AACxC,QAAA,KAAK,IAAI,YAAY,IAAI,iBAAiB,EAAE;AACxC,YAAA,IAAI,YAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;gBAC9C,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACxF,aAAA;AAAM,iBAAA,IAAI,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBAC9C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjF,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9E,aAAA;AACJ,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;AAChC,SAAA;KACJ;AAED,IAAA,IAAI,GAAG,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAA,CAAA,EAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA,CAAE,CAAC,CAAC;KACxG;AACJ;;AC9BD,MAAM,WAAW,GAAG,GAAG,CAAC;AACxB,MAAM,YAAY,GAAG,GAAG,CAAC;AACzB,MAAM,WAAW,GAAG,GAAG,CAAC;AAExB,MAAM,UAAU,CAAA;AAAhB,IAAA,WAAA,GAAA;QAGY,IAAE,CAAA,EAAA,GAAG,CAAC,CAAC;QACP,IAAE,CAAA,EAAA,GAAG,CAAC,CAAC;QACP,IAAE,CAAA,EAAA,GAAG,CAAC,CAAC;QACP,IAAE,CAAA,EAAA,GAAG,CAAC,CAAC;QAEf,IAAgB,CAAA,gBAAA,GAAG,GAAG,CAAC;QACvB,IAAc,CAAA,cAAA,GAAG,CAAC,CAAC;KAqFtB;IAnFG,gBAAgB,CAAC,IAAc,EAAE,IAAW,EAAA;;AAExC,QAAA,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,gBAAgB,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AAExG,QAAA,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAEzB,QAAA,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC;AAEjD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,IAAI,GAAI,IAAI,IAAI,EAAE,CAAC;;KAElC;;AAGD,IAAA,IAAI,MAAM,GAAA;AACN,QAAA,OAAO,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,GAAG,WAAW,CAAC,CAAC;KAChE;AAED,IAAA,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1B,OAAO,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACvD;AAED,IAAA,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;QAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;AACtC,SAAA;AAAM,aAAA;YACH,OAAO,IAAI,CAAC,EAAE,CAAC;AAClB,SAAA;KACJ;AAED,IAAA,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;QAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;AACtC,SAAA;AAAM,aAAA;YACH,OAAO,IAAI,CAAC,EAAE,CAAC;AAClB,SAAA;KACJ;AAED,IAAA,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;QAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;AACtC,SAAA;AAAM,aAAA;YACH,OAAO,IAAI,CAAC,EAAE,CAAC;AAClB,SAAA;KACJ;AAED,IAAA,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;QAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACzB,YAAA,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACtB,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;AACtC,SAAA;AAAM,aAAA;YACH,OAAO,IAAI,CAAC,EAAE,CAAC;AAClB,SAAA;KACJ;AAED,IAAA,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;QAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,QAAA,MAAM,CAAC,GAAG,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAE7C,QAAA,OAAO,CAAC,CAAC;KACZ;AAED,IAAA,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA;AAC1B,QAAA,MAAM,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAC/C,QAAA,MAAM,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAChD,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;AAChD,QAAA,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KAClC;AACJ,CAAA;AAED;;AAEE;AACF,SAAS,eAAe,CAAC,UAAkB,EAAE,GAAW,EAAE,GAAW,EAAE,GAAW,EAAA;IAC9E,IAAI,UAAU,GAAG,CAAC;AAAE,QAAA,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IACtE,IAAI,UAAU,GAAG,CAAC;AAAE,QAAA,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAEtE,IAAA,OAAO,GAAG,CAAC;AACf;;AC9GA,MAAM,MAAM,CAAA;AAOR,IAAA,gBAAgB,CAAC,IAAc,EAAA;;AAE3B,QAAA,MAAM,CAAC,SAAS,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KACnF,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAC5B,CAAC;AACF,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAClD,QAAA,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;KAChD;AACJ;;AClBD;;;;AAII;AASJ,MAAM,eAAe,CAAA;IAOjB,WAAY,CAAA,SAAiB,EAAE,WAAqB,EAAA;QANpD,IAAS,CAAA,SAAA,GAAc,YAAY,CAAC;QAOhC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,WAAW,CAAC;AAEjD,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;KACpC;AACJ,CAAA;AAED,MAAM,UAAU,CAAA;IAOZ,WAAY,CAAA,SAAiB,EAAE,WAAqB,EAAA;QANpD,IAAS,CAAA,SAAA,GAAc,OAAO,CAAC;QAO3B,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,WAAW,CAAC;AAEjD,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;KACpC;AACJ,CAAA;AAED,MAAM,UAAU,CAAA;IAKZ,WAAY,CAAA,SAAiB,EAAE,WAAqB,EAAA;QAJpD,IAAS,CAAA,SAAA,GAAc,OAAO,CAAC;AAK3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3C;AACJ,CAAA;AAED,MAAM,MAAM,CAAA;AAAZ,IAAA,WAAA,GAAA;QACI,IAAM,CAAA,MAAA,GAAY,EAAE,CAAC;KAoBxB;AAlBG,IAAA,gBAAgB,CAAC,gBAA0B,EAAA;QACvC,IAAI,CAAC,MAAM,GAAG,gBAAgB;AACzB,aAAA,GAAG,CAAC,CAAC,WAAW,KAAI;AACjB,YAAA,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtE,QAAQ,CAAC,SAAS;gBACd,KAAK,CAAC,EAAE;oBACJ,OAAO,IAAI,eAAe,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AACvD,iBAAA;gBACD,KAAK,CAAC,EAAE;oBACJ,OAAO,IAAI,UAAU,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAClD,iBAAA;gBACD,KAAK,CAAC,EAAE;oBACJ,OAAO,IAAI,UAAU,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAClD,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC;aACD,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,KAAK,SAAS,CAAiB,CAAC;KAC/D;AACJ;;AC/ED,MAAM,OAAO,CAAA;AAiBT,IAAA,gBAAgB,CAAC,IAAc,EAAA;;;QAE3B,SAAS,cAAc,CAAC,GAAW,EAAA;AAC/B,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AAE3F,YAAA,IAAI,QAAQ,EAAE;gBACV,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AACzC,aAAA;AAAM,iBAAA;AACH,gBAAA,OAAO,IAAI,CAAC;AACf,aAAA;SACJ;QAED,IAAI,CAAC,aAAa,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,eAAe,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;AAC3D,QAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,aAAa,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;AAClE,QAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,aAAa,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,CAAC;AACnE,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,WAAW,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC,SAAS,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,WAAW,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,QAAQ,CAAC;AACzD,QAAA,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,eAAe,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,KAAK,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,MAAM,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,mBAAmB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;AAC9E,QAAA,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,sBAAsB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;AACpF,QAAA,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,gBAAgB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;QACxE,IAAI,CAAC,eAAe,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,iBAAiB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,UAAU,CAAC;QACvE,IAAI,CAAC,cAAc,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,gBAAgB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;AAC7D,QAAA,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,iBAAiB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,iBAAiB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,cAAc,CAAC,yBAAyB,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,CAAC;KAC7F;AACJ;;MC7CY,UAAU,CAAA;AACZ,IAAA,OAAO,mBAAmB,CAAC,CAAS,EAAE,CAAS,EAAA;QAClD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC1E;IAEM,OAAO,SAAS,CAAC,CAAS,EAAA;QAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAChD;AAEM,IAAA,OAAO,KAAK,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW,EAAA;AACvD,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;KAC9C;IAEM,OAAO,IAAI,CAAC,CAAS,EAAE,IAAY,EAAE,EAAU,EAAE,UAAkB,EAAE,QAAgB,EAAA;AACxF,QAAA,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,QAAQ,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC;KACnE;IAEM,OAAO,GAAG,CAAC,OAAiB,EAAA;QAC/B,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;AACxB,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;IAEM,OAAO,OAAO,CAAC,OAAiB,EAAA;QACnC,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;KACxE;AAEM,IAAA,OAAO,YAAY,CAAC,MAAgB,EAAE,KAAe,EAAE,MAAc,EAAA;QACxE,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAEhC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC;KAC/C;AACJ;;ACjCD,MAAM,qBAAqB,CAAA;IAYvB,WAAY,CAAA,UAAkB,EAAE,UAAkB,EAAE,SAAiB,EAAE,MAAc,EAAE,MAAe,EAAA;AAClG,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;AAXD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;KAC7D;AAUJ,CAAA;MAEY,gBAAgB,CAAA;IAMlB,OAAO,iBAAiB,CAAC,aAAiC,EAAA;AAC7D,QAAA,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;KACtD;IAEM,OAAO,iBAAiB,CAAC,aAAiC,EAAA;AAC7D,QAAA,MAAM,MAAM,GAAG,IAAI,KAAK,EAAW,CAAC;AAEpC,QAAA,IAAI,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,EAAE;AACP,YAAA,OAAO,MAAM,CAAC;AACjB,SAAA;AAED,QAAA,MAAM,SAAS,GAAG,IAAI,KAAK,EAAa,CAAC;AACzC,QAAA,MAAM,WAAW,GAAG,IAAI,KAAK,EAAa,CAAC;AAE3C,QAAA,IAAI,kBAAkB,GAAG,IAAI,KAAK,EAAW,CAAC;AAC9C,QAAA,IAAI,kBAAkB,GAAG,IAAI,KAAK,EAAW,CAAC;QAE9C,IAAI,SAAS,GAAG,kBAAkB,CAAC;QAEnC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;AAEnC,QAAA,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACzB,YAAA,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,EAAe,CAAC;AAE1C,YAAA,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE;AACjC,gBAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAEtF,gBAAA,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,SAAS;AACZ,aAAA;YAED,IAAI,UAAU,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAI,WAAW,CAAC,GAAG,EAAgB,GAAG,IAAI,KAAK,EAAW,CAAC;AAClG,YAAA,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,kBAAkB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAE/E,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5B,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;AAED,YAAA,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3B,YAAA,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,SAAA;QAED,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAE9B,QAAA,OAAO,MAAM,CAAC;KACjB;IAEM,OAAO,kBAAkB,CAAC,aAAiC,EAAA;AAC9D,QAAA,IAAI,MAAM,GAAG,IAAI,KAAK,EAAW,CAAC;AAElC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AACzD,YAAA,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAC1B,YAAA,IAAI,EAAE,GAAG,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvF,YAAA,IAAI,EAAE,GAAG,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAEvF,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC5E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AACrF,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;IAEM,OAAO,sBAAsB,CAAC,aAAiC,EAAA;AAClE,QAAA,MAAM,GAAG,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC;QAC/B,IAAI,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;AAE1D,QAAA,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE;AAC9B,YAAA,OAAO,CAAC,GAAG,aAAa,CAAC,CAAC;AAC7B,SAAA;QAED,MAAM,EAAE,GAAG,mBAA4C,CAAC;QAExD,MAAM,YAAY,GACd,CAAC,GAAG,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,sBAAsB;AACxC,cAAE,CAAC;AACH,cAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAE/G,QAAA,MAAM,MAAM,GAAG,IAAI,KAAK,EAAW,CAAC;QAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAE,CAAC,EAAE;YACnC,MAAM,KAAK,GAAG,CAAC,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;AACrC,YAAA,MAAM,KAAK,GAAG,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,SAAS,GAAG,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC;YACnE,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC5E,YAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;IAEO,OAAO,kBAAkB,CAAC,aAAwB,EAAA;AACtD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAA,MAAM,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAEhG,YAAA,MAAM,aAAa,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;YAExC,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;AACnE,gBAAA,OAAO,KAAK,CAAC;AAChB,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACf;IAEO,OAAO,eAAe,CAC1B,aAAwB,EACxB,CAAY,EACZ,CAAY,EACZ,iBAA4B,EAC5B,KAAa,EAAA;QAEb,MAAM,SAAS,GAAG,iBAAiB,CAAC;QAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AACnC,SAAA;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACpB,YAAA,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAE5C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACpC,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnE,aAAA;AACJ,SAAA;KACJ;IAEO,OAAO,iBAAiB,CAC5B,aAAwB,EACxB,MAAiB,EACjB,kBAA6B,EAC7B,kBAA6B,EAC7B,KAAa,EAAA;QAEb,IAAI,CAAC,GAAG,kBAAkB,CAAC;QAC3B,IAAI,CAAC,GAAG,kBAAkB,CAAC;AAE3B,QAAA,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAErE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,YAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3B,SAAA;QAED,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AAEtC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,YAAA,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAElB,YAAA,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;iBACjB,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzB,iBAAA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACjB,QAAQ,CAAC,IAAI,CAAC,CAAC;AAEpB,YAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,SAAA;KACJ;IAEO,OAAO,qBAAqB,CAChC,aAAwB,EAAA;QAExB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC;;QAGhC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE;AACxF,YAAA,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;AAC7B,SAAA;;QAGD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5F,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;AAC9B,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;AAC9B,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;QAE9B,MAAM,MAAM,GAAG,IAAI,OAAO,CACtB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACrE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACxE,CAAC;QAEF,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAE9B,QAAA,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;AAE3B,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAExC,OAAO,QAAQ,GAAG,UAAU,EAAE;AAC1B,YAAA,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;AAC3B,SAAA;QAED,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,QAAA,IAAI,UAAU,GAAG,QAAQ,GAAG,UAAU,CAAC;;;AAIvC,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAErD,QAAA,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAC3C,GAAG,GAAG,CAAC,GAAG,CAAC;YACX,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC;AACzC,SAAA;AAED,QAAA,OAAO,IAAI,qBAAqB,CAAC,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;KACjF;IAEO,OAAO,gBAAgB,CAAC,IAAa,EAAE,IAAa,EAAE,IAAa,EAAE,IAAa,EAAE,CAAS,EAAA;AACjG,QAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,QAAA,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAElB,OAAO,IAAI,OAAO,CACd,GAAG;AACC,aAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACR,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxB,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;AACxD,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAC9D,GAAG;AACC,aAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACR,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxB,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;AACxD,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CACjE,CAAC;KACL;;AAtOc,gBAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AACxB,gBAAO,CAAA,OAAA,GAAG,IAAI,CAAC;AACf,gBAAsB,CAAA,sBAAA,GAAG,IAAI,CAAC;AAC9B,gBAAc,CAAA,cAAA,GAAG,EAAE;;MCxBzB,UAAU,CAAA;IACZ,OAAO,eAAe,CAAC,UAA8B,EAAA;QACxD,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC5C,YAAA,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAE/B,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC7C,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;AAEM,IAAA,OAAO,QAAQ,CAAC,IAAwB,EAAE,SAAiB,EAAA;AAC9D,QAAA,MAAM,MAAM,GAAG,IAAI,KAAK,EAAW,CAAC;AAEpC,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,YAAA,OAAO,MAAM,CAAC;AACjB,SAAA;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAErB,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACzB,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAExB,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAEjD,YAAA,IAAI,MAAM,GAAG,QAAQ,GAAG,SAAS,EAAE;gBAC/B,MAAM,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,IAAI,QAAQ,CAAC;AAC1C,gBAAA,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAEnG,gBAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpB,MAAM;AACT,aAAA;YAED,MAAM,IAAI,QAAQ,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;AAEM,IAAA,OAAO,UAAU,CAAC,UAA8B,EAAE,IAAY,EAAA;QACjE,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,IAAI,MAAM,GAAmB,IAAI,CAAC;QAElC,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAC3D,QAAA,MAAM,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC;QAE1C,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,YAAA,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAE9B,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAE7C,YAAA,IAAI,MAAM,GAAG,IAAI,GAAG,cAAc,EAAE;gBAChC,MAAM,CAAC,GAAG,CAAC,cAAc,GAAG,MAAM,IAAI,IAAI,CAAC;gBAE3C,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;gBAEvD,MAAM;AACT,aAAA;YAED,MAAM,IAAI,IAAI,CAAC;AAClB,SAAA;;QAGD,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9C,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;AAEM,IAAA,OAAO,WAAW,CAAC,IAAwB,EAAE,gBAAwB,EAAA;AACxE,QAAA,MAAM,MAAM,GAAG,IAAI,KAAK,EAAW,CAAC;AAEpC,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,YAAA,OAAO,MAAM,CAAC;AACjB,SAAA;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAErB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACzB,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAExB,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACjD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC;YAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AAClC,gBAAA,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,WAAW,GAAG,CAAC,CAAC,CAAC;AAEtC,gBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpG,aAAA;YAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;IAEM,OAAO,kBAAkB,CAAC,aAAwB,EAAA;AACrD,QAAA,MAAM,kBAAkB,GAAG,IAAI,KAAK,EAAa,CAAC;QAElD,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,MAAM,IAAI,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAClC,YAAA,MAAM,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAEjC,YAAA,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjE,MAAM,gBAAgB,GAAmB,EAAE,CAAC;AAE5C,gBAAA,MAAM,QAAQ,GAAG,CAAC,KAAK,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAE5D,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACxC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,iBAAA;AAED,gBAAA,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC1C,UAAU,GAAG,CAAC,CAAC;AAClB,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,kBAAkB,CAAC;KAC7B;AAEM,IAAA,OAAO,WAAW,CAAC,kBAAoC,EAAE,QAAgB,EAAA;QAC5E,MAAM,MAAM,GAAmB,EAAE,CAAC;AAElC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAA,IAAI,IAAI,GAAG,IAAI,KAAK,EAAW,CAAC;AAChC,YAAA,MAAM,aAAa,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;AAE5C,YAAA,QAAQ,QAAQ;gBACZ,KAAK,GAAG,EAAE;AACN,oBAAA,IAAI,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;oBACzD,MAAM;AACT,iBAAA;gBACD,KAAK,GAAG,EAAE;AACN,oBAAA,IAAI,GAAG,gBAAgB,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;oBAC9D,MAAM;AACT,iBAAA;gBACD,KAAK,GAAG,EAAE;AACN,oBAAA,IAAI,GAAG,gBAAgB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;oBAC1D,MAAM;AACT,iBAAA;AACD,gBAAA,KAAK,GAAG,CAAC;AACT,gBAAA,SAAS;AACL,oBAAA,IAAI,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;oBACzD,MAAM;AACT,iBAAA;AACJ,aAAA;;;AAID,YAAA,MAAM,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC,YAAA,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;IAEM,OAAO,gBAAgB,CAAC,IAAe,EAAA;QAC1C,MAAM,MAAM,GAAmB,EAAE,CAAC;AAClC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,YAAA,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,YAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpB,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;AAED;;;;AAIE;AACK,IAAA,OAAO,QAAQ,CAAC,IAAe,EAAE,SAAiB,EAAE,WAAoB,EAAA;AAC3E,QAAA,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjB,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;AAED,QAAA,MAAM,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC;AAE1C,QAAA,IAAI,GAAG,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACvE,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAEtD,QAAA,OAAO,IAAI,CAAC;KACf;AAEO,IAAA,OAAO,kBAAkB,CAAC,IAAe,EAAE,WAAmB,EAAA;AAClE,QAAA,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACxB,QAAA,IAAI,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;AAE5B,QAAA,IAAI,KAAK,GAAY,IAAI,CAAC,CAAC,CAAC,CAAC;AAE7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC7C,YAAA,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAEhB,IAAI,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,WAAW,EAAE;AACzD,gBAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtB,SAAS,GAAG,KAAK,CAAC;AACrB,aAAA;AACJ,SAAA;QAED,IAAI,SAAS,KAAK,KAAK,EAAE;AACrB,YAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,SAAA;AAED,QAAA,OAAO,SAAS,CAAC;KACpB;AAEO,IAAA,OAAO,sBAAsB,CAAC,IAAe,EAAE,WAAmB,EAAA;AACtE,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAE3B,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QAC5D,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAE5B,QAAA,OAAO,UAAU,CAAC;KACrB;IAEO,OAAO,cAAc,CACzB,IAAe,EACf,KAAa,EACb,IAAY,EACZ,WAAmB,EACnB,UAAqB,EAAA;QAErB,IAAI,SAAS,GAAG,WAAW,CAAC;QAC5B,IAAI,KAAK,GAAW,CAAC,CAAC;AAEtB,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAEjE,IAAI,MAAM,GAAG,SAAS,EAAE;gBACpB,KAAK,GAAG,CAAC,CAAC;gBACV,SAAS,GAAG,MAAM,CAAC;AACtB,aAAA;AACJ,SAAA;QAED,IAAI,SAAS,GAAG,WAAW,EAAE;AACzB,YAAA,IAAI,KAAK,GAAG,KAAK,GAAG,CAAC,EAAE;AACnB,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;AACpE,aAAA;YACD,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7B,YAAA,IAAI,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE;AAClB,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;AACnE,aAAA;AACJ,SAAA;KACJ;AAEO,IAAA,OAAO,YAAY,CAAC,CAAU,EAAE,EAAW,EAAE,EAAW,EAAA;AAC5D,QAAA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EACT,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EACT,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EACd,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAEnB,QAAA,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;AACtB,YAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YAElE,IAAI,CAAC,GAAG,CAAC,EAAE;AACP,gBAAA,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACV,gBAAA,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACb,aAAA;iBAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACd,gBAAA,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACZ,gBAAA,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACf,aAAA;AACJ,SAAA;AAED,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACd,QAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAEd,QAAA,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;KAC5B;AACJ;;ACxRD;MACa,IAAI,CAAA;AAUb,IAAA,WAAA,CAAmB,QAAgB,EAAE,aAAuD,EAAU,SAAkB,EAAA;QAArG,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAQ;QAAmE,IAAS,CAAA,SAAA,GAAT,SAAS,CAAS;;QAJhH,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;AAKrB,QAAA,IAAI,aAAa,CAAC,CAAC,CAAC,YAAY,OAAO,EAAE;AACrC,YAAA,IAAI,CAAC,aAAa,GAAG,aAA0B,CAAC;AACnD,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,KAAK,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3G,SAAA;QAED,MAAM,UAAU,GAAG,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAErE,QAAA,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEhE,QAAA,IAAI,SAAS,EAAE;AACX,YAAA,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,SAAA;;;;KAKJ;AAEM,IAAA,IAAI,CAAC,MAAc,EAAE,MAAc,EAAE,IAAY,EAAE,IAAY,EAAA;AAClE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,YAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC;AACnC,YAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC;AACtC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,SAAS,CAAC,CAAS,EAAE,CAAS,EAAA;AACjC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1B,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAIM,KAAK,CAAC,QAAgB,EAAE,CAAU,EAAA;QACrC,IAAI,CAAC,KAAK,SAAS,EAAE;AACjB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC;AACjC,aAAA;AACJ,SAAA;AAAM,aAAA;AACH,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1B,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,SAAS,GAAA;QACZ,OAAO,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClD;;AAGM,IAAA,UAAU,CAAC,CAAS,EAAA;QACvB,OAAO,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KAChD;IAMM,mBAAmB,CAAC,sBAA2D,EAAE,CAAU,EAAA;QAC9F,MAAM,MAAM,GAAc,EAAE,CAAC;AAE7B,QAAA,IAAI,OAAO,sBAAsB,KAAK,QAAQ,EAAE;YAC5C,MAAM,CAAC,GAAG,sBAAsB,CAAC;YAEjC,IAAI,CAAC,KAAK,SAAS,EAAE;AACjB,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,oBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,iBAAA;AACJ,aAAA;AAAM,iBAAA;AACH,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,oBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzC,oBAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtB,iBAAA;AACJ,aAAA;AACJ,SAAA;AAAM,aAAA;YACH,MAAM,MAAM,GAAG,sBAAsB,CAAC;AAEtC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,gBAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtB,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;IAEM,KAAK,GAAA;AACR,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;AACvE,QAAA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KACjE;AACJ;;ACrHD,SAAS,aAAa,CAAC,MAA6B,EAAE,OAA8B,EAAA;AAChF,IAAA,OAAO,UAAU,CAAS,EAAA;AACtB,QAAA,OAAO,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACtE,KAAC,CAAC;AACN,CAAC;AAED,SAAS,WAAW,CAAC,CAAS,EAAA;IAC1B,MAAM,CAAC,GAAG,CAAC,CAAC;IACZ,MAAM,CAAC,GAAG,IAAI,CAAC;AACf,IAAA,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9E,CAAC;AAED,SAAS,UAAU,CAAC,CAAS,EAAA;IACzB,MAAM,CAAC,GAAG,GAAG,CAAC;IACd,MAAM,CAAC,GAAG,GAAG,CAAC;AACd,IAAA,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAA,CAAA,GAAA,EAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAK,CAAC,CAAA,CAAC;AAEzC,IAAA,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9C,CAAC;MAGY,cAAc,CAAA;IACvB,OAAO,MAAM,CAAC,CAAS,EAAA;AACnB,QAAA,OAAO,CAAC,CAAC;KACZ;IAED,OAAO,MAAM,CAAC,CAAS,EAAA;AACnB,QAAA,OAAO,IAAA,CAAA,GAAA,CAAA,CAAC,EAAI,CAAC,CAAA,CAAC;KACjB;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;AACpB,QAAA,OAAO,EAAE,IAAA,CAAA,GAAA,EAAC,CAAC,GAAG,CAAC,GAAK,CAAC,CAAA,CAAC,GAAG,CAAC,CAAC;KAC9B;IAED,OAAO,SAAS,CAAC,CAAS,EAAA;AACtB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KACtD;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;AACpB,QAAA,OAAO,IAAA,CAAA,GAAA,CAAA,CAAC,EAAI,CAAC,CAAA,CAAC;KACjB;IAED,OAAO,QAAQ,CAAC,CAAS,EAAA;QACrB,OAAO,IAAA,CAAA,GAAA,EAAC,CAAC,GAAG,CAAC,GAAK,CAAC,CAAA,GAAG,CAAC,CAAC;KAC3B;IAED,OAAO,UAAU,CAAC,CAAS,EAAA;AACvB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;AACpB,QAAA,OAAO,IAAA,CAAA,GAAA,CAAA,CAAC,EAAI,CAAC,CAAA,CAAC;KACjB;IAED,OAAO,QAAQ,CAAC,CAAS,EAAA;AACrB,QAAA,OAAO,EAAE,IAAA,CAAA,GAAA,EAAC,CAAC,GAAG,CAAC,GAAK,CAAC,CAAA,CAAC,GAAG,CAAC,CAAC;KAC9B;IAED,OAAO,UAAU,CAAC,CAAS,EAAA;AACvB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;AACpB,QAAA,OAAO,IAAA,CAAA,GAAA,CAAA,CAAC,EAAI,CAAC,CAAA,CAAC;KACjB;IAED,OAAO,QAAQ,CAAC,CAAS,EAAA;QACrB,OAAO,IAAA,CAAA,GAAA,EAAC,CAAC,GAAG,CAAC,GAAK,CAAC,CAAA,GAAG,CAAC,CAAC;KAC3B;IAED,OAAO,UAAU,CAAC,CAAS,EAAA;AACvB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD;IAED,OAAO,MAAM,CAAC,CAAS,EAAA;AACnB,QAAA,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;KAC1C;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;AACpB,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;KACtC;IAED,OAAO,SAAS,CAAC,CAAS,EAAA;AACtB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KACtD;IAED,OAAO,MAAM,CAAC,CAAS,EAAA;QACnB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAA,CAAA,GAAA,CAAA,CAAC,GAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;KAC5C;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;QACpB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAA,CAAA,GAAA,CAAA,CAAC,GAAK,CAAC,EAAE,GAAG,CAAC,EAAC,CAAC;KAC3C;IAED,OAAO,SAAS,CAAC,CAAS,EAAA;AACtB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KACtD;IAED,OAAO,MAAM,CAAC,CAAS,EAAA;AACnB,QAAA,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KACnC;IAED,OAAO,OAAO,CAAC,CAAS,EAAA;AACpB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,UAAC,CAAC,GAAG,CAAC,GAAK,CAAC,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;KACzC;IAED,OAAO,SAAS,CAAC,CAAS,EAAA;AACtB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KACtD;IAED,OAAO,SAAS,CAAC,CAAS,EAAA;QACtB,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACrC;IAED,OAAO,UAAU,CAAC,CAAS,EAAA;AACvB,QAAA,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,OAAO,YAAY,CAAC,CAAS,EAAA;AACzB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5D;IAED,OAAO,QAAQ,CAAC,CAAS,EAAA;QACrB,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACpC;IAED,OAAO,SAAS,CAAC,CAAS,EAAA;QACtB,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KAClE;IAED,OAAO,WAAW,CAAC,CAAS,EAAA;AACxB,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1D;AACJ;;AC5HD;AACA,MAAM,KAAK,CAAA;AAIP,IAAA,WAAA,CAAmB,gBAAwB,CAAC,EAAA;QAAzB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAY;QAH5C,IAAO,CAAA,OAAA,GAAa,EAAE,CAAC;QAChB,IAAI,CAAA,IAAA,GAAW,CAAC,CAAC;KAEwB;AAEhD,IAAA,OAAO,YAAY,CACf,SAAiB,EACjB,OAAe,EACf,UAAkB,EAClB,QAAgB,EAChB,UAAA,GAAyB,QAAQ,EAAA;QAEjC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;KACnE;AAED,IAAA,IAAI,KAAK,GAAA;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrC;AAED,IAAA,UAAU,CAAC,IAAY,EAAA;AACnB,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,aAAa,CAAC;AAC7B,SAAA;QAED,IAAI,MAAM,GAAuB,SAAS,CAAC;QAC3C,IAAI,cAAc,GAAuB,SAAS,CAAC;AAEnD,QAAA,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAEjC,IAAI,IAAI,GAAG,cAAc,CAAC,OAAO,IAAI,IAAI,GAAG,cAAc,CAAC,SAAS,EAAE;gBAClE,SAAS;AACZ,aAAA;AAED,YAAA,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,cAAc,CAAC,SAAS,KAAK,cAAc,CAAC,OAAO,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YAClG,MAAM;AACF,gBAAA,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,QAAQ,GAAG,cAAc,CAAC,UAAU,CAAC;oBACpG,cAAc,CAAC,UAAU,CAAC;YAC9B,MAAM;AACT,SAAA;QAED,IAAI,MAAM,KAAK,SAAS,EAAE;YACtB,IAAI,YAAY,GAAG,QAAQ,CAAC;YAC5B,IAAI,kBAAkB,GAAW,CAAC,CAAC;;YAGnC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;gBAClC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;AACvC,aAAA;AAAM,iBAAA;AACH,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/B,oBAAA,MAAM,SAAS,GAAG,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC;oBAExC,IAAI,SAAS,GAAG,CAAC,EAAE;wBACf,MAAM;AACT,qBAAA;oBAED,IAAI,YAAY,GAAG,SAAS,EAAE;wBAC1B,YAAY,GAAG,SAAS,CAAC;wBACzB,kBAAkB,GAAG,CAAC,CAAC;AAC1B,qBAAA;AACJ,iBAAA;gBAED,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACvD,gBAAA,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC;AACnC,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;IAKD,SAAS,CACL,kBAAmC,EACnC,OAAyB,EACzB,UAA4B,EAC5B,QAA0B,EAC1B,UAAA,GAAkC,QAAQ,EAAA;AAE1C,QAAA,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE;YACxC,MAAM,SAAS,GAAG,kBAAkB,CAAC;AACrC,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACd,gBAAA,SAAS,EAAE,SAAmB;AAC9B,gBAAA,OAAO,EAAE,OAAiB;AAC1B,gBAAA,UAAU,EAAE,UAAoB;AAChC,gBAAA,QAAQ,EAAE,QAAkB;AAC5B,gBAAA,UAAU,EAAE,UAAwB;AACvC,aAAA,CAAC,CAAC;AACN,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;AACnC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACf;IAED,YAAY,CAAC,GAAG,OAAiB,EAAA;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACnE;IAED,gBAAgB,GAAA;AACZ,QAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;AACJ;;AClHD,MAAM,SAAS,CAAA;AAGX,IAAA,WAAA,CAAmB,aAAgB,EAAA;QAAhB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAG;QAF5B,IAAe,CAAA,eAAA,GAA0C,EAAE,CAAC;KAE5B;IAEhC,WAAW,CAAC,KAAY,EAAE,OAAiB,EAAA;AAC9C,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;AACtG,QAAA,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;AACnB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;AACvD,YAAA,KAAK,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC;YAC5B,OAAO;AACV,SAAA;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC;AAC5D,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,CAAC;AACnE,QAAA,KAAK,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC;KAC/B;IAEM,WAAW,CAAC,KAAY,EAAE,OAAiB,EAAA;AAC9C,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;AACtG,QAAA,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACjC,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;AAC1D,QAAA,KAAK,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC;KAC/B;AAEM,IAAA,cAAc,CAAC,QAA6C,EAAA;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC;AAE/G,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;KAC9C;AACJ;;AClCD,MAAe,iBAAiB,CAAA;AAAhC,IAAA,WAAA,GAAA;QACY,IAAU,CAAA,UAAA,GAAmB,EAAE,CAAC;KAoC3C;;AAjCG,IAAA,MAAM,CAAC,IAAY,EAAA;AACf,QAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KACpC;;IAGD,IAAI,CAAC,IAAY,EAAA,GAAI;AAEX,IAAA,aAAa,CAAC,aAAgB,EAAE,KAAY,EAAE,OAAiB,EAAA;AACrE,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC;AAEjG,QAAA,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;AACvB,YAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,aAAa,CAAC,CAAC;AAC/C,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,YAAA,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACtC,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC/D;AAES,IAAA,qBAAqB,CAAC,IAAY,EAAA;QACxC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;YAC7B,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,UAAU,KAAI;gBAChE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC;AACpF,aAAC,CAAC,CAAC;AAEH,YAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AAC7B,gBAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AAC7B,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACN;AAED,IAAA,OAAO,CAAC,aAAgB,EAAE,IAAY,KAAI;AAC7C;;ACjCK,MAAO,iBAAkB,SAAQ,iBAAqC,CAAA;AAUxE,IAAA,WAAA,CAAmB,SAAoB,EAAA;AACnC,QAAA,KAAK,EAAE,CAAC;QADO,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;AANvC,QAAA,IAAA,CAAA,cAAc,GAAG;AACb,YAAA,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;AACf,YAAA,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;SAClB,CAAC;AACF,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AAIjB,QAAA,MAAM,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC;AAClC,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAClC,QAAA,MAAM,UAAU,GAAG,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC;AAEjD,QAAA,MAAM,OAAO,GAAU,IAAI,KAAK,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAChC,YAAA,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,OAAO,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChE,YAAA,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,GAAG,GAAG,EAAE,UAAU,GAAG,OAAO,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnF,SAAA;AAAM,aAAA;AACH,YAAA,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzD,YAAA,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,SAAA;AAED,QAAA,MAAM,qBAAqB,GAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAChC,YAAA,IAAI,SAAS,CAAC,WAAW,KAAK,CAAC,EAAE;gBAC7B,qBAAqB,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxE,gBAAA,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3G,aAAA;AACJ,SAAA;AAAM,aAAA;YACH,qBAAqB,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9F,YAAA,qBAAqB,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzF,SAAA;AAED,QAAA,MAAM,mBAAmB,GAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,QAAA,mBAAmB,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAErE,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACnD,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAE/C,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;KAC1C;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC;AACvC,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;KACrC;IAED,OAAO,CAAC,SAA6B,EAAE,IAAY,EAAA;AAC/C,QAAA,QAAQ,SAAS;YACb,KAAK,OAAO,EAAE;AACV,gBAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChE,MAAM;AACT,aAAA;YAED,KAAK,MAAM,EAAE;AACT,gBAAA,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBACrD,MAAM;AACT,iBAAA;AAED,gBAAA,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,gBAAA,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnE,MAAM;AACT,aAAA;YAED,KAAK,KAAK,EAAE;AACR,gBAAA,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBACrD,MAAM;AACT,iBAAA;AAED,gBAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,gBAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3D,MAAM;AACT,aAAA;AACJ,SAAA;KACJ;AACJ,CAAA;AAED,SAAS,KAAK,CAAC,IAAY,EAAA;IACvB,MAAM,WAAW,GAAG,CAAC,CAAC;IACtB,MAAM,aAAa,GAAG,EAAE,CAAC;AAEzB,IAAA,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,aAAa,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;IAC7E,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,aAAa,EAAE,IAAI,GAAG,aAAa,GAAG,CAAC,EAAE,WAAW,EAAE,CAAC,WAAW,CAAC,CAAC;IAC3G,MAAM,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,aAAa,GAAG,CAAC,EAAE,IAAI,GAAG,aAAa,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;AAEpH,IAAA,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AACjC,CAAC;AAED,SAAS,IAAI,CAAC,IAAY,EAAA;IACtB,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,IAAA,MAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,OAAO,CAAC,OAAO,CAAC,CAAC;AACrB,CAAC;AAED,SAAS,eAAe,CAAC,IAAY,EAAA;IACjC,MAAM,WAAW,GAAG,GAAG,CAAC;AACxB,IAAA,MAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;IAE9E,OAAO,CAAC,OAAO,CAAC,CAAC;AACrB,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAA;IAC/B,MAAM,YAAY,GAAG,GAAG,CAAC;AACzB,IAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAExE,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtB;;ACxHA,IAAK,aAQJ,CAAA;AARD,CAAA,UAAK,aAAa,EAAA;AACd,IAAA,aAAA,CAAA,aAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAkB,CAAA;AAClB,IAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAe,CAAA;AACf,IAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAgB,CAAA;AAChB,IAAA,aAAA,CAAA,aAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAiB,CAAA;AACjB,IAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAmB,CAAA;AACnB,IAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAmB,CAAA;AACnB,IAAA,aAAA,CAAA,aAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAmB,CAAA;AACvB,CAAC,EARI,aAAa,KAAb,aAAa,GAQjB,EAAA,CAAA,CAAA,CAAA;AAED,MAAM,SAAS,CAAA;IACX,WACW,CAAA,SAAiB,EACjB,WAAmB,EACnB,KAAa,EACb,MAAc,EACd,QAAgB,EAAA;QAJhB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAQ;QACjB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAQ;QACnB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAQ;QACb,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAQ;KACvB;AACP,CAAA;AAeD,MAAM,SAAS,CAAA;AAiBX,IAAA,WAAA,CAAY,eAAgC,EAAA;QAN5C,IAAM,CAAA,MAAA,GAAW,SAAS,CAAC;QAG3B,IAAU,CAAA,UAAA,GAAW,CAAC,CAAC;QACvB,IAAW,CAAA,WAAA,GAAW,CAAC,CAAC;QAGpB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,GAC1G,eAAe,CAAC;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAE7B,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAChC;IAED,IAAI,CAAC,IAAY,EAAA,GAAI;IAErB,MAAM,CAAC,IAAY,EAAA,GAAI;IAEvB,kBAAkB,GAAA;QACd,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KACrF;IAED,gBAAgB,GAAA;QACZ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KACjF;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC;KACvC;IAED,UAAU,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC;KAC7C;IAED,WAAW,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC;KAC9C;IAED,QAAQ,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC;KAC3C;IAED,SAAS,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC;KAC5C;AAED,IAAA,WAAW,CAAC,IAAY,EAAA;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;KAC9F;;IAGD,YAAY,GAAA;QACR,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,aAAa,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACpH;AACJ;;ACzGD,MAAM,SAAU,SAAQ,SAAS,CAAA;AAG7B,IAAA,WAAA,CAAY,eAAgC,EAAA;QACxC,KAAK,CAAC,eAAe,CAAC,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAC/C;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;AAED,IAAA,MAAM,CAAC,IAAY,EAAA;AACf,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC9B;AACJ;;ACbD,MAAM,kBAAkB,CAAA;AAIpB,IAAA,WAAA,CAAmB,UAAsB,EAAA;QAAtB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACrC,QAAA,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AACjC,QAAA,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,QAAA,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAE/B,MAAM,UAAU,GAAG,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAE3D,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC;AAC/B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAClC,QAAA,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC;AAE9C,QAAA,MAAM,mBAAmB,GAAG,UAAU,KAAK,CAAC,GAAG,UAAU,GAAG,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;AACjG,QAAA,IAAI,SAAS,GAAG,mBAAmB,GAAG,CAAC,UAAU,CAAC,IAAI,GAAG,mBAAmB,IAAI,CAAC,GAAG,GAAG,CAAC;AACxF,QAAA,IAAI,OAAO,GAAG,SAAS,GAAG,GAAG,CAAC;QAE9B,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChD,QAAA,WAAW,CAAC,SAAS,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAEtD,QAAA,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;AAC5D,QAAA,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAEpD,QAAA,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;KAC1B;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;KAC1B;AACJ,CAAA;AAED,MAAM,mBAAmB,CAAA;AAIrB,IAAA,WAAA,CAAmB,WAA8B,EAAA;QAA9B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAmB;AAC7C,QAAA,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AAClC,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAClE,QAAA,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;AAErC,QAAA,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,QAAA,MAAM,aAAa,GAAG,WAAW,GAAG,aAAa,GAAG,CAAC,CAAC;AACtD,QAAA,WAAW,CAAC,SAAS,CAAC,aAAa,EAAE,aAAa,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChE,QAAA,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;AAG9D,QAAA,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,QAAA,MAAM,SAAS,GAAG,WAAW,GAAG,aAAa,GAAG,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,WAAW,CAAC;AAE5B,QAAA,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,GAAG,EAAE;AAC3C,YAAA,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC3C,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;KAC1B;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;KAC1B;AACJ,CAAA;AAID,MAAM,cAAe,SAAQ,iBAAkC,CAAA;AAkB3D,IAAA,WAAA,CAAmB,MAAc,EAAA;AAC7B,QAAA,KAAK,EAAE,CAAC;QADO,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAE7B,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC;AAC/B,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAElC,QAAA,MAAM,WAAW,GAAU,IAAI,KAAK,EAAE,CAAC;AACvC,QAAA,MAAM,WAAW,GAAU,IAAI,KAAK,EAAE,CAAC;AACvC,QAAA,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC;QAE9C,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAChC,YAAA,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/D,YAAA,WAAW,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;AAE9E,YAAA,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,OAAO,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpE,YAAA,WAAW,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,GAAG,GAAG,EAAE,UAAU,GAAG,OAAO,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,SAAA;AAAM,aAAA;AACH,YAAA,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/D,YAAA,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAEpE,YAAA,WAAW,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7D,YAAA,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzE,SAAA;AAED,QAAA,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,QAAA,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpE,QAAA,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAEhE,QAAA,MAAM,mBAAmB,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACzC,QAAA,MAAM,iBAAiB,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AAEvC,QAAA,MAAM,qBAAqB,GAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAElD,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAChC,YAAA,IAAI,MAAM,CAAC,WAAW,KAAK,CAAC,EAAE;gBAC1B,qBAAqB,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxE,gBAAA,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3G,aAAA;AACJ,SAAA;AAAM,aAAA;YACH,qBAAqB,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9F,qBAAqB,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpG,YAAA,qBAAqB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnF,SAAA;AAED,QAAA,MAAM,mBAAmB,GAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,QAAA,mBAAmB,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,QAAA,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAEjF,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACpB,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC/C,QAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC3C,QAAA,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACnD,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAE/C,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;KAC9C;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;QACb,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAC9E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7B,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;AACrC,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC;AACvC,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;KACxC;;IAGD,OAAO,CAAC,aAA8B,EAAE,IAAY,EAAA;AAChD,QAAA,QAAQ,aAAa;YACjB,KAAK,cAAc,EAAE;AACjB,gBAAA,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3F,gBAAA,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;gBACvF,MAAM;AACT,aAAA;YAED,KAAK,UAAU,EAAE;AACb,gBAAA,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,mBAAmB,EAAE,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;AACpF,gBAAA,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChF,MAAM;AACT,aAAA;YAED,KAAK,YAAY,EAAE;AACf,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC;AACzC,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACrC,gBAAA,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,sBAAsB,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAClG,gBAAA,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,KAAK,EAAE,oBAAoB,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;gBAC5F,MAAM;AACT,aAAA;AACJ,SAAA;KACJ;AACJ,CAAA;AAED,MAAM,iBAAiB,GAAG,CAAC,GAAG,GAAG,CAAC;AAElC,SAAS,sBAAsB,CAAC,IAAY,EAAA;AACxC,IAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACnE,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAY,EAAA;AACtC,IAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,iBAAiB,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAY,EAAA;AACrC,IAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACnE,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAY,EAAA;AACnC,IAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACnE,CAAC;AAED,SAAS,sBAAsB,CAAC,cAAsB,EAAE,IAAY,EAAA;AAChE,IAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,cAAc,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AAChF,CAAC;AAED,SAAS,oBAAoB,CAAC,YAAoB,EAAE,IAAY,EAAA;AAC5D,IAAA,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,YAAY,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9F;;AC3NA,MAAM,UAAU,CAAA;AAGZ,IAAA,WAAA,CAAmB,MAAc,EAAS,IAAY,EAAS,QAA0B,EAAA;QAAtE,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAAS,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAAS,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAkB;QACrF,IAAI,CAAC,QAAQ,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAChD;AACJ,CAAA;AAED,MAAM,iBAAiB,CAAA;AAGnB,IAAA,WAAA,CAAmB,MAAc,EAAS,IAAY,EAAS,QAA0B,EAAS,UAAmB,EAAA;QAAlG,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAAS,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAAS,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAkB;QAAS,IAAU,CAAA,UAAA,GAAV,UAAU,CAAS;QACjH,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;KACjD;AACJ,CAAA;AAYD,MAAM,MAAO,SAAQ,SAAS,CAAA;AAmB1B,IAAA,WAAA,CAAY,eAAgC,EAAE,YAA0B,EAAU,MAAoB,EAAA;QAClG,KAAK,CAAC,eAAe,CAAC,CAAC;QADuD,IAAM,CAAA,MAAA,GAAN,MAAM,CAAc;QALtG,IAAW,CAAA,WAAA,GAAiB,EAAE,CAAC;QAC/B,IAAY,CAAA,YAAA,GAAwB,EAAE,CAAC;AAOnC,QAAA,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;AAEjG,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAEzB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AACrC,QAAA,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACrB,QAAA,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAExC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAEtC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACtD,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAChD,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAElD,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;KAC5C;IAEO,gBAAgB,GAAA;AACpB,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;QAEvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AACxD,QAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACrC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;AACpD,QAAA,MAAM,mBAAmB,GAAG,UAAU,GAAG,GAAG,CAAC;AAE7C,QAAA,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,mBAAmB,CAAC;AAC1E,QAAA,MAAM,cAAc,GAAG,eAAe,GAAG,UAAU,CAAC;QAEpD,MAAM,QAAQ,GAAG,cAAc,CAAC;AAChC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;AAEhD,QAAA,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;KAChC;;IAGO,qBAAqB,GAAA;AACzB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAEvD,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;AACtD,QAAA,MAAM,kBAAkB,GAAG,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;AAClE,QAAA,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAEpE,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/F,MAAM,WAAW,GAAiB,EAAE,CAAC;AACrC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,YAAA,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAE9B,IAAI,CAAC,SAAS,EAAE;gBACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;AACxC,oBAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,kBAAkB,GAAG,CAAC,GAAG,mBAAmB,CAAC;oBACzF,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAE7C,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACrD,oBAAA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,iBAAA;AACJ,aAAA;AAAM,iBAAA;AACH,gBAAA,KAAK,IAAI,CAAC,GAAG,iBAAiB,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,oBAAA,MAAM,QAAQ,GACV,IAAI,CAAC,SAAS,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,kBAAkB,GAAG,CAAC,GAAG,mBAAmB,CAAC;oBAClG,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAE7C,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACrD,oBAAA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,iBAAA;AACJ,aAAA;AACJ,SAAA;AAED,QAAA,OAAO,WAAW,CAAC;KACtB;IAEO,sBAAsB,GAAA;QAC1B,MAAM,YAAY,GAAwB,EAAE,CAAC;AAE7C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,aAAa,GAAG,CAAC,CAAC;YACvD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAEnD,YAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AAGhD,YAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACb,gBAAA,MAAM,EAAE,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAChC,gBAAA,MAAM,EAAE,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAEjB,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACxC,aAAA;AAAM,iBAAA;gBACH,MAAM,EAAE,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC3D,MAAM,EAAE,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAE5C,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACxC,aAAA;AACD,YAAA,MAAM,UAAU,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAE/B,YAAA,MAAM,WAAW,GAAG,IAAI,iBAAiB,CAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACrF,YAAA,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAClC,SAAA;AAED,QAAA,OAAO,YAAY,CAAC;KACvB;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACnE;AAED,IAAA,aAAa,CAAC,IAAY,EAAA;AACtB,QAAA,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5D,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAE9C,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC;AAChF,QAAA,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;QAE9C,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;KAClD;AAED,IAAA,oBAAoB,CAAC,IAAY,EAAA;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAE1C,QAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3E;AAED,IAAA,mBAAmB,CAAC,IAAY,EAAA;AAC5B,QAAA,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAE5D,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KACxD;AAED,IAAA,eAAe,CAAC,IAAY,EAAA;AACxB,QAAA,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAE5D,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9F;AAED,IAAA,iBAAiB,CAAC,KAAa,EAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC;KACjE;IAED,YAAY,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;IAED,mBAAmB,GAAA;QACf,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AACpC,QAAA,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAErD,QAAA,OAAO,IAAI,CAAC;KACf;IAED,cAAc,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IAED,qBAAqB,GAAA;QACjB,MAAM,KAAK,GAAiB,EAAE,CAAC;AAC/B,QAAA,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;AACjC,YAAA,KAAK,CAAC,IAAI,CACN,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAC9G,CAAC;AACL,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KAChB;IAED,eAAe,GAAA;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B;IAED,sBAAsB,GAAA;QAClB,MAAM,KAAK,GAAwB,EAAE,CAAC;AACtC,QAAA,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAClC,YAAA,KAAK,CAAC,IAAI,CACN,IAAI,iBAAiB,CACjB,IAAI,EACJ,IAAI,CAAC,IAAI,EACT,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAC1E,IAAI,CAAC,UAAU,CAClB,CACJ,CAAC;AACL,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KAChB;AACJ;;MCrPY,eAAe,CAAA;AAMxB,IAAA,WAAA,CAAmB,OAAgB,EAAA;QAAhB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;AAC/B,QAAA,MAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;AAE5B,QAAA,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;AACvE,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC;AAE5C,QAAA,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,QAAA,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5D,QAAA,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAExD,QAAA,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACb,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KAC5B;AACJ;;ACzBD,MAAM,OAAQ,SAAQ,SAAS,CAAA;AAG3B,IAAA,WAAA,CAAY,eAAgC,EAAA;QACxC,KAAK,CAAC,eAAe,CAAC,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;KAC7C;AAED,IAAA,IAAI,CAAC,IAAY,EAAA;AACb,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;AACJ;;ACLD,MAAM,UAAU,CAAA;AAAhB,IAAA,WAAA,GAAA;QACI,IAAO,CAAA,OAAA,GAAgB,EAAE,CAAC;KA+N7B;AA7NG,IAAA,gBAAgB,CAAC,oBAA8B,EAAE,UAAsB,EAAE,MAAoB,EAAA;QACzF,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,WAAW,GAAG,CAAC,CAAC;AAEpB,QAAA,KAAK,IAAI,eAAe,IAAI,oBAAoB,EAAE;YAC9C,MAAM,eAAe,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnD,MAAM,aAAa,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;;AAGnD,YAAA,CAAC,aAAa,GAAG,aAAa,CAAC,QAAQ,IAAI,aAAa,GAAG,aAAa,CAAC,OAAO,MAAM,UAAU,GAAG,CAAC,CAAC,CAAC;AACtG,YAAA,UAAU,EAAE,CAAC;AACb,YAAA,IAAI,aAAa,GAAG,aAAa,CAAC,SAAS,EAAE;;gBAEzC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;gBAG3E,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACxC,oBAAA,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACf,iBAAA;AAED,gBAAA,MAAM,QAAQ,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,gBAAA,MAAM,MAAM,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxC,MAAM,SAAS,GAAG,IAAI,CAAC;gBACvB,MAAM,OAAO,GAAG,IAAI,CAAC;;gBAGrB,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxF,gBAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;AAGrF,gBAAA,MAAM,eAAe,GAAG;oBACpB,QAAQ;oBACR,MAAM;oBACN,SAAS;oBACT,OAAO;oBACP,IAAI;oBACJ,QAAQ;oBACR,SAAS;oBACT,UAAU;oBACV,UAAU;oBACV,WAAW;iBACd,CAAC;AACF,gBAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;AACjD,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,aAAA;AAAM,iBAAA,IAAI,aAAa,GAAG,aAAa,CAAC,MAAM,EAAE;;gBAE7C,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC3E,MAAM,SAAS,GAAG,IAAI,CAAC;AACvB,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC;;AAGrB,gBAAA,MAAM,CAAC,SAAS,EAAE,GAAG,cAAc,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrE,gBAAA,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACjE,MAAM,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;gBAG1F,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACxC,oBAAA,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;oBACZ,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,MAAM,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,iBAAA;gBAED,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;;AAG5E,gBAAA,MAAM,QAAQ,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,gBAAA,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC1E,MAAM,MAAM,GAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAEtF,gBAAA,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC9C,IAAI,UAAU,GAAa,EAAE,CAAC;gBAC9B,IAAI,QAAQ,GAAe,EAAE,CAAC;;AAG9B,gBAAA,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5B,oBAAA,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACvD,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;oBAE9E,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzF,oBAAA,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAClF,iBAAA;;AAGD,gBAAA,MAAM,eAAe,GAAG;oBACpB,QAAQ;oBACR,MAAM;oBACN,SAAS;oBACT,OAAO;oBACP,IAAI;oBACJ,QAAQ;oBACR,SAAS;oBACT,UAAU;oBACV,UAAU;oBACV,WAAW;iBACd,CAAC;AACF,gBAAA,MAAM,YAAY,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;gBACjG,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,eAAe,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AACjE,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,aAAA;AAAM,iBAAA,IAAI,aAAa,GAAG,aAAa,CAAC,OAAO,EAAE;;gBAE9C,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtF,gBAAA,MAAM,QAAQ,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,MAAM,MAAM,GAAG,QAAQ,CAAC;gBACxB,MAAM,SAAS,GAAG,IAAI,CAAC;;gBAGvB,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxF,gBAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;AAGrF,gBAAA,MAAM,eAAe,GAAG;oBACpB,QAAQ;oBACR,MAAM;oBACN,SAAS;oBACT,OAAO;oBACP,IAAI;oBACJ,QAAQ;oBACR,SAAS;oBACT,UAAU;oBACV,UAAU;oBACV,WAAW;iBACd,CAAC;AACF,gBAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9B,aAAA;AAED,YAAA,WAAW,EAAE,CAAC;AACjB,SAAA;KACJ;AAED,IAAA,WAAW,CAAC,MAAgB,EAAA;QACxB,IAAI,WAAW,GAAG,CAAC,CAAC;AACpB,QAAA,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;AAChC,YAAA,IAAI,SAAS,CAAC,UAAU,EAAE,EAAE;AACxB,gBAAA,WAAW,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,YAAY,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC;AAC1E,aAAA;AACD,YAAA,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAC1C,SAAA;KACJ;;IAGD,aAAa,CAAC,UAAsB,EAAE,aAAqB,EAAA;AACvD,QAAA,MAAM,eAAe,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC;AAErD,QAAA,MAAM,WAAW,GAAG,eAAe,GAAG,EAAE,CAAC;QAEzC,MAAM,cAAc,GAAG,CAAC,CAAC;QACzB,MAAM,cAAc,GAAG,UAAU,CAAC,UAAU,EAAE,GAAG,aAAa,CAAC;;AAG/D,QAAA,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC,SAAS,EAAE;gBAAE,SAAS;AAE7D,YAAA,IAAI,OAAO,CAAC,WAAW,EAAE,EAAE;AACvB,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;oBACb,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAEhC,IAAI,OAAO,CAAC,SAAS,EAAE;wBAAE,SAAS;oBAClC,IAAI,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,GAAG,cAAc;wBAAE,MAAM;AAEhE,oBAAA,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,cAAc,EAAE;wBAC3F,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;AAEzD,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7B,4BAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,cAAc,EAAE;gCAC7E,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC;AACxC,6BAAA;AACJ,yBAAA;wBACD,MAAM;AACT,qBAAA;AAED,oBAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,cAAc,EAAE;wBACvE,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;wBAC5C,OAAO,GAAG,OAAO,CAAC;AACrB,qBAAA;AACJ,iBAAA;AACJ,aAAA;AAAM,iBAAA,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE;AAC3B,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;oBACb,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAE9B,IAAI,OAAO,CAAC,SAAS,EAAE;wBAAE,SAAS;oBAClC,IAAI,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,cAAc;wBAAE,MAAM;AAElE,oBAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,cAAc,EAAE;wBACrE,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;wBAC5C,OAAO,GAAG,OAAO,CAAC;AACrB,qBAAA;AACJ,iBAAA;AACJ,aAAA;AACJ,SAAA;AAED,QAAA,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YAC/B,IAAI,MAAM,CAAC,SAAS,EAAE;gBAAE,SAAS;AAEjC,YAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACrC,YAAA,MAAM,aAAa,GAAG,UAAU,GAAG,WAAW,CAAC;AAE/C,YAAA,MAAM,CAAC,WAAW,GAAG,aAAa,CAAC;AACtC,SAAA;KACJ;AAED,IAAA,YAAY,CAAC,SAAiB,EAAA;AAC1B,QAAA,IAAI,GAAG,CAAC;QACR,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACjC,QAAA,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;AAChB,YAAA,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,SAAS,EAAE;gBACzC,EAAE,GAAG,GAAG,CAAC;AACZ,aAAA;AAAM,iBAAA;gBACH,EAAE,GAAG,GAAG,CAAC;AACZ,aAAA;AACJ,SAAA;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,GAAG,SAAS,EAAE;AAClF,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AACD,QAAA,OAAO,EAAE,CAAC;KACb;AACJ;;AC1OD,MAAM,QAAQ,CAAA;AAYV,IAAA,gBAAgB,CAAC,IAAc,EAAA;;AAE3B,QAAA,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,GACvG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AAEjD,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,EAAE,CAAC;AACvC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;AACzC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACnD;AACJ;;AC5BD,MAAM,MAAM,CAAA;AAIR,IAAA,WAAA,CACW,IAAY,EACnB,WAAmB,EACnB,IAAY,EACL,KAAa,EACb,SAAiB,EACjB,WAAmB,EACnB,MAAc,EACd,WAAmB,EACnB,OAAe,EAAA;QARf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAGZ,IAAK,CAAA,KAAA,GAAL,KAAK,CAAQ;QACb,IAAS,CAAA,SAAA,GAAT,SAAS,CAAQ;QACjB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAQ;QACnB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAQ;QACnB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;AAEtB,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,WAAW,EAAE;AACb,YAAA,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;AACjC,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC;AAC/E,SAAA;KACJ;AAED,IAAA,IAAI,GAAG,GAAA;QACH,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,GAAG,EAAE,CAAC;KAChD;AACJ,CAAA;AAED,MAAM,YAAY,CAAA;AAAlB,IAAA,WAAA,GAAA;QACI,IAAO,CAAA,OAAA,GAAa,EAAE,CAAC;KAmE1B;AAjEG,IAAA,gBAAgB,CAAC,iBAA2B,EAAA;QACxC,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,QAAA,KAAK,IAAI,YAAY,IAAI,iBAAiB,EAAE;AACxC,YAAA,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,GAAG,YAAY;iBAC/F,KAAK,CAAC,GAAG,CAAC;iBACV,GAAG,CAAC,MAAM,CAAC,CAAC;AAEjB,YAAA,IAAI,WAAW,EAAE;gBACb,aAAa,GAAG,UAAU,CAAC;AAC9B,aAAA;YAED,MAAM,MAAM,GAAG,IAAI,MAAM,CACrB,IAAI,EACJ,UAAU,EACV,aAAa,EACb,KAAK,EACL,SAAS,EACT,WAAW,EACX,MAAM,EACN,WAAW,EACX,OAAO,CACV,CAAC;AAEF,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAA;KACJ;AAED,IAAA,WAAW,CAAC,IAAY,EAAA;QACpB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE;gBAC7B,MAAM;AACT,aAAA;AACD,YAAA,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5B,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;AAED,IAAA,oBAAoB,CAAC,IAAY,EAAA;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE;gBAC7B,MAAM;AACT,aAAA;YAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;AAC9B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;AAED,IAAA,sBAAsB,CAAC,IAAY,EAAA;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE;gBAC7B,MAAM;AACT,aAAA;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;AAC7B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;AACJ;;ACtFD,MAAM,OAAO,CAAA;IAUT,WAAoB,CAAA,OAAA,GAAkB,EAAE,EAAE,IAAW,EAAA;QAAjC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAa;QACpC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,GACtF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAChC;AAEO,IAAA,YAAY,CAAC,IAAW,EAAA;AAC5B,QAAA,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;AAC9B,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC5B,QAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,QAAA,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AACpC,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC5B,QAAA,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AACxC,QAAA,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;AAC9B,QAAA,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;;AAGpC,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO;AACnB,aAAA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;aACxB,KAAK,CAAC,OAAO,CAAC;aACd,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC;;AAGjC,QAAA,MAAM,QAAQ,GAAG;YACb,WAAW;YACX,UAAU;YACV,YAAY;YACZ,cAAc;YACd,UAAU;YACV,gBAAgB;YAChB,WAAW;YACX,cAAc;SACjB,CAAC;QACF,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;;QAGzF,MAAM,YAAY,GAAe,EAAE,CAAC;QACpC,aAAa,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;AACtC,YAAA,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,SAAC,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,EAAE,CAAC;;QAGvB,OAAO,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,UAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACnD,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,YAAY,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,OAAO,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,QAAA,UAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;;AAGvE,QAAA,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC;AAC/B,QAAA,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AAEnC,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;AAC5C,QAAA,UAAU,CAAC,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;AAEpD,QAAA,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;KAC/F;IAED,OAAO,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;KAC/B;AAED,IAAA,OAAO,CAAC,IAAU,EAAA;QACd,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,GACtF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAE5B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAChC;IAED,sBAAsB,GAAA;QAClB,MAAM,eAAe,GAAa,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;AACjC,YAAA,IAAI,KAAK,CAAC,SAAS,KAAK,YAAY,EAAE;AAClC,gBAAA,eAAe,CAAC,IAAI,CAAE,KAAyB,CAAC,QAAQ,CAAC,CAAC;AAC7D,aAAA;AACL,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,eAAe,CAAC;KAC1B;IAED,gBAAgB,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;KACrC;AACJ;;ACtGD,MAAM,UAAU,CAAA;AAwBZ,IAAA,WAAA,CAAY,gBAAkC,EAAA;QAvB9C,IAAO,CAAA,OAAA,GAAmB,IAAI,CAAC;QAC/B,IAAM,CAAA,MAAA,GAAkB,IAAI,CAAC;QAEtB,IAAe,CAAA,eAAA,GAAY,KAAK,CAAC;QAEhC,IAAI,CAAA,IAAA,GAAgB,IAAI,CAAC;QAM1B,IAAQ,CAAA,QAAA,GAAY,IAAI,CAAC;QACxB,IAAS,CAAA,SAAA,GAAW,CAAC,CAAC;QAEtB,IAAa,CAAA,aAAA,GAAW,CAAC,CAAC;QA8G1B,IAAc,CAAA,cAAA,GAAG,CAAC,CAAC;QACnB,IAAiB,CAAA,iBAAA,GAAG,CAAC,CAAC;QACtB,IAAkB,CAAA,kBAAA,GAAW,CAAC,CAAC;AAC/B,QAAA,IAAA,CAAA,IAAI,GAAG,CAAC,IAAY,KAAI;YAC5B,IAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO;AAE1B,YAAA,IAAI,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAE/C,IAAI,CAAC,SAAS,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;AACxC,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;;AAG/B,YAAA,IAAI,QAAQ,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;gBACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;gBACpE,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAC7D,MAAM,QAAQ,GAAG,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;AACpD,gBAAA,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE;AAC/D,oBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;;AAG9D,oBAAA,IAAI,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE;wBAC1C,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,EAAE;AAChD,4BAAA,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AAC3B,yBAAA;AACD,wBAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACjC,qBAAA;AACJ,iBAAA;AACJ,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,EAAE;AAC1B,gBAAA,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;AAC7E,gBAAA,QAAQ,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;AAC5C,gBAAA,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AAC3B,aAAA;AAED,YAAA,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,SAAC,CAAC;AA3IE,QAAA,MAAM,EAAE,SAAS,EAAE,GAAG,gBAAgB,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvD;AAbD,IAAA,IAAW,YAAY,GAAA;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC7B;IACD,IAAW,YAAY,CAAC,KAAa,EAAA;AACjC,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;KACzE;IASD,iBAAiB,CAAC,KAAwB,EAAE,UAA6B,EAAA;QACrE,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,GAAG,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;YAE1F,QAAQ,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,MAAc,KAAI;AACzD,gBAAA,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;AAC3E,aAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,MAAc,KAAI;AACzD,gBAAA,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;AACvE,aAAC,CAAC,CAAC;AACN,SAAA;QAED,IAAI,UAAU,KAAK,SAAS,EAAE;AAC1B,YAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAC3C,SAAA;KACJ;AAED,IAAA,WAAW,CAAC,OAAgB,EAAA;AACxB,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACpB,YAAA,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,SAAA;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE;AAC7F,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9B,YAAA,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACvC,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACtC;AAED,IAAA,UAAU,CAAC,MAAc,EAAA;QACrB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AAE9C,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACpB,YAAA,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,KAAK,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;YACxE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACrC,SAAA;AAED,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KACpC;AAED,IAAA,kBAAkB,CAAC,IAAU,EAAA;;;AAGzB,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,IAAI,CAAC,OAAO,MAAK,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAA,EAAE;YACrC,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;AAC/C,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAE3B,YAAA,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,aAAA;AACJ,SAAA;KACJ;IAED,mBAAmB,GAAA;;AAGf,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;YAClC,OAAO;AACV,SAAA;QAED,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAExD,QAAA,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC;QAElD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;AAClD,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAEpC,YAAA,IAAI,UAAU,KAAK,aAAa,CAAC,OAAO,EAAE;gBACtC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,aAAA;AACJ,SAAA;KACJ;IA2CD,IAAI,GAAA;AACA,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACvC,QAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;AAE9D,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACtC;IAED,KAAK,GAAA;AACD,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;KAC3C;AAED,IAAA,IAAI,CAAC,SAAiB,EAAA;AAClB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC;KAC5D;AACJ;;;;"}